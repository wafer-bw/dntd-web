{"version":3,"file":"dntd.js","mappings":"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","sources":["webpack://dntd-web/./src/components/addShelvesComponent.ts","webpack://dntd-web/./src/components/breadcrumbComponent.ts","webpack://dntd-web/./src/components/composeComponent.ts","webpack://dntd-web/./src/components/entriesComponent.ts","webpack://dntd-web/./src/components/errorsComponent.ts","webpack://dntd-web/./src/components/googleComponent.ts","webpack://dntd-web/./src/components/index.ts","webpack://dntd-web/./src/components/journalsComponent.ts","webpack://dntd-web/./src/components/refinesComponent.ts","webpack://dntd-web/./src/components/searchbarComponent.ts","webpack://dntd-web/./src/components/shelvesComponent.ts","webpack://dntd-web/./src/components/syncStateComponent.ts","webpack://dntd-web/./src/components/testModeComponent.ts","webpack://dntd-web/./src/controllers/appStateController.ts","webpack://dntd-web/./src/controllers/caretController.ts","webpack://dntd-web/./src/controllers/entryController.ts","webpack://dntd-web/./src/controllers/errorsController.ts","webpack://dntd-web/./src/controllers/googleController.ts","webpack://dntd-web/./src/controllers/index.ts","webpack://dntd-web/./src/controllers/journalController.ts","webpack://dntd-web/./src/controllers/libraryController.ts","webpack://dntd-web/./src/controllers/searchController.ts","webpack://dntd-web/./src/controllers/syncerController.ts","webpack://dntd-web/./src/controllers/textController.ts","webpack://dntd-web/./src/controllers/urlController.ts","webpack://dntd-web/./src/errors/FriendlyError.ts","webpack://dntd-web/./src/errors/SyncerError.ts","webpack://dntd-web/./src/errors/index.ts","webpack://dntd-web/./src/factories/entryFactory.ts","webpack://dntd-web/./src/factories/index.ts","webpack://dntd-web/./src/factories/shelfFactory.ts","webpack://dntd-web/./src/factories/tagFactory.ts","webpack://dntd-web/./src/index.ts","webpack://dntd-web/./src/mocks/Gapi.ts","webpack://dntd-web/./src/mocks/index.ts","webpack://dntd-web/./src/models/AppStateModel.ts","webpack://dntd-web/./src/models/EntryModel.ts","webpack://dntd-web/./src/models/ErrorsModel.ts","webpack://dntd-web/./src/models/GoogleModel.ts","webpack://dntd-web/./src/models/JournalModel.ts","webpack://dntd-web/./src/models/LibraryModel.ts","webpack://dntd-web/./src/models/SearchModel.ts","webpack://dntd-web/./src/models/ServiceWorkerModel.ts","webpack://dntd-web/./src/models/ShelfModel.ts","webpack://dntd-web/./src/models/SyncerModel.ts","webpack://dntd-web/./src/models/TagModel.ts","webpack://dntd-web/./src/models/UrlModel.ts","webpack://dntd-web/./src/models/index.ts","webpack://dntd-web/./src/types/index.ts","webpack://dntd-web/./src/types/search.ts","webpack://dntd-web/./src/types/syncer.ts","webpack://dntd-web/./src/types/testing.ts","webpack://dntd-web/./src/views/index.ts","webpack://dntd-web/./src/views/journalView.ts","webpack://dntd-web/./src/views/libraryView.ts","webpack://dntd-web/./src/views/shelfView.ts","webpack://dntd-web/./src/views/signinView.ts","webpack://dntd-web/./src/views/testModeView.ts","webpack://dntd-web/external var \"m\"","webpack://dntd-web/webpack/bootstrap","webpack://dntd-web/webpack/startup"],"sourcesContent":["import m from \"mithril\"\nimport { libraryController } from \"../controllers\"\nimport { libraryModel } from \"..\"\n\nexport function addShelvesComponent() {\n\n    let newShelfUrls = \"\"\n    let addingShelves = false\n\n    function view() {\n        return m(\"#addShelves\", [\n            addShelvesMessage(),\n            addShelvesButton(),\n            addShelvesTextbox(),\n        ])\n    }\n\n    function addShelvesMessage() {\n        if (libraryModel.shelves.size !== 0) return\n        return m(\"span\", \"Add Google Spreadsheet URLs here to get started. \")\n    }\n\n    function addShelvesButton() {\n        return m(\"button\", {\n            id: \"addShelvesButton\",\n            onclick: async () => {\n                if (addingShelves) libraryController.addShelves(newShelfUrls)\n                newShelfUrls = \"\"\n                addingShelves = !addingShelves\n            }\n        }, (addingShelves) ? \" ✓ \" : \"+/-\")\n    }\n\n    function addShelvesTextbox() {\n        if (!addingShelves) return null\n        return m(\"textarea\", {\n            id: \"addShelvesText\",\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\n            oninput: (event: any) => newShelfUrls = event.target.value\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\n\nexport function breadcrumbComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn) return\n        return m(\"#breadcrumb\", urlController.getBreadcrumbTrail())\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { BaseEntryModel, JournalModel } from \"../models\"\nimport { urlController, journalController, caretController, entryController } from \"../controllers\"\n\nexport function composeComponent() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefixEntry = entryFactory.createBaseEntry()\n    const composeContentEntry = entryFactory.createBaseEntry()\n    const composeSuffixEntry = entryFactory.createBaseEntry()\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#compose\", [\n            m(\n                \"#prefix\",\n                composeNodeSettings(composePrefixEntry, journal, prefixSettings),\n                m.trust(composePrefixEntry.rendered)\n            ),\n            m(\n                \"#content\",\n                composeNodeSettings(composeContentEntry, journal, entrySettings),\n                m.trust(composeContentEntry.rendered)\n            ),\n            m(\n                \"#suffix\",\n                composeNodeSettings(composeSuffixEntry, journal, suffixSettings),\n                m.trust(composeSuffixEntry.rendered)\n            ),\n        ])\n    }\n\n    function getComposedContent() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: BaseEntryModel, journal: JournalModel, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event, journal),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any, journal: JournalModel) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let content = getComposedContent()\n            entryController.update(composeContentEntry, \"\")\n            let idx = journal.entries.length\n            journalController.createEntry(journal, idx, content)\n        }\n    }\n\n    function composeInput(event: any, entry: BaseEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function composeUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { JournalModel, JournalEntryModel } from \"../models\"\nimport {\n    caretController, urlController, entryController, journalController, searchController\n} from \"../controllers\"\n\nexport function entriesComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        let shelf = urlController.getActiveShelf()\n        const journal = urlController.getActiveJournal()\n        if (!shelf || !journal) return null\n\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesList(journal),\n        ])\n    }\n\n    function entriesList(journal: JournalModel) {\n        return searchController.filteredEntries(journal.entries)\n            .map(({ idx, entry }) => entryVnode(entry, idx))\n    }\n\n    function createEntryVnode(journal: JournalModel, idx: number): m.Vnode {\n        return m(\"button\", {\n            class: \"createEntry\",\n            id: `createEntry-${idx}`,\n            onclick: async () => journalController.createEntry(journal, idx)\n        }, \"ins\")\n    }\n\n    function entryVnode(entry: JournalEntryModel, entryIdx: number): m.Vnode {\n        return m(\".entryWrap\", {\n            id: `entry-${entry.id}`,\n            class: `entry-idx-${entryIdx}`\n        }, [\n            createEntryVnode(entry.journal, entryIdx),\n            entryContent(entry, entryIdx),\n            deleteEntryButton(entry, entryIdx),\n            createEntryVnode(entry.journal, entryIdx+1),\n        ])\n    }\n\n    function deleteEntryButton(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"button\", {\n            id: `del-entry-${entry.id}`,\n            class: `del del-entry-idx-${entryIdx}`,\n            onclick: async () => journalController.deleteEntry(entry.journal, entryIdx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"div\", entryContentSettings(entry, entryIdx), m.trust(entry.rendered))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: JournalEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    async function onEntryBlur(event: any, entry: JournalEntryModel, entryIdx: number) {\n        event.redraw = false\n        journalController.updateEntry(entry.journal, entry, entryIdx, event.target.innerText)\n    }\n\n    function entryContentSettings(entry: JournalEntryModel, entryIdx: number) {\n        return {\n            id: `entry-${entry.id}-content`,\n            contenteditable: \"true\",\n            class: `entry breakwrap column entry-idx-${entryIdx}-content`,\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, entryIdx),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { errorsModel } from \"..\"\nimport { FriendlyError } from \"../errors\"\nimport { errorsController } from \"../controllers\"\n\nexport function errorsComponent() {\n\n    function view() {\n        return m(\"#errorsContainer\", errorsList())\n    }\n\n    function errorsList() {\n        if (errorsModel.errors.length !== 0) {\n            return m(\"#errors\", errorsModel.errors.map((error, idx) => errorVnode(error, idx)))\n        }\n        return null\n    }\n\n    function errorVnode(error: FriendlyError, idx: number) {\n        return m(\"div\", [\n            m(\"span\", { id: `error-${idx}`}, error.friendlyMsg),\n            m(\"button\", { \n                onclick: () => errorsController.remove(idx),\n                class: \"dismissErrorButton\",\n            }, \"Dismiss\"),\n        ])\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { googleController } from \"../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return {\n            async: true,\n            defer: true,\n            src: googleModel.src,\n            onload: () => {\n                if (!googleModel.isSignedIn) {\n                    googleController.initGapi()\n                }\n            }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n","export * from \"./googleComponent\"\nexport * from \"./errorsComponent\"\nexport * from \"./composeComponent\"\nexport * from \"./entriesComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./refinesComponent\"\nexport * from \"./testModeComponent\"\nexport * from \"./journalsComponent\"\nexport * from \"./syncStateComponent\"\nexport * from \"./searchbarComponent\"\nexport * from \"./addShelvesComponent\"\nexport * from \"./breadcrumbComponent\"","import m from \"mithril\"\nimport { urlController } from \"../controllers\"\n\nexport function journalsComponent() {\n\n    function view() {\n        return m(\"#journals\", journalList())\n    }\n\n    function journalList() {\n        let shelf = urlController.getActiveShelf()\n        if (shelf === undefined) {\n            urlController.redirect(\"/library\")\n            return\n        }\n        return Array.from(shelf.journals.values()).map(journal => {\n            let link = `#/library/${journal.shelf.id}/${journal.id}`\n            return m(\"li\", m(\"a\", {\n                href: link,\n                id: `journal-${journal.id}`\n            }, journal.title))\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport function refinesComponent() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes() {\n        if (searchModel.simpleRefines.size === 0) return\n        return m(\".tagRefineWrap\", [\n            refineKeyVnode(simpleTagsHeader, searchModel.simpleRefines.size),\n            Array.from(searchModel.simpleRefines, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(searchModel.complexRefines, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: searchModel.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: TagModel) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", {\n                    type: \"checkbox\", checked: (tag.val === null)\n                        ? searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                        : searchModel.refinesQuery.vals.has(tag.clean)\n                }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: TagModel) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            searchModel.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            searchModel.refinesQuery.keys.has(key)\n                ? searchModel.refinesQuery.keys.delete(key)\n                : searchModel.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: TagModel) {\n        if (tag.val === null) {\n            searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                ? searchModel.refinesQuery.simpleKeys.delete(tag.clean)\n                : searchModel.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            searchModel.refinesQuery.vals.has(tag.clean)\n                ? searchModel.refinesQuery.vals.delete(tag.clean)\n                : searchModel.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { Caret } from \"../types\"\nimport { caretController, textController, searchController, urlController } from \"../controllers\"\n\n\nexport function searchbarComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(searchModel.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\")\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onSearchInput(event),\n            onupdate: () => onSearchUpdate(),\n            onkeydown: (event: any) => onSearchKeydown(event)\n        }\n    }\n\n    function onSearchInput(event: any) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        searchController.updateSearchbar(textController.escape(event.target.innerText))\n    }\n\n    function onSearchUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    function onSearchKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => searchController.updateSearchbar(\"\")\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ShelfModel } from \"../models\"\nimport { libraryController } from \"../controllers\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        let shelves = Array.from(libraryModel.shelves.entries())\n        return m(\"#shelvesList\", shelves.map(([id, shelf]) => shelfNode(id, shelf)))\n    }\n\n    function delShelfButton(id: string) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: () => libraryController.removeShelves([id])\n        }, \"del\")\n    }\n\n    function retryShelfLoadButton(id: string) {\n        return m(\"button\", {\n            onclick: () => libraryController.loadShelves(true, [id])\n        }, \"retry\")\n    }\n\n    function shelfNode(id: string, shelf: ShelfModel | undefined) {\n        if (shelf === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", id)\n            ])\n        } else if (shelf.error) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", { class: \"solidError\" }, `${id}`),\n                retryShelfLoadButton(id)\n            ])\n        } else {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"a\", {\n                    href: `#/library/${id}`,\n                    id: `shelf-${id}`\n                }, shelf.title)\n            ])\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { SyncerState, TestMode } from \"../types\"\nimport { syncerController } from \"../controllers\"\nimport { syncerModel, googleModel, libraryModel, appStateModel } from \"..\"\n\nexport function syncStateComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn || libraryModel.shelves.size === 0 || appStateModel.testMode === TestMode.DEMO) return\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncerModel.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"Cloud synced\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive\"\n                break\n            case SyncerState.INITIALIZING:\n                txt = \"Initializing\"\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncerModel.state)\n    }\n\n    function unpauseSync() {\n        if (syncerModel.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncerController.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncerModel.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { appStateModel } from \"..\"\nimport { TestMode } from \"../types\"\nimport { appStateController, urlController } from \"../controllers\"\n\nexport function testModeComponent() {\n\n    function view() {\n        if (appStateModel.testMode !== TestMode.OFF) {\n            return m(\"#testMode\", [\n                m(\"span\", `${appStateModel.testMode} active `),\n                stopDemoButton()\n            ])\n        }\n        return\n    }\n\n    function stopDemoButton() {\n        if (appStateModel.testMode === TestMode.DEMO) {\n            return m(\"button\", { onclick: () => {\n                appStateController.updateTestMode(TestMode.OFF)\n                urlController.redirect(\"/library\")\n            }, class: \"stopDemo\" }, \"Start Now\")\n        }\n        return\n    }\n\n    return { view: view }\n}\n","import { appStateModel } from \"..\"\nimport { syncerController } from \"./syncerController\"\nimport { TestMode, instanceOfTestMode } from \"../types\"\n\nexport const appStateController = {\n    updateTestMode: updateTestMode,\n}\n\nfunction updateTestMode(mode: TestMode | string | undefined) {\n    if (mode !== undefined && instanceOfTestMode(mode) && mode !== appStateModel.testMode) {\n        appStateModel.testMode = mode\n        syncerController.updateTestMode(mode)\n    }\n}\n","export const caretController = {\n    getCaretPosition: getCaretPosition,\n    setCaretPosition: setCaretPosition,\n}\n\nfunction node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nfunction getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nfunction setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","import { textController } from \".\"\nimport { tagFactory } from \"../factories\"\nimport { JournalEntryModel, TagModel, BaseEntryModel } from \"../models\"\n\nconst tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\n\nexport const entryController = {\n    save: save,\n    update: update,\n}\n\nfunction save(entry: JournalEntryModel, content: string) {\n    entry.saved = content\n    entry.savedClean = textController.clean(entry.saved)\n    entry.tags = getTags(entry.tagMatches)\n}\n\nfunction update(entry: BaseEntryModel | JournalEntryModel, content: string) {\n    entry.raw = content\n    entry.clean = textController.clean(content)\n    entry.safe = textController.escape(entry.raw)\n    entry.tokens = tokenize(entry.clean)\n    entry.tagMatches = getTagMatches(entry.safe)\n    entry.rendered = render(entry.safe, entry.tagMatches)\n}\n\nfunction render(text: string, tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): string {\n    for (let { tag, match } of tagMatches) {\n        let chars = text.split(\"\")\n        chars.splice(match.index!, match[0].length, tag.rendered)\n        text = chars.join(\"\")\n    }\n    return text\n}\n\nfunction getTags(tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): Map<string, TagModel> {\n    let tags: Map<string, TagModel> = new Map()\n    for (let { tag } of tagMatches) {\n        if (tags.has(tag.clean)) {\n            tags.get(tag.clean)!.frq += 1\n        } else {\n            tags.set(tag.clean, tag)\n        }\n    }\n    return tags\n}\n\nfunction getTagMatches(text: string): { tag: TagModel, match: RegExpMatchArray }[] {\n    let tagMatches = []\n    let matchesIter = text.matchAll(tagPattern)\n    for (let match of matchesIter) {\n        let tag = tagFactory.createTag(match[0], match[1], match[2], match[3], match[4])\n        tagMatches.push({ tag: tag, match: match })\n    }\n    tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n    return tagMatches\n}\n\nfunction tokenize(text: string): string[] {\n    let tokens = text.split(\" \")\n    return tokens.filter(token => {\n        return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n    })\n}\n","import { errorsModel } from \"..\"\nimport { FriendlyError } from \"../errors\"\n\nexport const errorsController = {\n    add: add,\n    remove: remove,\n}\n\nfunction add(errorMsg: string, friendlyMsg: string) {\n    console.error(errorMsg)\n    errorsModel.add(new FriendlyError(errorMsg, friendlyMsg))\n}\n\nfunction remove(idx: number) {\n    errorsModel.remove(idx)\n}\n","import m from \"mithril\"\nimport { MockGapi } from \"../mocks\"\nimport { TestMode } from \"../types\"\nimport { googleModel, appStateModel } from \"..\"\nimport { syncerController, libraryController } from \"../controllers\"\nimport { urlController } from \"./urlController\"\n\nexport const googleController = {\n    signIn: signIn,\n    signOut: signOut,\n    initGapi: initGapi,\n}\n\nfunction signOut() {\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\n}\n\nfunction signIn() {\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\n}\n\nfunction initGapi() {\n    let gapi_ = (appStateModel.testMode === TestMode.OFF) ? gapi : new MockGapi()\n    googleModel.gapi_ = gapi_\n    googleModel.gapi_.load('auth2', () => {\n        googleModel.gapi_!.auth2.init({\n            scope: googleModel.scope, client_id: googleModel.clientId\n        }).then(() => {\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\n        })\n    })\n}\n\nasync function isSignedIn(signedIn: boolean) {\n    googleModel.isSignedIn = signedIn\n    if (googleModel.isSignedIn) {\n        googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\n        syncerController.updateAuth(googleModel.token)\n        libraryController.loadShelves()\n    } else {\n        libraryController.removeShelves()\n        urlController.redirect(\"/\")\n    }\n    m.redraw()\n}\n","export * from \"./urlController\"\nexport * from \"./textController\"\nexport * from \"./entryController\"\nexport * from \"./caretController\"\nexport * from \"./searchController\"\nexport * from \"./googleController\"\nexport * from \"./syncerController\"\nexport * from \"./errorsController\"\nexport * from \"./libraryController\"\nexport * from \"./journalController\"\nexport * from \"./appStateController\"\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { tagFactory, entryFactory } from \"../factories\"\nimport { JournalEntryModel, JournalModel, TagModel } from \"../models\"\nimport { syncerController, searchController, entryController, errorsController } from \".\"\nimport { ErrorPayload } from \"../types\"\n\nexport const journalController = {\n    addEntry: addEntry,\n    createEntry: createEntry,\n    updateEntry: updateEntry,\n    moveEntry: moveEntry,\n    buildTags: buildTags,\n    deleteEntry: deleteEntry,\n    loadEntries: loadEntries,\n}\n\nfunction unloadOtherJournals(keepJournal: JournalModel) {\n    libraryModel.shelves.forEach(shelf => {\n        if (shelf === undefined) return\n        shelf.journals.forEach(journal => {\n            if (keepJournal.shelf.id !== journal.shelf.id || keepJournal.id !== journal.id) {\n                unloadEntries(journal)\n            }\n        })\n    })\n}\n\nfunction unloadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    journal.entries = []\n    journal.loaded = false\n}\n\nfunction loadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    unloadOtherJournals(journal)\n    syncerController.getRows(journal.shelf.id, journal.id, journal.title)\n        .then(payload => {\n            payload.rows.forEach((content, idx) => addEntry(journal, idx, content))\n            journal.loaded = true\n            m.redraw()\n        })\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n}\n\nfunction addEntry(journal: JournalModel, idx: number, content: string | undefined) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    journal.createEntry(idx, entry)\n    entryController.save(entry, content)\n    buildTags(journal)\n}\n\nfunction createEntry(journal: JournalModel, idx: number, content?: string) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    journal.createEntry(idx, entry)\n    entryController.save(entry, content)\n    syncerController.createRow(journal.shelf.id, journal.id, idx)\n    syncerController.updateRow(journal.shelf.id, journal.id, journal.title, idx, entry.raw)\n    buildTags(journal)\n}\n\nfunction updateEntry(journal: JournalModel, entry: JournalEntryModel, idx: number, content: string) {\n    if (entry.saved === content) return\n    entryController.save(entry, content)\n    syncerController.updateRow(journal.shelf.id, journal.id, journal.title, idx, entry.raw)\n    buildTags(journal)\n}\n\nfunction deleteEntry(journal: JournalModel, idx: number) {\n    journal.deleteEntry(idx)\n    syncerController.deleteRow(journal.shelf.id, journal.id, idx)\n    buildTags(journal)\n}\n\nfunction moveEntry(journal: JournalModel, fromIdx: number, toIdx: number) {\n    if (fromIdx === toIdx) return\n    journal.moveEntry(fromIdx, toIdx)\n    buildTags(journal)\n}\n\nfunction buildTags(journal: JournalModel) {\n    let tags: Map<string, TagModel> = new Map()\n    let entries = Array.from(journal.entries.values())\n    for (let { entry } of entries.reverse()) {\n        for (let [key, tag] of entry.tags) {\n            if (tags.has(key)) {\n                tags.get(key)!.frq += tag.frq\n            } else {\n                tags.set(key, tagFactory.createTag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n            }\n        }\n    }\n    journal.tags = tags\n    searchController.buildRefines(journal)\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { shelfFactory } from \"../factories\"\nimport { urlController, journalController, syncerController, errorsController } from \"../controllers\"\n\nconst spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n\nexport const libraryController = {\n    addShelves: addShelves,\n    loadShelves: loadShelves,\n    removeShelves: removeShelves,\n    getSpreadsheetIdsFromUrls: getSpreadsheetIdsFromUrls,\n}\n\nfunction addShelves(urls: string) {\n    let ids = getSpreadsheetIdsFromUrls(urls)\n    ids = ids.filter(id => !libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.set(id, undefined))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n    loadShelves(false, ids)\n}\n\nfunction removeShelves(ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    ids = ids.filter(id => libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.delete(id))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n}\n\nfunction loadShelves(reloadLoaded?: boolean, ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    if (reloadLoaded) {\n        ids.forEach(id => libraryModel.shelves.set(id, undefined))\n        m.redraw()\n    }\n    ids.filter(id => !libraryModel.shelves.get(id))\n        .forEach(id => syncerController.getSpreadsheet(id)\n        .then(payload => {\n            let shelf = shelfFactory.createShelf(id, payload.spreadsheet)\n            libraryModel.shelves.set(shelf.id, shelf)\n            let journal = urlController.getActiveJournal()\n            if (journal && journal.shelf === shelf) {\n                journalController.loadEntries(journal)\n            }\n        })\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n            let shelf = shelfFactory.createShelf(id, undefined, true)\n            libraryModel.shelves.set(id, shelf)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n    )\n}\n\nfunction getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n    let ids: string[] = []\n    if (urls) {\n        Array.from(urls.matchAll(spreadsheetIdPattern)).forEach(m => ids.push(m[1]))\n    }\n    return ids\n}\n","import { searchModel } from \"..\"\nimport { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { entryController } from \"./entryController\"\nimport { TagModel, JournalModel, JournalEntryModel } from \"../models\"\n\nexport const searchController = {\n    reset: reset,\n    buildRefines: buildRefines,\n    filteredEntries: filteredEntries,\n    updateSearchbar: updateSearchbar,\n}\n\nfunction updateSearchbar(content: string) {\n    entryController.update(searchModel.barQuery, content)\n}\n\nfunction reset() {\n    searchModel.searchType = SearchType.NONE\n    searchModel.barQuery = entryFactory.createBaseEntry()\n    searchModel.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n}\n\nfunction buildRefines(journal: JournalModel) {\n    let simpleRefines: Map<string, TagModel> = new Map()\n    let complexRefines: Map<string, TagModel[]> = new Map()\n\n    for (let tag of journal.tags.values()) {\n        if (tag.val === null) {\n            let key = `${tag.flag}${tag.cleanKey}`\n            if (!simpleRefines.has(key)) {\n                simpleRefines.set(key, tag)\n            }\n        } else {\n            let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n            if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n            complexRefines.get(key)!.push(tag)\n        }\n    }\n\n    searchModel.simpleRefines = new Map([...simpleRefines.entries()])\n    searchModel.complexRefines = new Map([...complexRefines.entries()].sort())\n\n    cleanRefines()\n}\n\nfunction cleanRefines() {\n    // Clean stale simple tag key (refine val) selections\n    for (let [key,] of searchModel.refinesQuery.simpleKeys) {\n        if (!searchModel.simpleRefines.has(key)) {\n            searchModel.refinesQuery.simpleKeys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag key selections\n    for (let key of searchModel.refinesQuery.keys) {\n        if (!searchModel.complexRefines.has(key)) {\n            searchModel.refinesQuery.keys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag val\n    for (let [key,] of searchModel.refinesQuery.vals) {\n        if (!Array.from(searchModel.complexRefines.values()).some(tags => tags.some(tag => tag.clean === key))) {\n            searchModel.refinesQuery.vals.delete(key)\n        }\n    }\n}\n\nfunction filteredEntries(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    if (searchModel.query.tokens.length === 0) {\n        searchModel.searchType = SearchType.NONE\n        filteredEntries = entries.map(({ entry }, idx) => { return { idx, entry } })\n    } else {\n        searchModel.searchType = SearchType.AND\n        filteredEntries = search(entries)\n        if (filteredEntries.length === 0) {\n            searchModel.searchType = SearchType.OR\n            filteredEntries = search(entries)\n        }\n    }\n    return filteredEntries\n}\n\nfunction search(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let query = searchModel.query\n    let sourceEntries = entries\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    for (let [idx, { entry }] of sourceEntries.entries()) {\n        switch (searchModel.searchType) {\n            case SearchType.AND:\n                if (query.tokens.every(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n            case SearchType.OR:\n                if (query.tokens.some(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n        }\n    }\n    return filteredEntries\n}\n\nfunction match(token: string, entry: JournalEntryModel) {\n\n    if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token.substring(1)) === undefined\n    } else if (token.startsWith(\"-\")) {\n        return !entry.savedClean.includes(token.substring(1))\n    } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token) !== undefined\n    } else {\n        return entry.savedClean.includes(token)\n    }\n}\n","import m from \"mithril\"\nimport { errorsController } from \".\"\nimport { googleModel, syncerModel } from \"..\"\nimport { SyncerPayloadType, TestMode, SyncerPayload, ErrorPayload } from \"../types\"\n\nconst worker = new Worker(\"./js/syncWebWorker.js\")\nworker.onmessage = (msg: MessageEvent) => onMessage(msg)\n\nexport const syncerController = {\n    unpause: unpause,\n    getRows: getRows,\n    createRow: createRow,\n    deleteRow: deleteRow,\n    updateRow: updateRow,\n    updateAuth: updateAuth,\n    updateTestMode: updateTestMode,\n    getSpreadsheet: getSpreadsheet,\n}\n\nasync function updateTestMode(testMode: TestMode) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.TEST_MODE_UPDATE,\n        testMode: testMode,\n        rejects: false,\n    }, worker)\n}\n\nfunction updateAuth(token: string | undefined) {\n    if (token === undefined) return\n    return syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.AUTH_UPDATE,\n        token: token,\n        rejects: false,\n    }, worker)\n}\n\nfunction getSpreadsheet(spreadsheetId: string) {\n    let spreadsheet: gapi.client.sheets.Spreadsheet | undefined = undefined\n    return syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.GET_SPREADSHEET,\n        spreadsheetId: spreadsheetId,\n        spreadsheet: spreadsheet,\n        rejects: true,\n    }, worker)\n}\n\nasync function createRow(shelfId: string, journalId: number, idx: number) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.CREATE_ROW,\n        spreadsheetId: shelfId,\n        sheetId: journalId,\n        idx: idx,\n        rejects: false,\n    }, worker)\n}\n\nfunction getRows(shelfId: string, journalId: number, journalTitle: string) {\n    let rows: string[] = []\n    return syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.GET_ROWS,\n        spreadsheetId: shelfId,\n        sheetTitle: journalTitle,\n        sheetId: journalId,\n        rows: rows,\n        rejects: true,\n    }, worker)\n}\n\nasync function updateRow(shelfId: string, journalId: number, journalTitle: string, idx: number, content: string) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.UPDATE_ROW,\n        spreadsheetId: shelfId,\n        sheetTitle: journalTitle,\n        sheetId: journalId,\n        content: content,\n        idx: idx,\n        rejects: false,\n    }, worker)\n}\n\nasync function deleteRow(shelfId: string, journalId: number, idx: number) {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.DELETE_ROW,\n        spreadsheetId: shelfId,\n        sheetId: journalId,\n        idx: idx,\n        rejects: false,\n    }, worker)\n}\n\n// TODO - NICE TO HAVE\n// async function moveRow() {}\n\nasync function unpause() {\n    return await syncerModel.pushSyncerTask({\n        type: SyncerPayloadType.UNPAUSE,\n        rejects: false,\n    }, worker)\n}\n\nfunction onMessage(msg: MessageEvent) {\n    let { id, payload, error }: { id: string | null, payload: SyncerPayload, error: ErrorPayload } = msg.data\n    if (id !== null && syncerModel.requests.has(id)) {\n        syncerModel.requests.get(id)!({ payload, error })\n    } else if (payload !== undefined) {\n        switch (payload.type) {\n            case SyncerPayloadType.SYNC_STATE:\n                syncerModel.state = payload.state\n                m.redraw()\n                break\n            case SyncerPayloadType.ERROR:\n                errorsController.add(payload.error.message, payload.friendlyMsg)\n                break\n            case SyncerPayloadType.TOKEN_REQUEST:\n                updateAuth(googleModel.token)\n                break\n        }\n    } else {\n        errorsController.add(\"undefined payload\", \"An unexpected error occurred.\")\n    }\n}\n","export const textController = {\n    escape: escape,\n    clean: clean,\n}\n\nfunction escape(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n\nfunction clean(content: string): string {\n    return content.toLowerCase()\n}\n","import m from \"mithril\"\nimport { libraryModel, urlModel } from \"..\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport const urlController = {\n    redirect: redirect,\n    getActiveShelf: getActiveShelf,\n    getActiveJournal: getActiveJournal,\n    getBreadcrumbTrail: getBreadcrumbTrail,\n}\n\nfunction redirect(hash: string) {\n    urlModel.hash = hash\n}\n\nfunction getActiveShelf(): ShelfModel | undefined {\n    let id = urlModel.shelfId\n    if (id === undefined) return undefined\n    return libraryModel.shelves.get(id)\n}\n\nfunction getActiveJournal(): JournalModel | undefined {\n    let id = urlModel.journalId\n    let shelf = getActiveShelf()\n    if (id === undefined || shelf === undefined) return undefined\n    return shelf.journals.get(id)\n}\n\nfunction getBreadcrumbTrail() {\n    let breadcrumb: m.Vnode[] = []\n    let hash = urlModel.hash.split(\"?\")[0].split(\"/\").filter(crumb => crumb !== \"#\" && crumb !== \"\")\n    let shelfId: string | undefined = undefined\n    for (let i = 0; i < hash.length; i++) {\n        let crumb = hash[i]\n        let trail = \"#/\" + hash.slice(0, i + 1).join(\"/\")\n        if (i === 1) {\n            shelfId = crumb\n            crumb = libraryModel.shelves.get(crumb)?.title || crumb\n        } else if (i === 2 && shelfId !== undefined) {\n            crumb = libraryModel.shelves.get(shelfId)?.journals.get(parseInt(crumb))?.title || crumb\n        }\n        if (i !== 0) breadcrumb.push(m(\"span\", \" / \"))\n        if (i === hash.length - 1) {\n            breadcrumb.push(m(\"span\", `${crumb}`))\n        } else {\n            breadcrumb.push(m(\"a\", {\n                href: trail,\n                id: `bc-${trail.replace(\"#\", \"\").replace(\"/\", \"\")}`,\n            }, `${crumb}`))\n        }\n    }\n    return breadcrumb\n}\n","export class FriendlyError extends Error {\n    public msg: string\n    public friendlyMsg: string\n\n    constructor(errorMsg: string, friendlyMsg: string) {\n        super(errorMsg)\n        this.msg = errorMsg\n        this.friendlyMsg = friendlyMsg\n    }\n}\n","import { ErrorPayload, SyncerPayloadType } from \"../types\"\n\nexport class SyncerError extends Error {\n    public payload: ErrorPayload\n\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean, pause?: boolean, rejects?: boolean) {\n        super(errorMsg)\n        this.payload = {\n            pause: (pause !== undefined) ? pause : true,\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: SyncerPayloadType.ERROR,\n            rejects: (rejects !== undefined) ? rejects : false,\n        }\n    }\n}\n","export * from \"./GapiErrors\"\nexport * from \"./SyncerError\"\nexport * from \"./FriendlyError\"\n","import { entryController } from \"../controllers\"\nimport { JournalEntryModel, ShelfModel, JournalModel, BaseEntryModel } from \"../models\"\n\nlet entryCounter = -1\n\nexport const entryFactory = {\n    createBaseEntry: createBaseEntry,\n    createJournalEntry: createJournalEntry\n}\n\nfunction createBaseEntry(content?: string) {\n    let entry = new BaseEntryModel()\n    entryController.update(entry, content || \"\")\n    return entry\n}\n\nfunction createJournalEntry(shelf: ShelfModel, journal: JournalModel, content: string) {\n    let entry = new JournalEntryModel(shelf, journal, entryCounter += 1)\n    entryController.update(entry, content)\n    return entry\n}\n","export * from \"./tagFactory\"\nexport * from \"./shelfFactory\"\nexport * from \"./entryFactory\"\n","import { ShelfModel, JournalModel } from \"../models\"\n\nexport const shelfFactory = {\n    createShelf: createShelf,\n}\n\nfunction createShelf(spreadsheetId: string, spreadsheet?: gapi.client.sheets.Spreadsheet, error?: boolean): ShelfModel {\n    if (\n        spreadsheet !== undefined &&\n        spreadsheet.spreadsheetId !== undefined &&\n        spreadsheet.properties !== undefined &&\n        spreadsheet.properties.title !== undefined &&\n        spreadsheet.sheets !== undefined\n    ) {\n        let shelf = new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title)\n        getJournals(shelf, spreadsheet.sheets).forEach(journal => shelf.journals.set(journal.id, journal))\n        return shelf\n    }\n    return new ShelfModel(spreadsheetId, undefined, error)\n}\n\nfunction getJournals(shelf: ShelfModel, sheets: gapi.client.sheets.Sheet[]): JournalModel[] {\n    let journals: JournalModel[] = []\n    sheets.forEach(sheet => {\n        if (\n            sheet.properties !== undefined &&\n            sheet.properties.title !== undefined &&\n            sheet.properties.sheetId !== undefined\n        ) {\n            let journal = new JournalModel(\n                shelf, sheet.properties.sheetId, sheet.properties.title\n            )\n            if (journal === undefined) return\n            journals.push(journal)\n        }\n    })\n    return journals\n}\n","import { textController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport const tagFactory = {\n    createTag: createTag\n}\n\nfunction createTag(raw: string, flag: string, key: string, separator?: string | null, val?: string | null) {\n    separator = (separator !== undefined) ? separator : null\n    val = (val !== undefined) ? val : null\n    let clean = cleanTagString(raw)\n    let cleanKey = cleanTagString(key)\n    let cleanVal = (val !== null) ? cleanTagString(val) : null\n\n    let renderedKey = \"<span onclick=\\\"tagOnClick(event, '\"\n        + flag\n        + cleanKey\n        + ((separator !== null) ? separator : \"\")\n        + \"')\\\" class=\\\"\"\n        + ((separator !== null) ? \"tagKey\" : (val === null) ? \"simpleTag\" : \"roundTagVal\")\n        + \"\\\">\"\n        + flag\n        + key\n        + \"</span>\"\n\n    let renderedVal = \"\"\n\n    if (separator !== undefined && separator !== null) {\n        renderedVal = \"<span onclick=\\\"tagOnClick(event, '\"\n            + flag\n            + cleanKey\n            + separator\n            + ((cleanVal !== null) ? cleanVal.replace(/'/, \"\\\\'\") : \"\")\n            + \"')\\\" class=\\\"tagVal\\\">\"\n            + separator\n            + ((val !== null) ? val : \"\")\n            + \"</span>\"\n    }\n\n    return new TagModel(raw, flag, key, separator, val, clean, cleanKey, cleanVal, renderedKey + renderedVal)\n\n}\n\nfunction cleanTagString(str: string) {\n    str = textController.escape(str)\n    str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\n    str = str.toLowerCase()\n    return str\n}\n","import m from \"mithril\"\nimport { signinView, libraryView, shelfView, journalView, testModeView } from \"./views\"\nimport {\n    ServiceWorkerModel, SyncerModel, LibraryModel, GoogleModel, UrlModel, SearchModel,\n    AppStateModel, ErrorsModel\n} from \"./models\"\n\nexport const errorsModel = ErrorsModel.getInstance()\nexport const appStateModel = AppStateModel.getInstance()\nexport const serviceWorkerModel = ServiceWorkerModel.getInstance()\nexport const googleModel = GoogleModel.getInstance()\nexport const syncerModel = SyncerModel.getInstance()\nexport const libraryModel = LibraryModel.getInstance()\nexport const urlModel = UrlModel.getInstance()\nexport const searchModel = SearchModel.getInstance()\n\nconst root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,        // TODO switch to be about page\n        \"/demo\": testModeView,\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/setTestMode/:testMode\": testModeView,\n        \"/library/:shelfId/:journalId\": journalView,\n        \"/demo/:shelfId/:journalId\": journalView,\n    })\n}\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","export * from \"./Gapi\"\n","import { TestMode } from \"../types\"\n\nexport class AppStateModel {\n    private static instance: AppStateModel\n\n    public testMode: TestMode\n\n    private constructor() {\n        this.testMode = TestMode.OFF\n    }\n\n    static getInstance(): AppStateModel {\n        return (!AppStateModel.instance) ? new AppStateModel() : AppStateModel.instance\n    }\n}\n","import { TagModel } from \".\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport class BaseEntryModel {\n    public raw: string = \"\"\n    public safe: string = \"\"\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public tags: Map<string, TagModel> = new Map()\n    public tagMatches: { tag: TagModel, match: RegExpMatchArray }[] = []\n}\n\nexport class JournalEntryModel extends BaseEntryModel {\n    readonly id: number\n    readonly shelf: ShelfModel\n    readonly journal: JournalModel\n\n    public saved: string = \"\"\n    public savedClean: string = \"\"\n\n    constructor(shelf: ShelfModel, journal: JournalModel, entryId: number) {\n        super()\n        this.id = entryId\n        this.shelf = shelf\n        this.journal = journal\n    }\n}\n","import { FriendlyError } from \"../errors\"\n\nexport class ErrorsModel {\n    private static instance: ErrorsModel\n\n    public errors: FriendlyError[] = []\n\n    private constructor() {}\n\n    add(error: FriendlyError) {\n        this.errors.push(error)\n    }\n\n    remove(idx: number) {\n        this.errors.splice(idx, 1)\n    }\n\n    static getInstance(): ErrorsModel {\n        return (!ErrorsModel.instance) ? new ErrorsModel() : ErrorsModel.instance\n    }\n}\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nexport class GoogleModel {\n    private static instance: GoogleModel\n\n    readonly src: string\n    readonly scope: string\n    readonly clientId: string\n\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    private constructor() {\n        this.isSignedIn = false\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\n            \"https://www.googleapis.com/auth/spreadsheets\",\n        ].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    static getInstance() {\n        return (!GoogleModel.instance) ? new GoogleModel() : GoogleModel.instance\n    }\n\n    get token(): string | undefined {\n        if (!this.user) return\n        let auth = this.user.getAuthResponse()\n        return auth.access_token\n    }\n}\n","import { ShelfModel } from \"./ShelfModel\"\nimport { JournalEntryModel, TagModel } from \".\"\n\nexport class JournalModel {\n    readonly id: number\n    readonly title: string\n    readonly shelf: ShelfModel\n\n    public loaded: boolean\n    public tags: Map<string, TagModel>\n    public entries: { id: number, entry: JournalEntryModel }[]\n\n    constructor(shelf: ShelfModel, journalId: number, journalTitle: string) {\n        this.entries = []\n        this.shelf = shelf\n        this.loaded = false\n        this.id = journalId\n        this.tags = new Map()\n        this.title = journalTitle\n    }\n\n    public createEntry(idx: number, entry: JournalEntryModel) {\n        this.entries.splice(idx, 0, { id: entry.id, entry })\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        this.entries.splice(toIdx, 0, this.entries.splice(fromIdx, 1)[0])\n    }\n\n}\n","import { ShelfModel } from \".\"\n\nexport class LibraryModel {\n    private static instance: LibraryModel\n    \n    public shelves: Map<string, ShelfModel | undefined>\n\n    private constructor() {\n        this.shelves = new Map()\n        this.shelfIds.forEach(id => this.shelves.set(id, undefined))\n    }\n\n    static getInstance() {\n        return (!LibraryModel.instance) ? new LibraryModel() : LibraryModel.instance\n    }\n\n    set shelfIds(ids: string[]) {\n        if (ids.length === 0) {\n            localStorage.removeItem(\"spreadsheetIds\")\n        } else {\n            localStorage.setItem(\"spreadsheetIds\", ids.join(\",\"))\n        }\n    }\n    get shelfIds(): string[] {\n        let ids = localStorage.getItem(\"spreadsheetIds\")\n        return (ids === null) ? [] : ids.split(\",\")\n    }\n}\n","import { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { TagModel, BaseEntryModel } from \".\"\n\nexport class SearchModel {\n    private static instance: SearchModel\n\n    public searchType: SearchType = SearchType.NONE\n    public simpleRefines: Map<string, TagModel> = new Map()\n    public complexRefines: Map<string, TagModel[]> = new Map()\n    public barQuery: BaseEntryModel = entryFactory.createBaseEntry()\n    public refinesQuery: {\n        keys: Set<string>,\n        vals: Map<string, TagModel>,\n        simpleKeys: Map<string, TagModel>\n    } = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    private constructor() { }\n\n    static getInstance(): SearchModel {\n        return (!SearchModel.instance) ? new SearchModel() : SearchModel.instance\n    }\n\n    get query(): BaseEntryModel {\n        return entryFactory.createBaseEntry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n}\n","import { errorsController } from \"../controllers\"\n\nexport class ServiceWorkerModel {\n    private static instance: ServiceWorkerModel\n\n    private constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            errorsController.add(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n\n    static getInstance(): ServiceWorkerModel {\n        return (!ServiceWorkerModel.instance) ? new ServiceWorkerModel() : ServiceWorkerModel.instance\n    }\n}\n","import { JournalModel } from \".\"\n\nexport class ShelfModel {\n    readonly id: string\n    readonly title: string | undefined\n\n    public error: boolean\n    public journals: Map<number, JournalModel> = new Map()\n\n    constructor(id: string, title?: string, error?: boolean) {\n        this.id = id\n        this.title = title\n        this.error = (error === undefined) ? false : error\n    }\n\n}\n","import m from \"mithril\"\nimport { errorsController } from \"../controllers\"\nimport { SyncerState, SyncerPayload, ErrorPayload } from \"../types\"\n\nexport class SyncerModel {\n    private static instance: SyncerModel\n\n    public requestsCounter: number\n    public requests: Map<string, Function>\n    public state: SyncerState\n\n    private constructor() {\n        this.requestsCounter = 0\n        this.requests = new Map()\n        this.state = SyncerState.INITIALIZING\n    }\n\n    static getInstance(): SyncerModel {\n        return (!SyncerModel.instance) ? new SyncerModel() : SyncerModel.instance\n    }\n\n    public pushSyncerTask<P extends SyncerPayload>(payload: P, worker: Worker): Promise<P> {\n        let id = `payload-${this.requestsCounter++}`\n        return new Promise((resolve, reject) => {\n            this.requests.set(id, ({ payload, error }: { payload: P, error: ErrorPayload }) => {\n                if (error && error.rejects) {\n                    this.requests.delete(id)\n                    reject(error)\n                } else if (error) {\n                    errorsController.add(error.error.message, error.friendlyMsg)\n                    m.redraw()\n                } else {\n                    this.requests.delete(id)\n                    resolve(payload)\n                }\n            })\n            worker.postMessage({ id, payload })\n        })\n    }\n\n}\n","export class TagModel {\n    public frq: number\n\n    constructor(\n        public raw: string,\n        public flag: string,\n        public key: string,\n        public separator: string | null,\n        public val: string | null,\n        public clean: string,\n        public cleanKey: string,\n        public cleanVal: string | null,\n        public rendered: string\n    ) { \n        this.frq = 1\n    }\n\n}\n","import m from \"mithril\"\n\nexport class UrlModel {\n    private static instance: UrlModel\n\n    private constructor() { }\n\n    static getInstance(): UrlModel {\n        return (!UrlModel.instance) ? new UrlModel() : UrlModel.instance\n    }\n\n    get hash(): string {\n        return window.location.hash\n    }\n    set hash(hash_: string) {\n        window.location.hash = hash_\n    }\n\n    get url(): URL {\n        return new URL(window.location.href)\n    }\n\n    public getParam(key: string): string | undefined {\n        let val = this.url.searchParams.get(key) || m.route.param(key)\n        if (val === \"\") return\n        return val\n    }\n\n    get shelfId(): string | undefined {\n        let id = m.route.param(\"shelfId\")\n        return (id === \"\") ? undefined : id\n    }\n\n    get journalId(): number | undefined {\n        let id = m.route.param(\"journalId\")\n        return (id === \"\") ? undefined : parseInt(id)\n    }\n\n    get newTestMode(): string | undefined {\n        let mode = m.route.param(\"testMode\")\n        return (mode === \"\") ? undefined : mode\n    }\n\n}\n","export * from \"./UrlModel\"\nexport * from \"./TagModel\"\nexport * from \"./EntryModel\"\nexport * from \"./ShelfModel\"\nexport * from \"./SyncerModel\"\nexport * from \"./SearchModel\"\nexport * from \"./GoogleModel\"\nexport * from \"./SearchModel\"\nexport * from \"./ErrorsModel\"\nexport * from \"./JournalModel\"\nexport * from \"./LibraryModel\"\nexport * from \"./AppStateModel\"\nexport * from \"./ServiceWorkerModel\"\n","export * from \"./caret\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncer\"\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload |\n    AuthUpdatePayload | UnpausePayload | SyncStatePayload | ErrorPayload |\n    TokenRequestPayload | CreateRowPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n    rejects: boolean\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n    rejects: boolean\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n    rejects: boolean\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface CreateRowPayload {\n    type: SyncerPayloadType.CREATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n    rejects: boolean\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n    rejects: boolean\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n    rejects: boolean\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n    rejects: boolean\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n    rejects: boolean\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n    rejects: boolean\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n    rejects: boolean\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"demomode\"\n}\n\nexport function instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","export * from \"./shelfView\"\nexport * from \"./signinView\"\nexport * from \"./libraryView\"\nexport * from \"./journalView\"\nexport * from \"./testModeView\"\n","import m from \"mithril\"\nimport { urlController, journalController } from \"../controllers\"\nimport {\n    googleComponent, breadcrumbComponent, entriesComponent, syncStateComponent,\n    searchbarComponent, refinesComponent, composeComponent, testModeComponent,\n    errorsComponent\n} from \"../components\"\n\nexport function journalView() {\n\n    function oninit() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded) return\n        journalController.loadEntries(journal)\n    }\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(errorsComponent),\n            m(breadcrumbComponent),\n            m(searchbarComponent),\n            m(refinesComponent),\n            m(\"#entriesWrap\", [\n                m(entriesComponent),\n                m(composeComponent),\n            ])\n        ])\n    }\n\n    return {\n        view: view,\n        oninit: oninit,\n    }\n\n}\n","import m from \"mithril\"\nimport { \n    googleComponent, shelvesComponent, syncStateComponent, addShelvesComponent,\n    testModeComponent, errorsComponent\n} from \"../components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(errorsComponent),\n            m(addShelvesComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport {\n    googleComponent, journalsComponent, syncStateComponent, breadcrumbComponent,\n    testModeComponent, errorsComponent\n} from \"../components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(errorsComponent),\n            m(breadcrumbComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { googleComponent } from \"../components\"\n\nexport function signinView() {\n\n    function view() {\n        return m(\"#auth\", [\n            m(googleComponent),\n        ])\n    }\n\n    function onupdate() {\n        if (googleModel.isSignedIn) {\n            urlController.redirect(\"/library\")\n        }\n    }\n\n    return {\n        view: view,\n        onupdate: onupdate,\n    }\n\n}\n","import { urlModel } from \"..\"\nimport { TestMode } from \"../types\"\nimport { urlController, appStateController, libraryController } from \"../controllers\"\n\nexport function testModeView() {\n    function view() {\n        if (urlModel.hash.startsWith(\"#/demo\")) {\n            appStateController.updateTestMode(TestMode.DEMO)\n            libraryController.addShelves(\"https://docs.google.com/spreadsheets/d/shelf/edit\")\n            urlController.redirect(\"/library/shelf/0\")\n        }\n\n        if (urlModel.hash.startsWith(\"#/setTestMode\")) {\n            appStateController.updateTestMode(urlModel.newTestMode)\n            urlController.redirect(\"/\")\n        }\n    }\n\n    return {\n        view: view\n    }\n\n}\n","module.exports = m;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3607);\n"],"names":["newShelfUrls","addingShelves","addShelvesMessage","libraryModel","shelves","size","addShelvesButton","id","onclick","libraryController","addShelves","view","placeholder","oninput","event","target","value","googleModel","isSignedIn","urlController","getBreadcrumbTrail","caret","el","pos","composePrefixEntry","entryFactory","createBaseEntry","composeContentEntry","composeSuffixEntry","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","entry","journal","extraSettings","baseSettings","contenteditable","class","onkeydown","keyCode","shiftKey","preventDefault","content","document","getElementById","map","innerText","join","entryController","update","idx","entries","length","journalController","createEntry","composeKeydown","caretController","getCaretPosition","composeInput","onupdate","setCaretPosition","Object","assign","getActiveJournal","undefined","loaded","trust","rendered","entriesList","searchController","filteredEntries","entryIdx","createEntryVnode","entryContent","deleteEntryButton","entryVnode","deleteEntry","redraw","blur","onEntryKeydown","onEntryInput","onEntryUpdate","onblur","updateEntry","onEntryBlur","entryContentSettings","shelf","getActiveShelf","errorsModel","errors","error","friendlyMsg","errorsController","remove","errorVnode","googleController","signOut","signIn","async","defer","src","onload","initGapi","Array","from","journals","values","link","href","title","redirect","journalList","simpleTagsHeader","expanded","Set","simpleRefinesVnodes","searchModel","simpleRefines","refineKeyVnode","key","tag","refineValVnode","count","metaKey","ctrlKey","refinesQuery","keys","has","delete","add","refineTagKeyOnClick","tagRefineKeySettings","type","checked","tagRefineValSettings","val","simpleKeys","clean","vals","cleanVal","flag","cleanKey","frq","tagClass","hideClass","set","refineTagValOnClick","complexRefines","tags","updateSearchbar","textController","escape","onSearchInput","onSearchKeydown","barQuery","delShelfButton","removeShelves","retryShelfLoadButton","loadShelves","shelfNode","syncStateText","txt","class_","stateColorClass","syncerModel","state","SyncerState","DOWNLOADING","PAUSED","SYNCED","UPLOADING","INITIALIZING","syncStateIcon","unpauseSync","syncerController","unpause","appStateModel","testMode","TestMode","DEMO","stopDemoButton","appStateController","updateTestMode","OFF","mode","instanceOfTestMode","node_walk","node","func","result","firstChild","nextSibling","elem","sel","window","getSelection","cum_length","anchorNode","extentNode","nodes_to_find","contains","i","found","textContent","anchorOffset","extentOffset","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","tagPattern","save","saved","savedClean","tagMatches","Map","get","getTags","raw","safe","tokens","split","filter","token","trim","text","matchesIter","matchAll","match","tagFactory","createTag","push","sort","a","b","index","getTagMatches","chars","splice","render","errorMsg","console","FriendlyError","signedIn","user","gapi_","auth2","getAuthInstance","currentUser","updateAuth","gapi","MockGapi","load","init","scope","client_id","clientId","then","listen","addEntry","createJournalEntry","buildTags","reverse","separator","buildRefines","createRow","updateRow","moveEntry","fromIdx","toIdx","deleteRow","loadEntries","keepJournal","forEach","unloadEntries","getRows","payload","rows","catch","message","finally","spreadsheetIdPattern","reloadLoaded","ids","getSpreadsheet","shelfFactory","createShelf","spreadsheet","getSpreadsheetIdsFromUrls","urls","m","shelfIds","search","query","sourceEntries","searchType","SearchType","AND","every","OR","some","startsWith","endsWith","substring","includes","reset","NONE","cleanRefines","worker","Worker","pushSyncerTask","SyncerPayloadType","AUTH_UPDATE","rejects","onmessage","msg","data","requests","SYNC_STATE","ERROR","TOKEN_REQUEST","onMessage","UNPAUSE","shelfId","journalId","journalTitle","GET_ROWS","spreadsheetId","sheetTitle","sheetId","CREATE_ROW","DELETE_ROW","UPDATE_ROW","TEST_MODE_UPDATE","GET_SPREADSHEET","unsafe","replace","toLowerCase","urlModel","hash","breadcrumb","crumb","trail","slice","parseInt","Error","constructor","super","this","SyncerError","needsReAuth","pause","entryCounter","BaseEntryModel","JournalEntryModel","properties","sheets","ShelfModel","sheet","JournalModel","getJournals","cleanTagString","str","renderedKey","renderedVal","TagModel","ErrorsModel","getInstance","AppStateModel","serviceWorkerModel","ServiceWorkerModel","GoogleModel","SyncerModel","LibraryModel","UrlModel","SearchModel","root","route","signinView","testModeView","libraryView","shelfView","journalView","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","getAuthResponse","expires_in","access_token","reloadAuthResponse","MockIsSignedIn","static","instance","entryId","localStorage","removeItem","setItem","getItem","navigator","addEventListener","serviceWorker","register","requestsCounter","Promise","resolve","reject","postMessage","location","hash_","url","URL","getParam","searchParams","param","newTestMode","SyncerResponseType","googleComponent","testModeComponent","syncStateComponent","errorsComponent","breadcrumbComponent","searchbarComponent","refinesComponent","entriesComponent","composeComponent","oninit","addShelvesComponent","shelvesComponent","journalsComponent","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}