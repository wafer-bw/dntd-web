{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/types/index.ts","webpack:///external \"m\"","webpack:///./src/index.ts","webpack:///./src/models/index.ts","webpack:///./src/helpers/index.ts","webpack:///./src/controllers/index.ts","webpack:///./src/views/components/index.ts","webpack:///./src/types/errors.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncer.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/helpers/misc.ts","webpack:///./src/helpers/errors.ts","webpack:///./src/helpers/textOps.ts","webpack:///./src/helpers/caretOps.ts","webpack:///./src/helpers/patterns.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/models/ServiceWorkerModel.ts","webpack:///./src/controllers/SyncerController.ts","webpack:///./src/controllers/libraryController.ts","webpack:///./src/controllers/storageController.ts","webpack:///./src/views/index.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/views/components/googleComponent.ts","webpack:///./src/views/components/shelvesComponent.ts","webpack:///./src/views/components/journalsComponent.ts","webpack:///./src/views/components/syncStateComponent.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts","webpack:///./src/views/components/addShelvesComponent.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","root","document","getElementById","serviceWorkerModel","ServiceWorkerModel","syncerModel","SyncerModel","syncerController","SyncerController","libraryModel","LibraryModel","route","signinView","libraryView","shelfView","journalView","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","super","this","payload","error","type","SyncerPayloadType","ERROR","SearchType","TestMode","SyncerResponseType","SyncerState","googleModel","isSignedIn","src","scope","join","clientId","user","getAuthResponse","access_token","signedIn","gapi_","auth2","getAuthInstance","currentUser","token","undefined","updateAuth","libraryController","loadShelves","removeShelves","redraw","googleController","signIn","signOut","initGapi","getTestMode","OFF","gapi","MockGapi","load","init","client_id","then","listen","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","MockIsSignedIn","raw","flag","separator","val","frq","clean","cleanTagString","cleanKey","cleanVal","hideKeys","replace","renderVal","renderKey","str","escapeHtml","endsWith","substring","length","toLowerCase","URL","window","location","href","hash","url","DEMO","test","searchParams","values","includes","FriendlyError","console","warn","unsafe","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","tagPattern","saved","tags","Map","hovered","focused","tokens","rendered","savedClean","tagMatches","readableRendered","rawText","savedText","getTags","safe","getTokens","getTagMatches","render","text","tag","match","chars","split","splice","index","has","set","matchesIter","matchAll","TagModel","push","sort","a","b","filter","trim","journalFactory","JournalFactory","spreadsheetId","spreadsheet","properties","title","sheets","journals","getJournals","ShelfModel","forEach","sheet","sheetId","journal","createJournal","id","addJournals","requestsCounter","requests","state","DOWNLOADING","worker","Worker","onmessage","msg","onMessage","Promise","resolve","reject","postMessage","data","delete","SYNC_STATE","message","TOKEN_REQUEST","shelfId","JournalModel","entries","entry","Array","from","reverse","idx","content","EntryModel","buildTags","fromIdx","toIdx","shelves","shelfIds","ids","localStorage","setItem","getItem","navigator","addEventListener","serviceWorker","register","testMode","pushSyncerTask","TEST_MODE_UPDATE","AUTH_UPDATE","task","GET_SPREADSHEET","GET_SHEETS","sheetTitle","GET_ROWS","rows","DELETE_ROW","UPDATE_ROW","UNPAUSE","shelfFactory","ShelfFactory","spreadsheetIdPattern","addShelves","keys","reloadLoaded","getSpreadsheet","shelf","createShelf","catch","finally","getSpreadsheetIdsFromUrls","urls","addShelvesByUrls","storageController","setSpreadsheetId","getSpreadsheetId","getSpreadsheetSheetId","parseInt","setSpreadsheetSheetId","toString","delSpreadsheetSheetId","removeItem","view","googleComponent","syncStateComponent","journalsComponent","onclick","class","async","defer","onload","delShelfButton","map","shelfNode","param","link","journalList","syncStateText","txt","class_","stateColorClass","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","unpause","onupdate","addShelvesComponent","shelvesComponent","addingShelves","newShelfUrls","addShelvesButton","spreadsheetsTextbox","placeholder","oninput","event","target"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,8ICjFrD,QACA,SACA,SACA,U,cCJAhC,EAAOD,QAAUM,G,kKCAjB,gBACA,OACA,QACA,OAEM4B,EAAOC,SAASC,eAAe,QAExB,EAAAC,mBAAqB,IAAI,EAAAC,mBACzB,EAAAC,YAAc,IAAI,EAAAC,YAClB,EAAAC,iBAAmB,IAAI,EAAAC,iBAAiB,EAAAH,aACxC,EAAAI,aAAe,IAAI,EAAAC,aAEnB,OAATV,GACA,UAAEW,MAAMX,EAAM,IAAK,CACf,IAAK,EAAAY,WACL,UAAW,EAAAA,WACX,WAAY,EAAAC,YACZ,oBAAqB,EAAAC,UACrB,+BAAgC,EAAAC,e,4IClBxC,SACA,SACA,SACA,SACA,SACA,SACA,SACA,U,6ICPA,SACA,SACA,SACA,SACA,U,6ICJA,SACA,SACA,SACA,U,4ICFA,SACA,SACA,SACA,SACA,U,8ECLA,aAYA,MAAaC,UAAoBC,MAG7B,YAAYC,EAAyBC,EAA4BC,GAC7DC,MAAMH,GAD2B,KAAAC,cAA4B,KAAAC,cAE7DE,KAAKC,QAAU,CACXC,MAAOF,KACPH,YAAaG,KAAKH,YAClBM,KAAM,EAAAC,kBAAkBC,QARpC,iB,8ECZA,SAAYC,GACR,mBACA,iBACA,eAHJ,CAAY,EAAAA,aAAA,EAAAA,WAAU,M,8ECAtB,SAAYC,GACR,UACA,cACA,kCACA,qBACA,wBACA,sBACA,kBACA,WARJ,CAAY,EAAAA,WAAA,EAAAA,SAAQ,M,8ECQpB,SAAYH,GACR,iCACA,+BACA,+BACA,2BACA,+BACA,2CACA,yBACA,yCACA,mCACA,+BACA,4BACA,sBACA,sCACA,gCAdJ,CAAY,EAAAA,oBAAA,EAAAA,kBAAiB,KAiB7B,SAAYI,GACR,mCACA,qBACA,uBAHJ,CAAY,EAAAA,qBAAA,EAAAA,mBAAkB,KAM9B,SAAYC,GACR,qBACA,2BACA,+BACA,sBAJJ,CAAY,EAAAA,cAAA,EAAAA,YAAW,M,8ECLV,EAAAC,YAAc,IAxB3B,MAQI,YAAYC,GACRX,KAAKW,WAAaA,EAClBX,KAAKY,IAAM,oCACXZ,KAAKa,MAAQ,CACT,gDACFC,KAAK,KACPd,KAAKe,SAAW,2EAGpB,YACI,IAAKf,KAAKgB,KAAM,OAEhB,OADWhB,KAAKgB,KAAKC,kBACTC,gB,geCtBpB,gBACA,QACA,OACA,OACA,OACA,OACA,OA8BA,SAAeP,EAAWQ,G,yCAEtB,GADA,EAAAT,YAAYC,WAAaQ,EACrB,EAAAT,YAAYC,WAAY,CACxB,EAAAD,YAAYM,KAAO,EAAAN,YAAYU,MAAOC,MAAMC,kBAAkBC,YAAYhE,MAC1E,IAAIiE,EAAQ,EAAAd,YAAYc,WACVC,IAAVD,GACA,EAAAvC,iBAAiByC,WAAWF,SAE1B,EAAAG,kBAAkBC,mBAExB,EAAAD,kBAAkBE,gBAEtB,UAAEC,YAxCO,EAAAC,iBAAmB,CAC5BC,OASJ,WACI,EAAAtB,YAAYU,MAAOC,MAAMC,kBAAkBU,UAT3CC,QAIJ,WACI,EAAAvB,YAAYU,MAAOC,MAAMC,kBAAkBW,WAJ3CC,SAWJ,WACI,IAAId,EAAS,EAAAe,gBAAkB,EAAA5B,SAAS6B,IAAOC,KAAO,IAAI,EAAAC,SAC1D,EAAA5B,YAAYU,MAAQA,EACpB,EAAAV,YAAYU,MAAMmB,KAAK,QAAS,KAC5B,EAAA7B,YAAYU,MAAOC,MAAMmB,KAAK,CAC1B3B,MAAO,EAAAH,YAAYG,MAAO4B,UAAW,EAAA/B,YAAYK,WAClD2B,KAAK,KACJ,EAAAhC,YAAYU,MAAOC,MAAMC,kBAAkBX,WAAWgC,OAAOhC,GAC7DA,EAAY,EAAAD,YAAYU,MAAOC,MAAMC,kBAAkBX,WAAWpD,c,0IC9B9E,S,8YCAA,+BACW,KAAA8D,MAAQ,IAAIuB,EACZ,KAAKC,EAAcC,GACtBA,MAIR,MAAMF,EACK,kBACH,OAAO,IAAIG,EAEF,KAAKC,G,8CAGtB,MAAMC,EACK,MAAQ,OAAO,IAAIC,GAG9B,MAAaA,EACF,kBACH,MAAO,CACHC,WAAY,KACZjC,aAAc,aAGT,qB,yCACT,MAAO,CACHiC,WAAY,KACZjC,aAAc,iBAV1B,mBAeA,MAAM6B,EAAN,cACW,KAAApC,WAAa,IAAIyC,EAGjB,KAAA7B,YAAc,IAAI0B,EAFlB,WACA,WAIX,MAAMG,EAAN,cACW,KAAAT,OAAUG,MACV,KAAAvF,IAAM,KAAe,K,8EC1ChC,aAEA,iBAWI,YAAY8F,EAAaC,EAAcrF,EAAasF,EAAsCC,GACtFxD,KAAKyD,IAAM,EACXzD,KAAKqD,IAAMA,EACXrD,KAAKsD,KAAOA,EACZtD,KAAK/B,IAAMA,EACX+B,KAAKuD,eAA2B9B,IAAd8B,EAA2BA,EAAY,KACzDvD,KAAKwD,SAAe/B,IAAR+B,EAAqBA,EAAM,KACvCxD,KAAK0D,MAAQ1D,KAAK2D,eAAe3D,KAAKqD,KACtCrD,KAAK4D,SAAW5D,KAAK2D,eAAe3D,KAAK/B,KACzC+B,KAAK6D,SAAyB,OAAb7D,KAAKwD,IAAgBxD,KAAK2D,eAAe3D,KAAKwD,KAAO,KAGnE,YACH,MAAO,sCACDxD,KAAKsD,KACLtD,KAAK4D,UACH5D,KAAc,UAAIA,KAAKuD,UAAY,IACrC,gBACEvD,KAAc,UAAI,SAAyB,OAAbA,KAAKwD,IAAgB,YAAc,eACnE,KACAxD,KAAKsD,KACLtD,KAAK/B,IACL,UAGH,UAAU6F,G,MACb,MAAO,sCACD9D,KAAKsD,KACLtD,KAAK4D,SACL5D,KAAKuD,WACQ,Q,EAAbvD,KAAK6D,gBAAQ,eAAEE,QAAQ,IAAK,QAC5B,gBACC,EAAa,cAAgB,UAC9B,MACC,EAAa,GAAK/D,KAAKuD,YACvBvD,KAAKwD,KAAO,IACb,UAGH,OAAOM,GACV,OAAI9D,KAAKuD,UACE,EAAavD,KAAKgE,UAAUF,GAAY9D,KAAKiE,YAAcjE,KAAKgE,UAAUF,GAE1E9D,KAAKiE,YAIZ,eAAeC,GAInB,OADAA,GADAA,GADAA,EAAM,EAAAC,WAAWD,IACNE,SAAS,MAASF,EAAIG,UAAU,EAAGH,EAAII,OAAS,GAAKJ,GACtDK,iB,8EC/DlB,aAEA,qBAEI,OADU,IAAIC,IAAIC,OAAOC,SAASC,MACvBC,MAGf,yBACI,IAAIC,EAAM,IAAIL,IAAIC,OAAOC,SAASC,MAClC,GAAiB,WAAbE,EAAID,KACJ,OAAO,EAAArE,SAASuE,KAEpB,IAAIC,EAAOF,EAAIG,aAAazH,IAAI,QAChC,OAAiB,OAATwH,IAIgBb,EAJoBa,EAK9B3H,OAAQ6H,OAAO,EAAA1E,UAAU2E,SAAShB,IALKa,EAAO,EAAAxE,SAAS6B,IAIzE,IAA4B8B,I,kKCjB5B,gBAEA,MAAaiB,UAAsBxF,MAC/B,YAAYC,EAAyBC,GACjCE,MAAMH,GAD2B,KAAAC,cAEjCuF,QAAQC,KAAKzF,GAEb,UAAEkC,UALV,mB,8ECFA,sBAA2BwD,GACvB,OAAOA,EACFvB,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,U,8ECGvB,4BAAiCwB,GAC7B,IAAIC,EAAWf,OAAOgB,eAClBC,EAAa,CAAC,EAAG,GAErB,GAAIF,EAAIG,YAAcJ,EAClBG,EAAa,CAACF,EAAIG,WAAWC,UAAUtB,OAAQkB,EAAIK,WAAWD,UAAUtB,YACrE,CACH,IAAIwB,EAAgB,CAACN,EAAIG,WAAYH,EAAIK,YACzC,IAAKN,EAAKQ,SAASP,EAAIG,cAAgBJ,EAAKQ,SAASP,EAAIK,YACrD,OAEA,IACInJ,EADAsJ,EAAQ,CAAC,EAAG,IAlB5B,SAASC,EAAUC,EAAWC,GAC1B,IAAIC,EAASD,EAAKD,GAClB,IAAKA,EAAOA,EAAKG,YAAuB,IAAXD,GAAoBF,EAAMA,EAAOA,EAAKI,YAC/DF,EAASH,EAAUC,EAAMC,GAiBrBF,CAAUV,GAAM,SAAUW,GACtB,IAAKxJ,EAAI,EAAGA,EAAI,EAAGA,IACf,GAAIwJ,GAAQJ,EAAcpJ,KACtBsJ,EAAMtJ,GAAK,EACPsJ,EAAW,GAALtJ,EAAS,EAAI,IACnB,OAIZ,GAAIwJ,EAAKK,cAAgBL,EAAKG,WAC1B,IAAK3J,EAAI,EAAGA,EAAI,EAAGA,IACVsJ,EAAMtJ,KACPgJ,EAAWhJ,IAAMwJ,EAAKK,YAAYjC,WAKlDoB,EAAW,IAAMF,EAAIgB,aACrBd,EAAW,IAAMF,EAAIiB,aAG7B,OAAIf,EAAW,IAAMA,EAAW,GACrBA,EAEJ,CAACA,EAAW,GAAIA,EAAW,KAGtC,4BAAgBgB,EAAiBC,EAASC,GACtC,GAAW,OAAPD,GAAuB,OAARC,EAAc,CAC7B,IAAK,IAAIV,KAAQS,EAAGE,WAChB,GAAqB,GAAjBX,EAAKY,SAAe,CACpB,GAAIZ,EAAK5B,QAAUsC,EAAK,CACpB,IAAIG,EAAQpI,SAASqI,cACjBxB,EAAWf,OAAOgB,eAKtB,OAJAsB,EAAME,SAASf,EAAMU,GACrBG,EAAMG,UAAS,GACf1B,EAAI2B,kBACJ3B,EAAI4B,SAASL,IACL,EAERH,GAAOV,EAAK5B,YAIhB,IAAY,IADZsC,EAAMF,EAAiBR,EAAMU,IAEzB,OAAQ,EAIpB,OAAOA,K,8ECrEF,EAAAS,WAAa,mC,8ECA1B,aACA,OAcA,mBAaI,YAAYhE,EAA0BiE,GAZ/B,KAAAC,KAAgB,IAAIC,IACpB,KAAAC,SAAmB,EACnB,KAAAC,SAAmB,EACnB,KAAAhE,MAAgB,GAChB,KAAAiE,OAAmB,GACnB,KAAAC,SAAmB,GACnB,KAAAC,WAAqB,GACpB,KAAAC,WAAyB,GAC1B,KAAAC,iBAA2B,GAC1B,KAAAC,QAAkB,GAClB,KAAAC,UAAoB,GAGxBjI,KAAKqD,IAAM,GAAc,GACzBrD,KAAKsH,WAAmB7F,IAAV6F,EAAuBA,EAAQtH,KAAKqD,IAGtD,YACI,OAAOrD,KAAKiI,UAEhB,UAAiB/D,GACblE,KAAKiI,UAAY/D,EACjBlE,KAAK6H,WAAa3D,EAAIK,cACtBvE,KAAKuH,KAAOvH,KAAKkI,QAAQlI,KAAK8H,YAGlC,UACI,OAAO9H,KAAKgI,QAEhB,QAAe3E,GACXrD,KAAKgI,QAAU3E,EACfrD,KAAK0D,MAAQ1D,KAAKqD,IAAIkB,cACtB,IAAI4D,EAAO,EAAAhE,WAAWnE,KAAKgI,SAC3BhI,KAAK2H,OAAS3H,KAAKoI,UAAUpI,KAAK0D,OAClC1D,KAAK8H,WAAa9H,KAAKqI,cAAcF,GACrCnI,KAAK4H,SAAW5H,KAAKsI,OAAOH,EAAMnI,KAAK8H,YACvC9H,KAAK+H,iBAAmB/H,KAAKsI,OAAOH,EAAMnI,KAAK8H,YAAY,GAGvD,OAAOS,EAAcT,EAAwBhE,GACjD,IAAK,IAAI,IAAE0E,EAAG,MAAEC,KAAWX,EAAY,CACnC,IAAIY,EAAQH,EAAKI,MAAM,IACvBD,EAAME,OAAOH,EAAMI,MAAQJ,EAAM,GAAGnE,OAAQkE,EAAIF,OAAOxE,IACvDyE,EAAOG,EAAM5H,KAAK,IAEtB,OAAOyH,EAGH,QAAQT,GACZ,IAAIP,EAAgB,IAAIC,IACxB,IAAK,IAAI,IAAEgB,KAASV,EACZP,EAAKuB,IAAIN,EAAI9E,OACb6D,EAAKhK,IAAIiL,EAAI9E,OAAQD,KAAO,EAE5B8D,EAAKwB,IAAIP,EAAI9E,MAAO8E,GAG5B,OAAOjB,EAGH,cAAcgB,GAClB,IAAIT,EAAa,GACbkB,EAAcT,EAAKU,SAAS,EAAA5B,YAChC,IAAK,IAAIoB,KAASO,EAAa,CAC3B,IAAIR,EAAM,IAAI,EAAAU,SAAST,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IACrEX,EAAWqB,KAAK,CAAEX,IAAKA,EAAKC,MAAOA,IAGvC,OADAX,EAAWsB,KAAK,CAACC,EAAGC,IAAOD,EAAEZ,MAAMI,MAASS,EAAEb,MAAMI,OAAW,EAAI,GAC5Df,EAGH,UAAUS,GAEd,OADaA,EAAKI,MAAM,KACVY,OAAO/H,QACAC,IAAVD,GAAwC,KAAjBA,EAAMgI,QAA2B,MAAVhI,M,8EC1FjE,aAEA,mCAEY,KAAAiI,eAAiB,IAAI,EAAAC,eAEtB,YAAYC,EAAuBC,EAA8C1J,GACpF,QACoBuB,IAAhBmI,QAC8BnI,IAA9BmI,EAAYD,oBACelI,IAA3BmI,EAAYC,iBACqBpI,IAAjCmI,EAAYC,WAAWC,YACArI,IAAvBmI,EAAYG,OACd,CACE,IAAIC,EAAWhK,KAAKiK,YAAYL,EAAYD,cAAeC,EAAYG,QACvE,OAAO,IAAIG,EAAWN,EAAYD,cAAeC,EAAYC,WAAWC,MAAOE,GAEnF,OAAO,IAAIE,EAAWP,OAAelI,OAAWA,EAAWvB,GAGvD,YAAYyJ,EAAuBI,GACvC,IAAIC,EAA2B,GAc/B,OAbAD,EAAOI,QAAQC,IACX,QACyB3I,IAArB2I,EAAMP,iBACqBpI,IAA3B2I,EAAMP,WAAWC,YACYrI,IAA7B2I,EAAMP,WAAWQ,QACnB,CACE,IAAIC,EAAUtK,KAAKyJ,eAAec,cAC9BH,EAAMP,WAAWQ,QAASV,EAAeS,EAAMP,WAAWC,OAE9D,QAAgBrI,IAAZ6I,EAAuB,OAC3BN,EAASb,KAAKmB,MAGfN,IAKf,MAAaE,EAMT,YAAYM,EAAYV,EAAgBE,EAA2B9J,GAF5D,KAAA8J,SAAsC,IAAIxC,IAG7CxH,KAAKwK,GAAKA,EACVxK,KAAKE,MAAQA,EACbF,KAAK8J,MAAQA,OACIrI,IAAbuI,GAAwBhK,KAAKyK,YAAYT,GAG1C,YAAYA,GACfA,EAAST,OAAOe,IAAYtK,KAAKgK,SAASlB,IAAIwB,EAAQE,KACjDL,QAAQG,GAAWtK,KAAKgK,SAASjB,IAAIuB,EAAQE,GAAIF,KAf9D,gB,8ECvCA,aACA,OACA,QACA,OAEA,oBAOI,cALQ,KAAAI,gBAAkB,EAClB,KAAAC,SAAkC,IAAInD,IACvC,KAAAoD,MAAqB,EAAAnK,YAAYoK,YACjC,KAAA7J,KAAsD,KAGzDhB,KAAK8K,OAAS,IAAIC,OAAO,yBACzB/K,KAAK8K,OAAOE,UAAaC,GAAsBjL,KAAKkL,UAAUD,GAG3D,eAAwChL,GAC3C,IAAIuK,EAAK,WAAWxK,KAAK0K,kBACzB,OAAO,IAAIS,QAAQ,CAACC,EAASC,KACzBrL,KAAK2K,SAAS5B,IAAIyB,EAAI,EAAGvK,UAASC,YAC9B,EAAUmL,EAAOnL,GAASkL,EAAQnL,KAEtCD,KAAK8K,OAAOQ,YAAY,CAAEd,KAAIvK,cAI9B,UAAUgL,GACd,IAAI,GAAET,EAAE,QAAEvK,EAAO,MAAEC,GAA+E+K,EAAIM,KACtG,GAAW,OAAPf,GAAexK,KAAK2K,SAAS7B,IAAI0B,GACjCxK,KAAK2K,SAASpN,IAAIiN,EAAlBxK,CAAuB,CAAEC,UAASC,UAClCF,KAAK2K,SAASa,OAAOhB,QAErB,OAAQvK,EAAQE,MACZ,KAAK,EAAAC,kBAAkBqL,WACnBzL,KAAK4K,MAAQ3K,EAAQ2K,MACrB,MACJ,KAAK,EAAAxK,kBAAkBC,MACnB,IAAI,EAAA8E,cAAclF,EAAQC,MAAMwL,QAASzL,EAAQJ,aACjD,MACJ,KAAK,EAAAO,kBAAkBuL,cACnB,EAAA1M,iBAAiByC,WAAW,EAAAhB,YAAYc,W,8EC1C5D,aAEA,uBACW,cAAcgJ,EAAYoB,EAAiB9B,GAC9C,OAAO,IAAI+B,EAAarB,EAAIoB,EAAS9B,KAI7C,MAAa+B,EAOT,YAAYrB,EAAYoB,EAAiB9B,GAFlC,KAAAgC,QAAwB,GAG3B9L,KAAKwK,GAAKA,EACVxK,KAAK8J,MAAQA,EACb9J,KAAKuH,KAAO,IAAIC,IAChBxH,KAAK4L,QAAUA,EAGX,YACJ,IAAIrE,EAAgB,IAAIC,IACxB,IAAK,IAAIuE,KAASC,MAAMC,KAAKjM,KAAK8L,QAAQ7G,UAAUiH,UAChD,IAAK,IAAKjO,EAAKuK,KAAQuD,EAAMxE,KACrBA,EAAKuB,IAAI7K,GACTsJ,EAAKhK,IAAIU,GAAMwF,KAAO+E,EAAI/E,IAE1B8D,EAAKwB,IAAI9K,EAAK,IAAI,EAAAiL,SAASV,EAAInF,IAAKmF,EAAIlF,KAAMkF,EAAIvK,IAAKuK,EAAIjF,UAAWiF,EAAIhF,MAItF,OAAO+D,EAGJ,SAAS4E,EAAaC,GACzBpM,KAAK8L,QAAQlD,OAAOuD,EAAK,EAAG,IAAI,EAAAE,WAAWD,IAC3CpM,KAAKuH,KAAOvH,KAAKsM,YAGd,YAAYH,EAAaC,GAC5B,IAAIL,EAAQ/L,KAAK8L,QAAQK,GACrBJ,EAAMzE,QAAU8E,IACpBL,EAAMzE,MAAQ8E,EACdpM,KAAKuH,KAAOvH,KAAKsM,aAGd,YAAYH,GACfnM,KAAK8L,QAAQlD,OAAOuD,EAAK,GAAG,GAC5BnM,KAAKuH,KAAOvH,KAAKsM,YAGd,UAAUC,EAAiBC,GAC9B,IAAIT,EAAQ/L,KAAK8L,QAAQS,GACzBvM,KAAK8L,QAAQlD,OAAO2D,EAAS,GAC7BvM,KAAK8L,QAAQlD,OAAO4D,EAAO,EAAGT,IAhDtC,kB,8ECNA,qBAGI,cACI/L,KAAKyM,QAAU,IAAIjF,IACnBxH,KAAK0M,SAASvC,QAAQK,GAAMxK,KAAKyM,QAAQ1D,IAAIyB,OAAI/I,IAGrD,aAAakL,GACTC,aAAaC,QAAQ,iBAAkBF,EAAI7L,KAAK,MAEpD,eACI,IAAI6L,EAAMC,aAAaE,QAAQ,wBAAqBrL,EACpD,YAAYA,IAARkL,EAA0B,GACvBA,EAAIhE,MAAM,Q,8YChBzB,aAEA,2BACI,cACI,KAAI,kBAAmBoE,WAKnB,MAAM,IAAI,EAAA5H,cAAc,8BAA+B,kCAJvDV,OAAOuI,iBAAiB,OAAQ,IAAY,EAAD,sCACjCD,UAAUE,cAAcC,SAAS,8B,8YCLvD,aAEA,yBAII,YAAYnO,GACRiB,KAAKjB,YAAcA,EAGV,eAAeoO,G,yCACxB,aAAanN,KAAKjB,YAAYqO,eAAe,CACzCjN,KAAM,EAAAC,kBAAkBiN,iBACxBF,SAAUA,OAIX,WAAW3L,GACd,QAAcC,IAAVD,EACJ,OAAOxB,KAAKjB,YAAYqO,eAAe,CACnCjN,KAAM,EAAAC,kBAAkBkN,YACxB9L,MAAOA,IAIR,eAAemI,GAClB,IAAI4D,EAA8B,CAC9BpN,KAAM,EAAAC,kBAAkBoN,gBACxB7D,cAAeA,EACfC,iBAAanI,GAEjB,OAAOzB,KAAKjB,YAAYqO,eAAeG,GAG9B,UAAU5D,G,yCACnB,IAAI4D,EAAyB,CACzBpN,KAAM,EAAAC,kBAAkBqN,WACxB9D,cAAeA,EACfI,OAAQ,IAGZ,aADmB/J,KAAKjB,YAAYqO,eAAeG,MAI1C,QAAQ5D,EAAuBU,EAAiBqD,G,yCACzD,IAAIH,EAAuB,CACvBpN,KAAM,EAAAC,kBAAkBuN,SACxBhE,cAAeA,EACf+D,WAAYA,EACZrD,QAASA,EACTuD,KAAM,IAGV,aADmB5N,KAAKjB,YAAYqO,eAAeG,MAI1C,UAAUpB,EAAaxC,EAAuBU,G,yCACvD,aAAarK,KAAKjB,YAAYqO,eAAe,CACzCjN,KAAM,EAAAC,kBAAkByN,WACxBlE,cAAeA,EACfU,QAASA,EACT8B,IAAKA,OAIA,UAAUA,EAAaxC,EAAuBU,EAAiBqD,EAAoBtB,G,yCAC5F,aAAapM,KAAKjB,YAAYqO,eAAe,CACzCjN,KAAM,EAAAC,kBAAkB0N,WACxBnE,cAAeA,EACf+D,WAAYA,EACZrD,QAASA,EACT+B,QAASA,EACTD,IAAKA,OAIA,U,yCACT,aAAanM,KAAKjB,YAAYqO,eAAe,CAAEjN,KAAM,EAAAC,kBAAkB2N,gB,8dC9E/E,gBAEA,OACA,OACA,OAEMC,EAAe,IAAI,EAAAC,aACnBC,EAAuB,uCAe7B,SAASC,EAAWxB,GAChBA,EAAIpD,OAAOiB,IAAO,EAAArL,aAAasN,QAAQ3D,IAAI0B,IACtCL,QAAQK,GAAM,EAAArL,aAAasN,QAAQ1D,IAAIyB,OAAI/I,IAChD,EAAAtC,aAAauN,SAAWV,MAAMC,KAAK,EAAA9M,aAAasN,QAAQ2B,QACxDxM,GAAY,GAUhB,SAAeA,EAAYyM,EAAwB1B,G,8CACnClL,IAARkL,IAAmBA,EAAMX,MAAMC,KAAK,EAAA9M,aAAasN,QAAQ2B,UACzC,EAAiBzB,EAAMA,EAAIpD,OAAOiB,IAAO,EAAArL,aAAasN,QAAQlP,IAAIiN,KACxEL,QAAQK,GAAM,EAAAvL,iBAAiBqP,eAAe9D,GACvD9H,KAAKzC,IACF,IAAIsO,EAAQP,EAAaQ,YAAYhE,EAAIvK,EAAQ2J,aACjD,EAAAzK,aAAasN,QAAQ1D,IAAIwF,EAAM/D,GAAI+D,KAEtCE,MAAOvO,IAEJ,IAAI,EAAAiF,cAAcjF,EAAMA,MAAMwL,QAASxL,EAAML,aAC7C,IAAI0O,EAAQP,EAAaQ,YAAYhE,OAAI/I,EAAWvB,EAAML,aAC1D,EAAAV,aAAasN,QAAQ1D,IAAIyB,EAAI+D,KAEhCG,QAAQ,KACL,UAAE5M,eAKd,SAAS6M,EAA0BC,GAC/B,IAAIjC,EAAgB,GAIpB,OAHIiC,GACA5C,MAAMC,KAAK2C,EAAK3F,SAASiF,IAAuB/D,QAAQrN,GAAK6P,EAAIxD,KAAKrM,EAAE,KAErE6P,EApDE,EAAAhL,kBAAoB,CAC7BkN,iBAOJ,SAA0BD,GAEtBT,EADUQ,EAA0BC,KAPpCT,WAAYA,EACZtM,cAiBJ,SAAuB8K,QACPlL,IAARkL,IAAmBA,EAAMX,MAAMC,KAAK,EAAA9M,aAAasN,QAAQ2B,SAC7DzB,EAAIpD,OAAOiB,GAAM,EAAArL,aAAasN,QAAQ3D,IAAI0B,IACrCL,QAAQK,GAAM,EAAArL,aAAasN,QAAQjB,OAAOhB,IAC/C,EAAArL,aAAauN,SAAWV,MAAMC,KAAK,EAAA9M,aAAasN,QAAQ2B,SApBxDxM,YAAaA,EACb+M,0BAA2BA,I,8ECdlB,EAAAG,kBAAoB,CAC7BC,iBAOJ,SAA0BvE,GACtBoC,aAAaC,QAAQ,gBAAiBrC,IAPtCwE,iBASJ,WACI,OAAOpC,aAAaE,QAAQ,uBAAoBrL,GAThDwN,sBAYJ,SAA+BtF,GAC3B,IAAIU,EAAUuC,aAAaE,QAAWnD,EAAH,kBAA+BlI,EAClE,YAAoBA,IAAZ4I,EAAyB6E,SAAS7E,QAAW5I,GAbrD0N,sBAeJ,SAA+BxF,EAAuBU,GAClDuC,aAAaC,QAAWlD,EAAH,WAA4BU,EAAQ+E,aAfzDC,sBAiBJ,SAA+B1F,GAC3BiD,aAAa0C,WAAc3F,EAAH,e,4ICvB5B,SACA,SACA,SACA,U,kKCHA,gBACA,OAEA,uBAUI,MAAO,CACH4F,KATJ,WACI,OAAO,UAAE,SAAU,CACf,UAAE,EAAAC,iBACF,UAAE,EAAAC,oBACF,UAAE,EAAAC,yB,kKCTd,gBACA,OACA,OAEA,6BAmCI,MAAO,CAAEH,KAjCT,WACI,OAAO,UAAE,aAAc,MA2BY9N,IAA3B,EAAAf,YAAYC,YAA6B,EAAAD,YAAYC,WAEvD,KADA,UAAE,YAAa,gBAPb,EAAAD,YAAsB,WACxB,UAAE,SAAU,CAAEiP,QAAS,IAAM,EAAA5N,iBAAiBE,UAAW2N,MAAO,cAAgB,YAChF,UAAE,SAAU,CAAED,QAAS,IAAM,EAAA5N,iBAAiBC,SAAU4N,MAAO,cAAgB,WApBjF,UAAE,SAKC,CACHC,OAAO,EACPC,OAAO,EACPlP,IAAK,EAAAF,YAAYE,IACjBmP,OAAQ,KACC,EAAArP,YAAYC,YACb,EAAAoB,iBAAiBG,oB,kKCrBrC,gBACA,OAEA,OAEA,8BAOI,SAAS8N,EAAexF,GACpB,OAAO,UAAE,SAAU,CACfoF,MAAO,MACPD,QAAS,IAAM,EAAAhO,kBAAkBE,cAAc,CAAC2I,KACjD,OAsBP,MAAO,CACH+E,KAhCJ,WACI,IAAI9C,EAAUT,MAAMC,KAAK,EAAA9M,aAAasN,QAAQX,WAC9C,OAAO,UAAE,eAAgBW,EAAQwD,IAAI,EAAEzF,EAAI+D,KAU/C,SAAmB/D,EAAY+D,GAC3B,YAAc9M,IAAV8M,EACO,UAAE,KAAM,CACXyB,EAAexF,GACf,UAAE,OAAQA,UAES/I,IAAhB8M,EAAMzE,MACN,UAAE,KAAM,CACXkG,EAAexF,GACf,UAAE,OAAQ,GAAGA,KAAM+D,EAAMrO,WAGtB,UAAE,KAAM,CACX8P,EAAexF,GACf,UAAE,IAAK,CAAE7F,KAAM,aAAa6F,GAAQ+D,EAAMzE,SAxBIoG,CAAU1F,EAAI+D,S,kKCT5E,gBACA,OAEA,+BAeI,MAAO,CACHgB,KAdJ,WACI,OAAO,UAAE,YAGb,WACI,IAAIhB,EAAQ,EAAApP,aAAasN,QAAQlP,IAAI,UAAE8B,MAAM8Q,MAAM,YACnD,QAAc1O,IAAV8M,EAAqB,OACzB,OAAOvC,MAAMC,KAAKsC,EAAMvE,SAAS/E,UAAUgL,IAAI3F,IAC3C,IAAI8F,EAAO,aAAa9F,EAAQsB,WAAWtB,EAAQE,KACnD,OAAO,UAAE,KAAM,UAAE,IAAK,CAAE7F,KAAMyL,GAAQ9F,EAAQR,UAR5BuG,Q,kKCN9B,gBACA,OACA,OACA,OAEA,gCAcI,SAASC,IACL,IAAIC,EAAM,GACNC,EAAS,aAAaC,IAE1B,OAAQ,EAAA1R,YAAY6L,OAChB,KAAK,EAAAnK,YAAYoK,YACb0F,EAAM,yCACN,MACJ,KAAK,EAAA9P,YAAYiQ,OACbH,EAAM,gCACN,MACJ,KAAK,EAAA9P,YAAYkQ,OACbJ,EAAM,qBACN,MACJ,KAAK,EAAA9P,YAAYmQ,UACbL,EAAM,gCAGd,OAAO,UAAE,OAAQ,CAAE/F,GAAI,gBAAiBoF,MAAOY,GAAUD,GAG7D,SAASM,IACL,IAAIL,EAAS,oDAAoDC,IACjE,OAAO,UAAE,IAAK,CAAEjG,GAAI,gBAAiBoF,MAAOY,GAAU,EAAAzR,YAAY6L,OAGtE,SAASkG,IACL,GAAI,EAAA/R,YAAY6L,QAAU,EAAAnK,YAAYiQ,OAClC,OAAO,UAAE,SAAU,CACflG,GAAI,cACJoF,MAAO,YACPD,QAAS,IAAM,EAAA1Q,iBAAiB8R,WACjC,mBAKX,SAASN,IACL,OAAQ,EAAA1R,YAAY6L,OAChB,KAAK,EAAAnK,YAAYiQ,OACb,MAAO,QACX,KAAK,EAAAjQ,YAAYkQ,OACb,MAAO,OACX,QACI,MAAO,QAInB,MAAO,CAAEpB,KA5DT,WACI,OAAO,UAAE,UAAW,UAAE,OAIf,UAAE,OAAQ,CACbsB,IACAP,IACAQ,Y,kKCfZ,gBACA,OACA,OAEA,wBAcI,MAAO,CACHvB,KAbJ,WACI,OAAO,UAAE,QAAS,CACd,UAAE,EAAAC,oBAYNwB,SARJ,WACQ,EAAAtQ,YAAYC,aACZ8D,OAAOC,SAASE,KAAO,gB,kKCdnC,gBACA,OAIA,yBAWI,MAAO,CACH2K,KAVJ,WACI,OAAO,UAAE,WAAY,CACjB,UAAE,EAAAC,iBACF,UAAE,EAAAC,oBACF,UAAE,EAAAwB,qBACF,UAAE,EAAAC,wB,kKCZd,gBACA,OACA,OAEA,yBAcI,MAAO,CACH3B,KAbJ,WACI,IAAIhB,EAAQ,EAAApP,aAAasN,QAAQlP,IAAI,UAAE8B,MAAM8Q,MAAM,YACnD,QAAc1O,IAAV8M,EAAqB,OAAO,KAChC,IAAIjE,EAAUiE,EAAMvE,SAASzM,IAAI2R,SAAS,UAAE7P,MAAM8Q,MAAM,eACxD,YAAgB1O,IAAZ6I,EAA8B,KAE3B,UAAE,SAAU,CACf,UAAE,EAAAkF,iBACF,UAAE,OAAQ,UAAUjB,EAAMzE,mBAAmBQ,EAAQR,e,ueCdjE,gBACA,OAEA,iCAEI,IAAIqH,GAAgB,EAChBC,EAAuB,GAS3B,SAASC,IACL,OAAO,UAAE,SAAU,CACf7G,GAAI,mBACJmF,QAAS,IAAY,EAAD,gCACZwB,GAAe,EAAAxP,kBAAkBkN,iBAAiBuC,GACtDA,EAAe,GACfD,GAAiBA,MAEtB,EAAkB,MAAQ,OAGjC,SAASG,IACL,OAAKH,EACE,UAAE,WAAY,CACjB3G,GAAI,iBACJ+G,YAAa,oDACbC,QAAUC,GAAeL,EAAeK,EAAMC,OAAO/T,QAJ9B,KAQ/B,MAAO,CACH4R,KA5BJ,WACI,OAAO,UAAE,cAAe,CACpB8B,IACAC","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export * from \"./caret\"\nexport * from \"./errors\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncer\"\n","module.exports = m;","import m from \"mithril\"\nimport { SyncerController } from \"./controllers\"\nimport { signinView, libraryView, shelfView, journalView } from \"./views\"\nimport { ServiceWorkerModel, SyncerModel, LibraryModel } from \"./models\"\n\nconst root = document.getElementById(\"root\")\n\nexport const serviceWorkerModel = new ServiceWorkerModel()\nexport const syncerModel = new SyncerModel()\nexport const syncerController = new SyncerController(syncerModel)\nexport const libraryModel = new LibraryModel()\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,                                   // TODO decide what this should be\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/library/:shelfId/:journalId\": journalView,\n        // \"/demo\" : app,                                   // TODO\n        // \"/about\": about,                                 // TODO\n    })\n}\n","export * from \"./TagModel\"\r\nexport * from \"./EntryModel\"\r\nexport * from \"./ShelfModel\"\r\nexport * from \"./SyncerModel\"\r\nexport * from \"./GoogleModel\"\r\nexport * from \"./JournalModel\"\r\nexport * from \"./LibraryModel\"\r\nexport * from \"./ServiceWorkerModel\"\r\n","export * from \"./misc\"\nexport * from \"./errors\"\nexport * from \"./textOps\"\nexport * from \"./caretOps\"\nexport * from \"./patterns\"\n","export * from \"./googleController\"\r\nexport * from \"./SyncerController\"\r\nexport * from \"./libraryController\"\r\nexport * from \"./storageController\"\r\n","// TODO: remove old components directory at src/components and replace with this directory\nexport * from \"./googleComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./journalsComponent\"\nexport * from \"./syncStateComponent\"\nexport * from \"./addShelvesComponent\"\n","import { ErrorPayload, SyncerPayloadType } from \".\"\n\nexport interface GapiErrorResponseBody {\n    code: number,\n    message: string,\n    status: string\n}\n\nexport interface GapiErrorResponse {\n    error: GapiErrorResponseBody\n}\n\nexport class SyncerError extends Error {\n    public payload: ErrorPayload\n\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean) {\n        super(errorMsg)\n        this.payload = {\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: SyncerPayloadType.ERROR,\n        }\n    }\n}\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"7\"\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSheetsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload | AuthUpdatePayload |\n    UnpausePayload | SyncStatePayload | ErrorPayload | TokenRequestPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    GET_SHEETS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n}\n\nexport interface GetSheetsPayload {\n    type: SyncerPayloadType.GET_SHEETS\n    spreadsheetId: string\n    sheets: gapi.client.sheets.Sheet[]\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    friendlyMsg: string\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n}\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nclass GoogleModel {\n    public src: string\n    public scope: string\n    public clientId: string\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    constructor(isSignedIn?: boolean) {\n        this.isSignedIn = isSignedIn\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\n            \"https://www.googleapis.com/auth/spreadsheets\"\n        ].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    get token(): string | undefined {\n        if (!this.user) return\n        let auth = this.user.getAuthResponse()\n        return auth.access_token\n    }\n}\n\nexport const googleModel = new GoogleModel()\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { libraryController } from \".\"\r\nimport { syncerController } from \"..\"\r\nimport { googleModel } from \"../models\"\r\nimport { getTestMode } from \"../helpers\"\r\n\r\nexport const googleController = {\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    initGapi: initGapi,\r\n}\r\n\r\nfunction signOut() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\r\n}\r\n\r\nfunction signIn() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\r\n}\r\n\r\nfunction initGapi() {\r\n    let gapi_ = (getTestMode() === TestMode.OFF) ? gapi : new MockGapi()\r\n    googleModel.gapi_ = gapi_\r\n    googleModel.gapi_.load('auth2', () => {\r\n        googleModel.gapi_!.auth2.init({\r\n            scope: googleModel.scope, client_id: googleModel.clientId\r\n        }).then(() => {\r\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\r\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\r\n        })\r\n    })\r\n\r\n}\r\n\r\nasync function isSignedIn(signedIn: boolean) {\r\n    googleModel.isSignedIn = signedIn\r\n    if (googleModel.isSignedIn) {\r\n        googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\r\n        let token = googleModel.token\r\n        if (token !== undefined) {\r\n            syncerController.updateAuth(token)\r\n        }\r\n        await libraryController.loadShelves()\r\n    } else {\r\n        libraryController.removeShelves()\r\n    }\r\n    m.redraw()\r\n\r\n    // if (getTestMode() === TestMode.DEMO) {\r\n    //     journal.isSignedIn = true\r\n    //     journal.load(\"https://docs.google.com/spreadsheets/d/demo/edit\")\r\n    //     return []\r\n    // }\r\n}\r\n","export * from \"./Gapi\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import { escapeHtml } from \"../helpers\"\n\nexport class TagModel {\n    public frq: number\n    public raw: string\n    public key: string\n    public flag: string\n    public clean: string\n    public cleanKey: string\n    public val: string | null\n    public cleanVal: string | null\n    public separator: string | null\n\n    constructor(raw: string, flag: string, key: string, separator: string | undefined | null, val: string | undefined | null) {\n        this.frq = 1\n        this.raw = raw\n        this.flag = flag\n        this.key = key\n        this.separator = (separator !== undefined) ? separator : null\n        this.val = (val !== undefined) ? val : null\n        this.clean = this.cleanTagString(this.raw)\n        this.cleanKey = this.cleanTagString(this.key)\n        this.cleanVal = (this.val !== null) ? this.cleanTagString(this.val) : null\n    }\n\n    public renderKey(): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + ((this.separator) ? this.separator : \"\")\n            + \"')\\\" class=\\\"\"\n            + ((this.separator) ? \"tagKey\" : (this.val === null) ? \"simpleTag\" : \"roundTagVal\")\n            + \"\\\">\"\n            + this.flag\n            + this.key\n            + \"</span>\"\n    }\n\n    public renderVal(hideKeys?: boolean): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + this.separator\n            + this.cleanVal?.replace(/'/, \"\\\\'\")\n            + \"')\\\" class=\\\"\"\n            + ((hideKeys) ? \"roundTagVal\" : \"tagVal\")\n            + \"\\\">\"\n            + ((hideKeys) ? \"\" : this.separator)\n            + (this.val || \"\")\n            + \"</span>\"\n    }\n\n    public render(hideKeys?: boolean): string {\n        if (this.separator) {\n            return (hideKeys) ? this.renderVal(hideKeys) : this.renderKey() + this.renderVal(hideKeys)\n        } else {\n            return this.renderKey()\n        }\n    }\n\n    private cleanTagString(str: string) {\n        str = escapeHtml(str)\n        str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\n        str = str.toLowerCase()\n        return str\n    }\n}\n","import { TestMode } from \"../types\"\n\nexport function getHash(): string {\n    let url = new URL(window.location.href)\n    return url.hash\n}\n\nexport function getTestMode(): TestMode {\n    let url = new URL(window.location.href)\n    if (url.hash === \"#!demo\") {\n        return TestMode.DEMO\n    }\n    let test = url.searchParams.get(\"test\")\n    return (test !== null && instanceOfTestMode(test)) ? test : TestMode.OFF\n\n}\n\nfunction instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","import m from \"mithril\"\n\nexport class FriendlyError extends Error {\n    constructor(errorMsg: string, public friendlyMsg: string) {\n        super(errorMsg)\n        console.warn(errorMsg)\n        // journal.errors.push(friendlyMsg) // TODO reassign\n        m.redraw()\n    }\n}\n","export function escapeHtml(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n","function node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nexport function getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nexport function setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","export const tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\n","import { TagModel } from \".\"\nimport { tagPattern, escapeHtml } from \"../helpers\"\n\nexport type TagsMap = Map<string, TagModel>\n\ninterface TagMatch {\n    tag: TagModel,\n    match: RegExpMatchArray\n}\n\nexport interface IndexedEntry {\n    idx: number,\n    entry: EntryModel,\n}\n\nexport class EntryModel {\n    public tags: TagsMap = new Map()\n    public hovered: boolean = false\n    public focused: boolean = false\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public savedClean: string = \"\"\n    private tagMatches: TagMatch[] = []\n    public readableRendered: string = \"\"\n    private rawText: string = \"\"\n    private savedText: string = \"\"\n\n    constructor(raw?: string | undefined, saved?: string | undefined) {\n        this.raw = (raw) ? raw : \"\"\n        this.saved = (saved !== undefined) ? saved : this.raw\n    }\n\n    public get saved(): string {\n        return this.savedText\n    }\n    public set saved(str: string) {\n        this.savedText = str\n        this.savedClean = str.toLowerCase()\n        this.tags = this.getTags(this.tagMatches)\n    }\n\n    public get raw(): string {\n        return this.rawText\n    }\n    public set raw(raw: string) {\n        this.rawText = raw\n        this.clean = this.raw.toLowerCase()\n        let safe = escapeHtml(this.rawText)\n        this.tokens = this.getTokens(this.clean)\n        this.tagMatches = this.getTagMatches(safe)\n        this.rendered = this.render(safe, this.tagMatches)\n        this.readableRendered = this.render(safe, this.tagMatches, true)\n    }\n\n    private render(text: string, tagMatches: TagMatch[], hideKeys?: boolean): string {\n        for (let { tag, match } of tagMatches) {\n            let chars = text.split(\"\")\n            chars.splice(match.index!, match[0].length, tag.render(hideKeys))\n            text = chars.join(\"\")\n        }\n        return text\n    }\n\n    private getTags(tagMatches: TagMatch[]): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let { tag } of tagMatches) {\n            if (tags.has(tag.clean)) {\n                tags.get(tag.clean)!.frq += 1\n            } else {\n                tags.set(tag.clean, tag)\n            }\n        }\n        return tags\n    }\n\n    private getTagMatches(text: string): TagMatch[] {\n        let tagMatches = []\n        let matchesIter = text.matchAll(tagPattern)\n        for (let match of matchesIter) {\n            let tag = new TagModel(match[0], match[1], match[2], match[3], match[4])\n            tagMatches.push({ tag: tag, match: match })\n        }\n        tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n        return tagMatches\n    }\n\n    private getTokens(text: string): string[] {\n        let tokens = text.split(\" \")\n        return tokens.filter(token => {\n            return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n        })\n    }\n\n}\n","import { JournalFactory, JournalModel } from \".\"\n\nexport class ShelfFactory {\n\n    private journalFactory = new JournalFactory()\n\n    public createShelf(spreadsheetId: string, spreadsheet?: gapi.client.sheets.Spreadsheet, error?: string) {\n        if (\n            spreadsheet !== undefined &&\n            spreadsheet.spreadsheetId !== undefined &&\n            spreadsheet.properties !== undefined &&\n            spreadsheet.properties.title !== undefined &&\n            spreadsheet.sheets !== undefined\n        ) {\n            let journals = this.getJournals(spreadsheet.spreadsheetId, spreadsheet.sheets)\n            return new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title, journals)\n        }\n        return new ShelfModel(spreadsheetId, undefined, undefined, error)\n    }\n\n    private getJournals(spreadsheetId: string, sheets: gapi.client.sheets.Sheet[]) {\n        let journals: JournalModel[] = []\n        sheets.forEach(sheet => {\n            if (\n                sheet.properties !== undefined &&\n                sheet.properties.title !== undefined &&\n                sheet.properties.sheetId !== undefined\n            ) {\n                let journal = this.journalFactory.createJournal(\n                    sheet.properties.sheetId, spreadsheetId, sheet.properties.title\n                )\n                if (journal === undefined) return\n                journals.push(journal)\n            }\n        })\n        return journals\n    }\n\n}\n\nexport class ShelfModel {\n    public id: string\n    public error: string | undefined\n    public title: string | undefined\n    public journals: Map<number, JournalModel> = new Map()\n\n    constructor(id: string, title?: string, journals?: JournalModel[], error?: string) {\n        this.id = id\n        this.error = error\n        this.title = title\n        if (journals !== undefined) this.addJournals(journals)\n    }\n\n    public addJournals(journals: JournalModel[]) {\n        journals.filter(journal => !this.journals.has(journal.id))\n            .forEach(journal => this.journals.set(journal.id, journal))\n    }\n}\n","import { MockGoogleUser } from \"../mocks\"\r\nimport { FriendlyError } from \"../helpers\"\r\nimport { SyncerState, SyncerPayload, SyncerPayloadType, ErrorPayload } from \"../types\"\r\nimport { googleModel } from \"./GoogleModel\"\r\nimport { syncerController } from \"..\"\r\n\r\nexport class SyncerModel {\r\n    public worker: Worker\r\n    private requestsCounter = 0\r\n    private requests: Map<string, Function> = new Map()\r\n    public state: SyncerState = SyncerState.DOWNLOADING\r\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | null = null\r\n\r\n    constructor() {\r\n        this.worker = new Worker(\"./js/syncWebWorker.js\")\r\n        this.worker.onmessage = (msg: MessageEvent) => this.onMessage(msg)\r\n    }\r\n\r\n    public pushSyncerTask<P extends SyncerPayload>(payload: P): Promise<P> {\r\n        let id = `payload-${this.requestsCounter++}`\r\n        return new Promise((resolve, reject) => {\r\n            this.requests.set(id, ({ payload, error }: { payload: P, error: ErrorPayload }) => {\r\n                (error) ? reject(error) : resolve(payload)\r\n            })\r\n            this.worker.postMessage({ id, payload })\r\n        })\r\n    }\r\n\r\n    private onMessage(msg: MessageEvent) {\r\n        let { id, payload, error }: { id: string | null, payload: SyncerPayload , error: ErrorPayload } = msg.data\r\n        if (id !== null && this.requests.has(id)) {\r\n            this.requests.get(id)!({ payload, error })\r\n            this.requests.delete(id)\r\n        } else {\r\n            switch (payload.type) {\r\n                case SyncerPayloadType.SYNC_STATE:\r\n                    this.state = payload.state\r\n                    break\r\n                case SyncerPayloadType.ERROR:\r\n                    new FriendlyError(payload.error.message, payload.friendlyMsg)\r\n                    break\r\n                case SyncerPayloadType.TOKEN_REQUEST:\r\n                    syncerController.updateAuth(googleModel.token)\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { EntryModel, TagsMap, TagModel } from \".\"\n\nexport class JournalFactory {\n    public createJournal(id: number, shelfId: string, title: string) {\n        return new JournalModel(id, shelfId, title)\n    }\n}\n\nexport class JournalModel {\n    public id: number\n    public tags: TagsMap\n    public title: string\n    public shelfId: string\n    public entries: EntryModel[] = []\n\n    constructor(id: number, shelfId: string, title: string) {\n        this.id = id\n        this.title = title\n        this.tags = new Map()\n        this.shelfId = shelfId\n    }\n\n    private buildTags(): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let entry of Array.from(this.entries.values()).reverse()) {\n            for (let [key, tag] of entry.tags) {\n                if (tags.has(key)) {\n                    tags.get(key)!.frq += tag.frq\n                } else {\n                    tags.set(key, new TagModel(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n                }\n            }\n        }\n        return tags\n    }\n\n    public addEntry(idx: number, content: string) {\n        this.entries.splice(idx, 0, new EntryModel(content))\n        this.tags = this.buildTags()\n    }\n\n    public updateEntry(idx: number, content: string) {\n        let entry = this.entries[idx]\n        if (entry.saved === content) { return }\n        entry.saved = content\n        this.tags = this.buildTags()\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)[0]\n        this.tags = this.buildTags()\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        let entry = this.entries[fromIdx]\n        this.entries.splice(fromIdx, 1)\n        this.entries.splice(toIdx, 0, entry)\n    }\n\n}\n","import { ShelfModel } from \".\"\n\nexport class LibraryModel {\n    public shelves: Map<string, ShelfModel | undefined>\n\n    constructor() {\n        this.shelves = new Map()\n        this.shelfIds.forEach(id => this.shelves.set(id, undefined))\n    }\n\n    set shelfIds(ids: string[]) {\n        localStorage.setItem(\"spreadsheetIds\", ids.join(\",\"))\n    }\n    get shelfIds(): string[] {\n        let ids = localStorage.getItem(\"spreadsheetIds\") || undefined\n        if (ids === undefined) return []\n        return ids.split(\",\")\n    }\n\n}\n","import { FriendlyError } from \"../helpers\"\n\nexport class ServiceWorkerModel {\n    constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            throw new FriendlyError(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n}\n","import { SyncerModel } from \"../models\" // TODO: TRY TO IMPORT FROM \"..\" (index.ts)\r\nimport { SyncerPayloadType, TestMode, GetSpreadsheetPayload, GetSheetsPayload, GetRowsPayload } from \"../types\"\r\n\r\nexport class SyncerController {\r\n\r\n    private syncerModel: SyncerModel\r\n\r\n    constructor(syncerModel: SyncerModel) {\r\n        this.syncerModel = syncerModel\r\n    }\r\n\r\n    public async updateTestMode(testMode: TestMode) {\r\n        return await this.syncerModel.pushSyncerTask({\r\n            type: SyncerPayloadType.TEST_MODE_UPDATE,\r\n            testMode: testMode,\r\n        })\r\n    }\r\n\r\n    public updateAuth(token: string | undefined) {\r\n        if (token === undefined) return\r\n        return this.syncerModel.pushSyncerTask({\r\n            type: SyncerPayloadType.AUTH_UPDATE,\r\n            token: token,\r\n        })\r\n    }\r\n\r\n    public getSpreadsheet(spreadsheetId: string) {\r\n        let task: GetSpreadsheetPayload = {\r\n            type: SyncerPayloadType.GET_SPREADSHEET,\r\n            spreadsheetId: spreadsheetId,\r\n            spreadsheet: undefined\r\n        }\r\n        return this.syncerModel.pushSyncerTask(task)\r\n    }\r\n\r\n    public async getSheets(spreadsheetId: string) {\r\n        let task: GetSheetsPayload = {\r\n            type: SyncerPayloadType.GET_SHEETS,\r\n            spreadsheetId: spreadsheetId,\r\n            sheets: []\r\n        }\r\n        let result = await this.syncerModel.pushSyncerTask(task)\r\n        return result\r\n    }\r\n\r\n    public async getRows(spreadsheetId: string, sheetId: number, sheetTitle: string) {\r\n        let task: GetRowsPayload = {\r\n            type: SyncerPayloadType.GET_ROWS,\r\n            spreadsheetId: spreadsheetId,\r\n            sheetTitle: sheetTitle,\r\n            sheetId: sheetId,\r\n            rows: []\r\n        }\r\n        let result = await this.syncerModel.pushSyncerTask(task)\r\n        return result\r\n    }\r\n\r\n    public async deleteRow(idx: number, spreadsheetId: string, sheetId: number) {\r\n        return await this.syncerModel.pushSyncerTask({\r\n            type: SyncerPayloadType.DELETE_ROW,\r\n            spreadsheetId: spreadsheetId,\r\n            sheetId: sheetId,\r\n            idx: idx,\r\n        })\r\n    }\r\n\r\n    public async updateRow(idx: number, spreadsheetId: string, sheetId: number, sheetTitle: string, content: string) {\r\n        return await this.syncerModel.pushSyncerTask({\r\n            type: SyncerPayloadType.UPDATE_ROW,\r\n            spreadsheetId: spreadsheetId,\r\n            sheetTitle: sheetTitle,\r\n            sheetId: sheetId,\r\n            content: content,\r\n            idx: idx,\r\n        })\r\n    }\r\n\r\n    public async unpause() {\r\n        return await this.syncerModel.pushSyncerTask({ type: SyncerPayloadType.UNPAUSE })\r\n    }\r\n}\r\n","import m from \"mithril\"\nimport { ErrorPayload } from \"../types\"\nimport { ShelfFactory } from \"../models\"\nimport { libraryModel, syncerController } from \"..\"\nimport { FriendlyError } from \"../helpers\"\n\nconst shelfFactory = new ShelfFactory()\nconst spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n\nexport const libraryController = {\n    addShelvesByUrls: addShelvesByUrls,\n    addShelves: addShelves,\n    removeShelves: removeShelves,\n    loadShelves: loadShelves,\n    getSpreadsheetIdsFromUrls: getSpreadsheetIdsFromUrls,\n}\n\nfunction addShelvesByUrls(urls: string) {\n    let ids = getSpreadsheetIdsFromUrls(urls)\n    addShelves(ids)\n}\n\nfunction addShelves(ids: string[]) {\n    ids.filter(id => !libraryModel.shelves.has(id))\n        .forEach(id => libraryModel.shelves.set(id, undefined))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n    loadShelves(false)\n}\n\nfunction removeShelves(ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    ids.filter(id => libraryModel.shelves.has(id))\n        .forEach(id => libraryModel.shelves.delete(id))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n}\n\nasync function loadShelves(reloadLoaded?: boolean, ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    let shelvesToLoad = (reloadLoaded) ? ids : ids.filter(id => !libraryModel.shelves.get(id))\n    shelvesToLoad.forEach(id => syncerController.getSpreadsheet(id)\n        .then(payload => {\n            let shelf = shelfFactory.createShelf(id, payload.spreadsheet)\n            libraryModel.shelves.set(shelf.id, shelf)\n        })\n        .catch((error: ErrorPayload) => {\n            // TODO: Handle retry prep from here instead of leaving it in the queue and pausing the queue\n            new FriendlyError(error.error.message, error.friendlyMsg)\n            let shelf = shelfFactory.createShelf(id, undefined, error.friendlyMsg)\n            libraryModel.shelves.set(id, shelf)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n    )\n}\n\nfunction getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n    let ids: string[] = []\n    if (urls) {\n        Array.from(urls.matchAll(spreadsheetIdPattern)).forEach(m => ids.push(m[1]))\n    }\n    return ids\n}\n","export const storageController = {\n    setSpreadsheetId: setSpreadsheetId,\n    getSpreadsheetId: getSpreadsheetId,\n    getSpreadsheetSheetId: getSpreadsheetSheetId,\n    setSpreadsheetSheetId: setSpreadsheetSheetId,\n    delSpreadsheetSheetId: delSpreadsheetSheetId,\n}\n\nfunction setSpreadsheetId(id: string) {\n    localStorage.setItem(\"spreadsheetId\", id)\n}\nfunction getSpreadsheetId(): string | undefined {\n    return localStorage.getItem(\"spreadsheetId\") || undefined\n}\n\nfunction getSpreadsheetSheetId(spreadsheetId: string | undefined): number | undefined {\n    let sheetId = localStorage.getItem(`${spreadsheetId}-sheetId`) || undefined\n    return (sheetId !== undefined) ? parseInt(sheetId) : undefined\n}\nfunction setSpreadsheetSheetId(spreadsheetId: string, sheetId: number) {\n    localStorage.setItem(`${spreadsheetId}-sheetId`, sheetId.toString())\n}\nfunction delSpreadsheetSheetId(spreadsheetId: string | undefined) {\n    localStorage.removeItem(`${spreadsheetId}-sheetId`)\n}\n","export * from \"./shelfView\"\r\nexport * from \"./signinView\"\r\nexport * from \"./libraryView\"\r\nexport * from \"./journalView\"\r\n","import m from \"mithril\"\nimport { googleComponent, journalsComponent, syncStateComponent } from \"./components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(syncStateComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}","import m from \"mithril\"\nimport { googleModel } from \"../../models\"\nimport { googleController } from \"../../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return {\n            async: true,\n            defer: true,\n            src: googleModel.src,\n            onload: () => {\n                if (!googleModel.isSignedIn) {\n                    googleController.initGapi()\n                }\n            }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"../..\"\nimport { ShelfModel } from \"../../models\"\nimport { libraryController } from \"../../controllers\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        let shelves = Array.from(libraryModel.shelves.entries())\n        return m(\"#shelvesList\", shelves.map(([id, shelf]) => shelfNode(id, shelf)))\n    }\n\n    function delShelfButton(id: string) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: () => libraryController.removeShelves([id])\n        }, \"del\")\n    }\n\n    function shelfNode(id: string, shelf: ShelfModel | undefined) {\n        if (shelf === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", id)\n            ])\n        } else if (shelf.title === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", `${id} ${shelf.error}`)\n            ])\n        } else {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"a\", { href: `#/library/${id}` }, shelf.title)\n            ])\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}","import m from \"mithril\"\nimport { libraryModel } from \"../..\"\n\nexport function journalsComponent() {\n\n    function view() {\n        return m(\"#journals\", journalList())\n    }\n\n    function journalList() {\n        let shelf = libraryModel.shelves.get(m.route.param(\"shelfId\"))\n        if (shelf === undefined) return\n        return Array.from(shelf.journals.values()).map(journal => {\n            let link = `#/library/${journal.shelfId}/${journal.id}`\n            return m(\"li\", m(\"a\", { href: link }, journal.title))\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}","import m from \"mithril\"\nimport { syncerModel } from \"../../\"\nimport { SyncerState } from \"../../types\"\nimport { syncerController } from \"../..\"\n\nexport function syncStateComponent() {\n\n    function view() {\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncerModel.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive...\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused.\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"All changes saved.\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive...\"\n                break\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncerModel.state)\n    }\n\n    function unpauseSync() {\n        if (syncerModel.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncerController.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncerModel.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { googleModel } from \"../models\"\r\nimport { googleComponent } from \"./components\"\r\n\r\nexport function signinView() {\r\n\r\n    function view() {\r\n        return m(\"#auth\", [\r\n            m(googleComponent),\r\n        ])\r\n    }\r\n\r\n    function onupdate() {\r\n        if (googleModel.isSignedIn) {\r\n            window.location.hash = \"/library\" // TODO: redirect to correct place\r\n        }\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n\r\n}","import m from \"mithril\"\nimport { \n    googleComponent, shelvesComponent, syncStateComponent, addShelvesComponent\n} from \"./components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(syncStateComponent),\n            m(addShelvesComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { googleComponent } from \"./components\"\n\nexport function journalView() {\n\n    function view() {\n        let shelf = libraryModel.shelves.get(m.route.param(\"shelfId\"))\n        if (shelf === undefined) return null\n        let journal = shelf.journals.get(parseInt(m.route.param(\"journalId\")))\n        if (journal === undefined) return null\n\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(\"span\", `Shelf: ${shelf.title}, Journal: ${journal.title}`)\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\r\nimport { libraryController } from \"../../controllers\"\r\n\r\nexport function addShelvesComponent() {\r\n\r\n    let addingShelves = false\r\n    let newShelfUrls: string = \"\"\r\n\r\n    function view() {\r\n        return m(\"#addShelves\", [\r\n            addShelvesButton(),\r\n            spreadsheetsTextbox(),\r\n        ])\r\n    }\r\n\r\n    function addShelvesButton() {\r\n        return m(\"button\", {\r\n            id: \"addShelvesButton\",\r\n            onclick: async () => {\r\n                if (addingShelves) libraryController.addShelvesByUrls(newShelfUrls)\r\n                newShelfUrls = \"\"\r\n                addingShelves = !addingShelves\r\n            }\r\n        }, (addingShelves) ? \" ✓ \" : \"+/-\")\r\n    }\r\n\r\n    function spreadsheetsTextbox() {\r\n        if (!addingShelves) return null\r\n        return m(\"textarea\", {\r\n            id: \"addShelvesText\",\r\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n            oninput: (event: any) => newShelfUrls = event.target.value\r\n        })\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n    }\r\n\r\n}"],"sourceRoot":""}