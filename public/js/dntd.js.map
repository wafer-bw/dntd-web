{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/types/index.ts","webpack:///external \"m\"","webpack:///./src/models/index.ts","webpack:///./src/helpers/index.ts","webpack:///./src/index.ts","webpack:///./src/views/components/index.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncerTasks.ts","webpack:///./src/types/syncerResponses.ts","webpack:///./src/controllers/index.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/helpers/misc.ts","webpack:///./src/helpers/errors.ts","webpack:///./src/helpers/textOps.ts","webpack:///./src/helpers/caretOps.ts","webpack:///./src/helpers/patterns.ts","webpack:///./src/helpers/localStorageOps.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/models/ServiceWorkerModel.ts","webpack:///./src/controllers/syncerController.ts","webpack:///./src/views/index.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/views/components/googleComponent.ts","webpack:///./src/views/components/shelvesComponent.ts","webpack:///./src/views/components/journalsComponent.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","root","document","getElementById","syncerModel","SyncerModel","syncerController","SyncerController","serviceWorkerModel","ServiceWorkerModel","libraryModel","LibraryFactory","createLibrary","route","signinView","libraryView","shelfView","journalView","SearchType","TestMode","SyncerPayloadType","SyncerResponseType","SyncerState","isSignedIn","signedIn","googleModel","user","gapi_","auth2","getAuthInstance","currentUser","token","getToken","undefined","updateAuth","load","redraw","googleController","signIn","signOut","initGapi","getTestMode","OFF","gapi","MockGapi","init","scope","client_id","clientId","then","listen","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","access_token","MockIsSignedIn","raw","flag","separator","val","this","frq","clean","cleanTagString","cleanKey","cleanVal","hideKeys","replace","renderVal","renderKey","str","escapeHtml","endsWith","substring","length","toLowerCase","URL","window","location","href","hash","url","DEMO","test","searchParams","values","includes","FriendlyError","Error","errorMsg","friendlyMsg","super","console","warn","unsafe","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","tagPattern","spreadsheetIdPattern","id","localStorage","setItem","getItem","urls","hide","spreadsheetId","sheetId","parseInt","toString","removeItem","saved","tags","Map","hovered","focused","tokens","rendered","savedClean","tagMatches","readableRendered","rawText","savedText","getTags","safe","getTokens","getTagMatches","render","text","tag","match","chars","split","splice","index","join","has","set","matchesIter","matchAll","TagModel","push","sort","a","b","filter","trim","journalFactory","JournalFactory","spreadsheet","properties","title","sheets","journals","getJournals","ShelfModel","forEach","sheet","journal","createJournal","requestsCounter","requests","state","DOWNLOADING","worker","Worker","onmessage","msg","onMessage","payload","Promise","resolve","reject","error","postMessage","data","log","delete","src","getAuthResponse","shelfId","JournalModel","entries","entry","Array","from","reverse","idx","content","EntryModel","buildTags","fromIdx","toIdx","spreadsheetUrlsString","getStoredSpreadsheetUrls","spreadsheetIds","getSpreadsheetIdsFromUrls","LibraryModel","ids","shelves","shelfFactory","ShelfFactory","shelfIds","spreadsheets","getSpreadsheets","getShelves","shelf","createShelf","getSpreadsheet","navigator","addEventListener","serviceWorker","register","testMode","pushSyncerTask","type","TEST_MODE_UPDATE","AUTH_UPDATE","task","GET_SPREADSHEET","GET_SHEETS","sheetTitle","GET_ROWS","rows","DELETE_ROW","UPDATE_ROW","UNPAUSE","view","googleComponent","journalsComponent","onclick","class","async","defer","onload","map","param","journalId","onupdate","shelvesComponent"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","export * from \"./caret\"\nexport * from \"./errors\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncerTasks\"\nexport * from \"./syncerResponses\"\n","module.exports = m;","export * from \"./TagModel\"\r\nexport * from \"./EntryModel\"\r\nexport * from \"./ShelfModel\"\r\nexport * from \"./SyncerModel\"\r\nexport * from \"./GoogleModel\"\r\nexport * from \"./JournalModel\"\r\nexport * from \"./LibraryModel\"\r\nexport * from \"./ServiceWorkerModel\"\r\n","export * from \"./misc\"\nexport * from \"./errors\"\nexport * from \"./textOps\"\nexport * from \"./caretOps\"\nexport * from \"./patterns\"\nexport * from \"./localStorageOps\"\n","import m from \"mithril\"\nimport { SyncerController } from \"./controllers\"\nimport { signinView, libraryView, shelfView, journalView } from \"./views\"\nimport { ServiceWorkerModel, SyncerModel, LibraryFactory } from \"./models\"\n\nconst root = document.getElementById(\"root\")\n\nexport const syncerModel = new SyncerModel()\nexport const syncerController = new SyncerController(syncerModel)\nexport const serviceWorkerModel = new ServiceWorkerModel()\nexport const libraryModel = new LibraryFactory().createLibrary()\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,                                   // TODO decide what this should be\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/library/:shelfId/:journalId\": journalView,\n        // \"/demo\" : app,                                   // TODO\n        // \"/about\": about,                                 // TODO\n    })\n}\n","// TODO: remove old components directory at src/components and replace with this directory\nexport * from \"./googleComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./journalsComponent\"\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"7\"\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerTaskPayload = (\n    GetRowsPayload | GetSheetsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload | AuthUpdatePayload |\n    UnpausePayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    GET_SHEETS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n}\n\nexport interface GetSheetsPayload {\n    type: SyncerPayloadType.GET_SHEETS\n    spreadsheetId: string\n    sheets: gapi.client.sheets.Sheet[]\n}\n","import { SyncerError } from \"../workers/sync\"\n\nexport type SyncerResponse = (\n    RowsResponse | SheetsResponse | QueueStateResponse | ErrorResponse | ReauthResponse\n)\n\nexport enum SyncerResponseType {\n    ROWS,\n    SHEETS,\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n}\n\nexport interface RowsResponse {\n    type: SyncerResponseType.ROWS\n    spreadsheetId: string\n    sheetId: number\n    rows: string[]\n}\n\nexport interface SheetsResponse {\n    type: SyncerResponseType.SHEETS\n    spreadsheetId: string\n    sheets: gapi.client.sheets.Sheet[]\n}\n\nexport interface QueueStateResponse {\n    type: SyncerResponseType.SYNCER_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorResponse {\n    type: SyncerResponseType.ERROR\n    error: SyncerError | Error\n    friendlyMsg: string\n}\n\nexport interface ReauthResponse {\n    type: SyncerResponseType.REAUTH\n}\n","export * from \"./googleController\"\r\nexport * from \"./syncerController\"\r\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { googleModel } from \"../models\"\r\nimport { getTestMode } from \"../helpers\"\r\nimport { syncerController, libraryModel } from \"..\"\r\n\r\nexport const googleController = {\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    initGapi: initGapi,\r\n}\r\n\r\nfunction signOut() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\r\n}\r\n\r\nfunction signIn() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\r\n}\r\n\r\nfunction initGapi() {\r\n    let gapi_ = (getTestMode() === TestMode.OFF) ? gapi : new MockGapi()\r\n    googleModel.gapi_ = gapi_\r\n    googleModel.gapi_.load('auth2', () => {\r\n        googleModel.gapi_!.auth2.init({\r\n            scope: googleModel.scope, client_id: googleModel.clientId\r\n        }).then(() => {\r\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\r\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nasync function isSignedIn(signedIn: boolean) {\r\n    googleModel.isSignedIn = signedIn\r\n    googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\r\n    let token = googleModel.getToken()\r\n    if (token !== undefined) {\r\n        syncerController.updateAuth(token)\r\n    }\r\n    await libraryModel.load()\r\n    m.redraw()\r\n\r\n    // journal.isSignedIn = signedIn\r\n    // m.redraw()\r\n    // if (journal.isSignedIn) {\r\n\r\n    //     await initJournal()\r\n    // } else {\r\n    //     journal.unload()\r\n    // }\r\n\r\n    // async function initJournal() {\r\n    //     let spreadsheetUrls = getStoredSpreadsheetUrls()\r\n    //     await journal.load(spreadsheetUrls)\r\n    // }\r\n\r\n    // if (getTestMode() === TestMode.DEMO) {\r\n    //     journal.isSignedIn = true\r\n    //     journal.load(\"https://docs.google.com/spreadsheets/d/demo/edit\")\r\n    //     return []\r\n    // }\r\n}\r\n","export * from \"./Gapi\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import { escapeHtml } from \"../helpers\"\n\nexport class TagModel {\n    public frq: number\n    public raw: string\n    public key: string\n    public flag: string\n    public clean: string\n    public cleanKey: string\n    public val: string | null\n    public cleanVal: string | null\n    public separator: string | null\n\n    constructor(raw: string, flag: string, key: string, separator: string | undefined | null, val: string | undefined | null) {\n        this.frq = 1\n        this.raw = raw\n        this.flag = flag\n        this.key = key\n        this.separator = (separator !== undefined) ? separator : null\n        this.val = (val !== undefined) ? val : null\n        this.clean = this.cleanTagString(this.raw)\n        this.cleanKey = this.cleanTagString(this.key)\n        this.cleanVal = (this.val !== null) ? this.cleanTagString(this.val) : null\n    }\n\n    public renderKey(): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + ((this.separator) ? this.separator : \"\")\n            + \"')\\\" class=\\\"\"\n            + ((this.separator) ? \"tagKey\" : (this.val === null) ? \"simpleTag\" : \"roundTagVal\")\n            + \"\\\">\"\n            + this.flag\n            + this.key\n            + \"</span>\"\n    }\n\n    public renderVal(hideKeys?: boolean): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + this.separator\n            + this.cleanVal?.replace(/'/, \"\\\\'\")\n            + \"')\\\" class=\\\"\"\n            + ((hideKeys) ? \"roundTagVal\" : \"tagVal\")\n            + \"\\\">\"\n            + ((hideKeys) ? \"\" : this.separator)\n            + (this.val || \"\")\n            + \"</span>\"\n    }\n\n    public render(hideKeys?: boolean): string {\n        if (this.separator) {\n            return (hideKeys) ? this.renderVal(hideKeys) : this.renderKey() + this.renderVal(hideKeys)\n        } else {\n            return this.renderKey()\n        }\n    }\n\n    private cleanTagString(str: string) {\n        str = escapeHtml(str)\n        str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\n        str = str.toLowerCase()\n        return str\n    }\n}\n","import { TestMode } from \"../types\"\n\nexport function getHash(): string {\n    let url = new URL(window.location.href)\n    return url.hash\n}\n\nexport function getTestMode(): TestMode {\n    let url = new URL(window.location.href)\n    if (url.hash === \"#!demo\") {\n        return TestMode.DEMO\n    }\n    let test = url.searchParams.get(\"test\")\n    return (test !== null && instanceOfTestMode(test)) ? test : TestMode.OFF\n\n}\n\nfunction instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","import m from \"mithril\"\n\nexport class FriendlyError extends Error {\n    constructor(errorMsg: string, public friendlyMsg: string) {\n        super(errorMsg)\n        // journal.errors.push(friendlyMsg) // TODO reassign\n        console.warn(errorMsg)\n        m.redraw()\n    }\n}\n","export function escapeHtml(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n","function node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nexport function getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nexport function setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","export const tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\nexport const spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n","export function setStoredSpreadsheetId(id: string) {\n    localStorage.setItem(\"spreadsheetId\", id)\n}\nexport function getStoredSpreadsheetId(): string | undefined {\n    return localStorage.getItem(\"spreadsheetId\") || undefined\n}\n\nexport function setStoredSpreadsheetUrls(urls: string) {\n    localStorage.setItem(\"spreadsheetUrls\", urls)\n}\nexport function getStoredSpreadsheetUrls(): string | undefined {\n    return localStorage.getItem(\"spreadsheetUrls\") || undefined\n}\n\nexport function setStoredHideEntriesKeys(hide: boolean) {\n    localStorage.setItem(\"hideEntriesKeys\", (hide) ? \"1\": \"0\")\n}\nexport function getStoredHideEntriesKeys(): boolean {\n    return localStorage.getItem(\"hideEntriesKeys\") === \"1\"\n}\n\nexport function setStoredHideTagRefines(hide: boolean) {\n    localStorage.setItem(\"hideTagRefines\", (hide) ? \"1\": \"0\")\n}\nexport function getStoredHideTagRefines(): boolean {\n    return localStorage.getItem(\"hideTagRefines\") === \"1\"\n}\n\nexport function getStoredSpreadsheetSheetId(spreadsheetId: string | undefined): number | undefined {\n    let sheetId = localStorage.getItem(`${spreadsheetId}-sheetId`) || undefined\n    return (sheetId !== undefined) ? parseInt(sheetId) : undefined\n}\nexport function setStoredSpreadsheetSheetId(spreadsheetId: string, sheetId: number) {\n    localStorage.setItem(`${spreadsheetId}-sheetId`, sheetId.toString())\n}\nexport function delStoredSpreadsheetSheetId(spreadsheetId: string | undefined) {\n    localStorage.removeItem(`${spreadsheetId}-sheetId`)\n}\n","import { TagModel } from \".\"\nimport { tagPattern, escapeHtml } from \"../helpers\"\n\nexport type TagsMap = Map<string, TagModel>\n\ninterface TagMatch {\n    tag: TagModel,\n    match: RegExpMatchArray\n}\n\nexport interface IndexedEntry {\n    idx: number,\n    entry: EntryModel,\n}\n\nexport class EntryModel {\n    public tags: TagsMap = new Map()\n    public hovered: boolean = false\n    public focused: boolean = false\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public savedClean: string = \"\"\n    private tagMatches: TagMatch[] = []\n    public readableRendered: string = \"\"\n    private rawText: string = \"\"\n    private savedText: string = \"\"\n\n    constructor(raw?: string | undefined, saved?: string | undefined) {\n        this.raw = (raw) ? raw : \"\"\n        this.saved = (saved !== undefined) ? saved : this.raw\n    }\n\n    public get saved(): string {\n        return this.savedText\n    }\n    public set saved(str: string) {\n        this.savedText = str\n        this.savedClean = str.toLowerCase()\n        this.tags = this.getTags(this.tagMatches)\n    }\n\n    public get raw(): string {\n        return this.rawText\n    }\n    public set raw(raw: string) {\n        this.rawText = raw\n        this.clean = this.raw.toLowerCase()\n        let safe = escapeHtml(this.rawText)\n        this.tokens = this.getTokens(this.clean)\n        this.tagMatches = this.getTagMatches(safe)\n        this.rendered = this.render(safe, this.tagMatches)\n        this.readableRendered = this.render(safe, this.tagMatches, true)\n    }\n\n    private render(text: string, tagMatches: TagMatch[], hideKeys?: boolean): string {\n        for (let { tag, match } of tagMatches) {\n            let chars = text.split(\"\")\n            chars.splice(match.index!, match[0].length, tag.render(hideKeys))\n            text = chars.join(\"\")\n        }\n        return text\n    }\n\n    private getTags(tagMatches: TagMatch[]): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let { tag } of tagMatches) {\n            if (tags.has(tag.clean)) {\n                tags.get(tag.clean)!.frq += 1\n            } else {\n                tags.set(tag.clean, tag)\n            }\n        }\n        return tags\n    }\n\n    private getTagMatches(text: string): TagMatch[] {\n        let tagMatches = []\n        let matchesIter = text.matchAll(tagPattern)\n        for (let match of matchesIter) {\n            let tag = new TagModel(match[0], match[1], match[2], match[3], match[4])\n            tagMatches.push({ tag: tag, match: match })\n        }\n        tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n        return tagMatches\n    }\n\n    private getTokens(text: string): string[] {\n        let tokens = text.split(\" \")\n        return tokens.filter(token => {\n            return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n        })\n    }\n\n}\n","import { JournalFactory, JournalModel } from \".\"\n\nexport class ShelfFactory {\n\n    private journalFactory = new JournalFactory()\n\n    public createShelf(spreadsheet: gapi.client.sheets.Spreadsheet) {\n        if (spreadsheet.spreadsheetId && spreadsheet.properties && spreadsheet.properties.title && spreadsheet.sheets) {\n            let journals = this.getJournals(spreadsheet.spreadsheetId, spreadsheet.sheets)\n            return new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title, journals)\n        }\n        return\n    }\n\n    private getJournals(spreadsheetId: string, sheets: gapi.client.sheets.Sheet[]) {\n        let journals: JournalModel[] = []\n        sheets.forEach(sheet => {\n            if (sheet.properties && sheet.properties.title && sheet.properties.sheetId) {\n                let journal = this.journalFactory.createJournal(\n                    sheet.properties.sheetId, spreadsheetId, sheet.properties.title\n                )\n                if (journal === undefined) return\n                journals.push(journal)\n            }\n        })\n        return journals\n    }\n\n}\n\nexport class ShelfModel {\n\n    public id: string\n    public title: string\n    public journals: JournalModel[]\n\n    constructor(id: string, title: string, journals: JournalModel[]) {\n        this.id = id\n        this.title = title\n        this.journals = journals\n    }\n\n    // TODO: add/remove journals\n\n}\n","import { MockGoogleUser } from \"../mocks\"\r\nimport { SyncerState, SyncerTaskPayload } from \"../types\"\r\n\r\nexport class SyncerModel {\r\n    public worker: Worker\r\n    private requestsCounter = 0\r\n    private requests: Map<string, Function> = new Map()\r\n    public state: SyncerState = SyncerState.DOWNLOADING\r\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | null = null\r\n\r\n    constructor() {\r\n        this.worker = new Worker(\"./js/syncWebWorker.js\")\r\n        this.worker.onmessage = (msg: MessageEvent) => this.onMessage(msg)\r\n    }\r\n\r\n    public pushSyncerTask<P extends SyncerTaskPayload>(payload: P): Promise<P> {\r\n        let id = `payload-${this.requestsCounter++}`\r\n        return new Promise((resolve, reject) => {\r\n            this.requests.set(id, ({ payload, error }: { payload: P, error: Error }) => {\r\n                (error) ? reject(error) : resolve(payload)\r\n            })\r\n            this.worker.postMessage({ id, payload })\r\n        })\r\n    }\r\n\r\n    private onMessage<P extends SyncerTaskPayload>(msg: MessageEvent) {\r\n        let { id, payload, error }: { id: string | null, payload: P, error: Error } = msg.data\r\n        if (id !== null && this.requests.has(id)) {\r\n            console.log(`resolving ${id}`)\r\n            this.requests.get(id)!({ payload, error })\r\n            this.requests.delete(id)\r\n        } else {\r\n            // Handle tasks sent from the sync worker that were not\r\n            // invoked from this here and therefore have no id.\r\n        }\r\n    }\r\n\r\n}\r\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nclass GoogleModel {\n\n    public src: string\n    public scope: string\n    public clientId: string\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    constructor(isSignedIn?: boolean) {\n        this.isSignedIn = isSignedIn\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\"https://www.googleapis.com/auth/spreadsheets\"].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    public getToken(): string | undefined {\n        if (this.user) {\n            let auth = this.user.getAuthResponse()\n            return auth.access_token\n        }\n        return\n    }\n}\n\nexport const googleModel = new GoogleModel()\n","import { EntryModel, TagsMap, TagModel } from \".\"\n\nexport class JournalFactory {\n    public createJournal(id: number, shelfId: string, title: string) {\n        return new JournalModel(id, shelfId, title)\n    }\n}\n\nexport class JournalModel {\n    public id: number\n    public tags: TagsMap\n    public title: string\n    public shelfId: string\n    public entries: EntryModel[] = []\n\n    constructor(id: number, shelfId: string, title: string) {\n        this.id = id\n        this.title = title\n        this.tags = new Map()\n        this.shelfId = shelfId\n        // this.entries = rows.map(row => new EntryModel(row))\n    }\n\n    private buildTags(): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let entry of Array.from(this.entries.values()).reverse()) {\n            for (let [key, tag] of entry.tags) {\n                if (tags.has(key)) {\n                    tags.get(key)!.frq += tag.frq\n                } else {\n                    tags.set(key, new TagModel(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n                }\n            }\n        }\n        return tags\n    }\n\n    public addEntry(idx: number, content: string) {\n        this.entries.splice(idx, 0, new EntryModel(content))\n        this.tags = this.buildTags()\n    }\n\n    public updateEntry(idx: number, content: string) {\n        let entry = this.entries[idx]\n        if (entry.saved === content) { return }\n        entry.saved = content\n        this.tags = this.buildTags()\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)[0]\n        this.tags = this.buildTags()\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        let entry = this.entries[fromIdx]\n        this.entries.splice(fromIdx, 1)\n        this.entries.splice(toIdx, 0, entry)\n    }\n\n}\n","import { syncerController } from \"..\"\nimport { ShelfFactory, ShelfModel } from \".\"\nimport { getStoredSpreadsheetUrls, spreadsheetIdPattern } from \"../helpers\"\n\nexport class LibraryFactory {\n\n    public createLibrary() {\n        let spreadsheetUrlsString = getStoredSpreadsheetUrls()\n        let spreadsheetIds = this.getSpreadsheetIdsFromUrls(spreadsheetUrlsString)\n        return new LibraryModel(spreadsheetIds)\n    }\n\n    private getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n        let ids: string[] = []\n        if (urls) {\n            let matches = Array.from(urls.matchAll(spreadsheetIdPattern))\n            matches.forEach(match => ids.push(match[1]))\n        }\n        return ids\n    }\n\n}\n\nclass LibraryModel {\n\n    public shelfIds: string[]\n    public shelves: ShelfModel[] = []\n    private shelfFactory = new ShelfFactory()\n\n    constructor(spreadsheetIds: string[]) {\n        this.shelfIds = spreadsheetIds\n    }\n\n    public async load() {\n        let spreadsheets = await this.getSpreadsheets(this.shelfIds)\n        console.log(spreadsheets)\n        this.shelves = this.getShelves(spreadsheets)\n    }\n\n\n    private getShelves(spreadsheets: gapi.client.sheets.Spreadsheet[]) {\n        let shelves: ShelfModel[] = []\n        spreadsheets.forEach(spreadsheet => {\n            let shelf = this.shelfFactory.createShelf(spreadsheet)\n            if (shelf === undefined) return\n            shelves.push(shelf)\n        })\n        return shelves\n    }\n\n    private async getSpreadsheets(spreadsheetIds: string[]) {\n        let spreadsheets: gapi.client.sheets.Spreadsheet[] = []\n        for (let spreadsheetId of spreadsheetIds) {\n            console.log(spreadsheetId)\n            await syncerController.getSpreadsheet(spreadsheetId)\n        }\n        // Promise.all(spreadsheetIds.map(spreadsheetId => {\n        //     console.log(spreadsheetId)\n        //     return syncerController.getSpreadsheet(spreadsheetId)\n        // })).then(tasks => tasks.forEach(task => {\n        //     console.log(task)\n        //     if (task.spreadsheet !== undefined) {\n        //         spreadsheets.push(task.spreadsheet)\n        //     }\n        // }))\n        return spreadsheets\n    }\n\n    // TODO: add/remove shelves\n\n}\n\n","import { FriendlyError } from \"../helpers\"\n\nexport class ServiceWorkerModel {\n    constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            throw new FriendlyError(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n}\n","import { SyncerModel } from \"../models\"\r\nimport { SyncerPayloadType, TestMode, GetSpreadsheetPayload, GetSheetsPayload, GetRowsPayload } from \"../types\"\r\n\r\nexport class SyncerController {\r\n\r\n    private syncerModel: SyncerModel\r\n\r\n    constructor(syncerModel: SyncerModel) {\r\n        console.log(syncerModel)\r\n        this.syncerModel = syncerModel\r\n    }\r\n\r\n    public async updateTestMode(testMode: TestMode) {\r\n        return await this.syncerModel.pushSyncerTask({\r\n            type: SyncerPayloadType.TEST_MODE_UPDATE,\r\n            testMode: testMode,\r\n        })\r\n    }\r\n\r\n    public updateAuth(token: string) {\r\n        return this.syncerModel.pushSyncerTask({\r\n            type: SyncerPayloadType.AUTH_UPDATE,\r\n            token: token,\r\n        })\r\n    }\r\n\r\n    public getSpreadsheet(spreadsheetId: string) {\r\n        let task: GetSpreadsheetPayload = {\r\n            type: SyncerPayloadType.GET_SPREADSHEET,\r\n            spreadsheetId: spreadsheetId,\r\n            spreadsheet: undefined\r\n        }\r\n        return this.syncerModel.pushSyncerTask(task)\r\n    }\r\n\r\n    public async getSheets(spreadsheetId: string) {\r\n        let task: GetSheetsPayload = {\r\n            type: SyncerPayloadType.GET_SHEETS,\r\n            spreadsheetId: spreadsheetId,\r\n            sheets: []\r\n        }\r\n        let result = await this.syncerModel.pushSyncerTask(task)\r\n        return result\r\n    }\r\n\r\n    public async getRows(spreadsheetId: string, sheetId: number, sheetTitle: string) {\r\n        let task: GetRowsPayload = {\r\n            type: SyncerPayloadType.GET_ROWS,\r\n            spreadsheetId: spreadsheetId,\r\n            sheetTitle: sheetTitle,\r\n            sheetId: sheetId,\r\n            rows: []\r\n        }\r\n        let result = await this.syncerModel.pushSyncerTask(task)\r\n        return result\r\n    }\r\n\r\n    public async deleteRow(idx: number, spreadsheetId: string, sheetId: number) {\r\n        return await this.syncerModel.pushSyncerTask({\r\n            type: SyncerPayloadType.DELETE_ROW,\r\n            spreadsheetId: spreadsheetId,\r\n            sheetId: sheetId,\r\n            idx: idx,\r\n        })\r\n    }\r\n\r\n    public async updateRow(idx: number, spreadsheetId: string, sheetId: number, sheetTitle: string, content: string) {\r\n        return await this.syncerModel.pushSyncerTask({\r\n            type: SyncerPayloadType.UPDATE_ROW,\r\n            spreadsheetId: spreadsheetId,\r\n            sheetTitle: sheetTitle,\r\n            sheetId: sheetId,\r\n            content: content,\r\n            idx: idx,\r\n        })\r\n    }\r\n\r\n    public async unpause() {\r\n        return await this.syncerModel.pushSyncerTask({ type: SyncerPayloadType.UNPAUSE })\r\n    }\r\n}\r\n","export * from \"./shelfView\"\r\nexport * from \"./signinView\"\r\nexport * from \"./libraryView\"\r\nexport * from \"./journalView\"\r\n","import m from \"mithril\"\nimport { googleComponent, journalsComponent } from \"./components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}","import m from \"mithril\"\nimport { googleModel } from \"../../models\"\nimport { googleController } from \"../../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"a\", { href: `#/library` }, \"Library\"),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return { async: true, defer: true, src: googleModel.src, onload: () => { googleController.initGapi() }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n\n\n\n\n\n\n// function addSpreadsheetButton() {\n    //     return m(\"button\", {\n    //         id: \"addSpreadsheet\",\n    //         onclick: async () => {\n    //             journal.showAddSpreadsheetTextbox = !journal.showAddSpreadsheetTextbox\n    //             if (!journal.showAddSpreadsheetTextbox) {\n    //                 let spreadsheetUrls = getStoredSpreadsheetUrls()\n    //                 await journal.load(spreadsheetUrls)\n    //             }\n    //         },\n    //     }, (journal.showAddSpreadsheetTextbox) ? \" ✓ \" : \"+/-\")\n    // }\n\n    // function spreadsheetsTextbox() {\n    //     return m(\"textarea\", {\n    //         id: \"spreadsheetURLs\",\n    //         placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\n    //         value: getStoredSpreadsheetUrls(),\n    //         oninput: (event: any) => setStoredSpreadsheetUrls(event.target.value),\n    //     })\n    // }\n\n    // function spreadsheetsSelect() {\n    //     return m(\"select\", {\n    //         onchange: (event: any) => {\n    //             let id = event.target.value\n    //             journal.switch(id, getStoredSpreadsheetSheetId(id))\n    //         },\n    //         id: \"spreadsheetSelect\",\n    //     }, [\n    //         Array.from(journal.spreadsheets).map(([id]) => [\n    //             m(\"option\", {\n    //                 value: id,\n    //                 selected: journal.spreadsheet!.id === id\n    //             }, id.substr(id.length - 6))\n    //         ])\n    //     ])\n    // }\n\n    // function sheetsSelect() {\n    //     return m(\"select\", {\n    //         onchange: (event: any) => {\n    //             journal.switch(journal.spreadsheet!.id, parseInt(event.target.value))\n    //             m.redraw()\n    //         },\n    //         id: \"sheetSelect\",\n    //     }, [\n    //         Array.from(journal.spreadsheet!.sheets).map(([id, sheet]) => [\n    //             m(\"option\", {\n    //                 value: id,\n    //                 selected: journal.isActive && journal.spreadsheet!.sheet!.id === id\n    //             }, sheet.title)\n    //         ])\n    //     ])\n    // }\n","import m from \"mithril\"\nimport { libraryModel } from \"../..\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        if (libraryModel === undefined) {\n            return m(\"#shelves\", \"Library Loading\")\n        } else {\n            return m(\"#shelves\", libraryModel.shelves.map(shelf => {\n                m(\"li\", m(\"a\", { href: `#/library/${shelf.id}` }, shelf.id))\n            }))\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}","import m from \"mithril\"\n\n\nexport function journalsComponent() {\n\n    function view() {\n        let shelfId: string = m.route.param(\"shelfId\")\n        return m(\"#journals\", [\"0\", \"123\", \"456\"]\n            .map(journalId => m(\"li\", m(\"a\", { href: `#/library/${shelfId}/${journalId}` }, journalId)))\n        )\n    }\n\n    return {\n        view: view,\n    }\n\n}","import m from \"mithril\"\r\nimport { googleModel } from \"../models\"\r\nimport { googleComponent } from \"./components\"\r\n\r\nexport function signinView() {\r\n\r\n    function view() {\r\n        return m(\"#auth\", [\r\n            m(googleComponent),\r\n        ])\r\n    }\r\n\r\n    function onupdate() {\r\n        if (googleModel.isSignedIn) {\r\n            window.location.hash = \"/library\" // TODO: redirect to correct place\r\n        }\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n\r\n}","import m from \"mithril\"\nimport { googleComponent, shelvesComponent } from \"./components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}","import m from \"mithril\"\nimport { googleComponent } from \"./components\"\n\nexport function journalView() {\n\n    function view() {\n        let shelfId = m.route.param(\"shelfId\")\n        let journalId = m.route.param(\"journalId\")\n\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(\"span\", `Shelf: ${shelfId}, Journal: ${journalId}`)\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}"],"sourceRoot":""}