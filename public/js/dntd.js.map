{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"m\"","webpack:///./src/controllers/index.ts","webpack:///./src/types/index.ts","webpack:///./src/index.ts","webpack:///./src/factories/index.ts","webpack:///./src/components/index.ts","webpack:///./src/models/index.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncer.ts","webpack:///./src/errors/index.ts","webpack:///./src/errors/SyncerError.ts","webpack:///./src/errors/FriendlyError.ts","webpack:///./src/controllers/urlController.ts","webpack:///./src/controllers/entryController.ts","webpack:///./src/models/SearchModel.ts","webpack:///./src/controllers/syncerController.ts","webpack:///./src/views/index.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/components/googleComponent.ts","webpack:///./src/controllers/textController.ts","webpack:///./src/factories/tagFactory.ts","webpack:///./src/models/UrlModel.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/models/AppStateModel.ts","webpack:///./src/models/ErrorsModel.ts","webpack:///./src/models/ServiceWorkerModel.ts","webpack:///./src/factories/shelfFactory.ts","webpack:///./src/factories/entryFactory.ts","webpack:///./src/controllers/caretController.ts","webpack:///./src/controllers/searchController.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/controllers/errorsController.ts","webpack:///./src/controllers/libraryController.ts","webpack:///./src/controllers/journalController.ts","webpack:///./src/controllers/appStateController.ts","webpack:///./src/components/composeComponent.ts","webpack:///./src/components/entriesComponent.ts","webpack:///./src/components/shelvesComponent.ts","webpack:///./src/components/refinesComponent.ts","webpack:///./src/components/testModeComponent.ts","webpack:///./src/components/journalsComponent.ts","webpack:///./src/components/syncStateComponent.ts","webpack:///./src/components/searchbarComponent.ts","webpack:///./src/components/addShelvesComponent.ts","webpack:///./src/components/breadcrumbComponent.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts","webpack:///./src/views/testModeView.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","appStateModel","AppStateModel","getInstance","serviceWorkerModel","ServiceWorkerModel","googleModel","GoogleModel","syncerModel","SyncerModel","libraryModel","LibraryModel","urlModel","UrlModel","searchModel","SearchModel","root","document","getElementById","route","signinView","testModeView","libraryView","shelfView","journalView","SearchType","TestMode","str","values","includes","SyncerPayloadType","SyncerResponseType","SyncerState","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","pause","super","this","payload","undefined","error","type","ERROR","FriendlyError","msg","getActiveShelf","id","shelfId","shelves","urlController","redirect","hash","getActiveJournal","journalId","shelf","journals","getBreadcrumbTrail","breadcrumb","split","filter","crumb","length","trail","slice","join","title","parseInt","push","href","tagPattern","entryController","save","entry","content","saved","savedClean","textController","clean","tags","tagMatches","Map","tag","has","frq","set","getTags","update","raw","safe","escape","tokens","text","token","trim","matchesIter","matchAll","match","tagFactory","createTag","sort","a","b","index","getTagMatches","rendered","chars","splice","render","searchType","NONE","simpleRefines","complexRefines","barQuery","entryFactory","createBaseEntry","refinesQuery","keys","Set","vals","simpleKeys","instance","Array","from","worker","Worker","updateAuth","pushSyncerTask","AUTH_UPDATE","onmessage","data","requests","delete","SYNC_STATE","state","redraw","errorsController","add","message","TOKEN_REQUEST","onMessage","syncerController","unpause","UNPAUSE","getRows","journalTitle","GET_ROWS","spreadsheetId","sheetTitle","sheetId","rows","createRow","idx","CREATE_ROW","deleteRow","DELETE_ROW","updateRow","UPDATE_ROW","updateTestMode","testMode","TEST_MODE_UPDATE","getSpreadsheet","GET_SPREADSHEET","spreadsheet","view","googleComponent","testModeComponent","syncStateComponent","breadcrumbComponent","journalsComponent","isSignedIn","onclick","googleController","signOut","class","signIn","async","defer","src","onload","initGapi","unsafe","replace","toLowerCase","cleanTagString","endsWith","substring","flag","separator","val","cleanKey","cleanVal","renderedKey","renderedVal","TagModel","window","location","hash_","URL","url","searchParams","param","BaseEntryModel","journal","entryId","requestsCounter","INITIALIZING","Promise","resolve","reject","postMessage","scope","clientId","user","getAuthResponse","access_token","entries","loaded","fromIdx","toIdx","shelfIds","forEach","ids","localStorage","removeItem","setItem","getItem","OFF","errors","ErrorsModel","navigator","addEventListener","serviceWorker","register","shelfFactory","createShelf","properties","sheets","ShelfModel","sheet","JournalModel","getJournals","entryCounter","createJournalEntry","JournalEntryModel","caretController","getCaretPosition","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","search","query","sourceEntries","filteredEntries","AND","every","OR","some","startsWith","searchController","reset","buildRefines","cleanRefines","map","updateSearchbar","signedIn","gapi_","auth2","getAuthInstance","currentUser","libraryController","loadShelves","removeShelves","gapi","MockGapi","load","init","client_id","then","listen","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","MockIsSignedIn","console","remove","spreadsheetIdPattern","reloadLoaded","journalController","loadEntries","catch","finally","getSpreadsheetIdsFromUrls","urls","addShelves","addEntry","createEntry","buildTags","reverse","updateEntry","moveEntry","deleteEntry","keepJournal","unloadEntries","appStateController","instanceOfTestMode","caret","composePrefixEntry","composeContentEntry","composeSuffixEntry","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","extraSettings","baseSettings","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","composeKeydown","oninput","target","composeInput","onupdate","assign","trust","entriesList","entryIdx","createEntryVnode","entryContent","deleteEntryButton","entryVnode","blur","onEntryKeydown","onEntryInput","onEntryUpdate","onblur","onEntryBlur","entryContentSettings","delShelfButton","retryShelfLoadButton","shelfNode","expanded","simpleRefinesVnodes","size","refineKeyVnode","refineValVnode","count","metaKey","ctrlKey","refineTagKeyOnClick","tagRefineKeySettings","checked","tagRefineValSettings","tagClass","hideClass","refineTagValOnClick","stopDemoButton","DEMO","link","journalList","syncStateText","txt","class_","stateColorClass","DOWNLOADING","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","placeholder","onSearchInput","onSearchKeydown","newShelfUrls","addingShelves","addShelvesMessage","addShelvesButton","addShelvesTextbox","addShelvesComponent","shelvesComponent","searchbarComponent","refinesComponent","entriesComponent","composeComponent","oninit","getParam"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = m;","export * from \"./urlController\"\r\nexport * from \"./textController\"\r\nexport * from \"./entryController\"\r\nexport * from \"./caretController\"\r\nexport * from \"./searchController\"\r\nexport * from \"./googleController\"\r\nexport * from \"./syncerController\"\r\nexport * from \"./errorsController\"\r\nexport * from \"./libraryController\"\r\nexport * from \"./journalController\"\r\nexport * from \"./appStateController\"\r\n","export * from \"./caret\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncer\"\n","import m from \"mithril\"\nimport { signinView, libraryView, shelfView, journalView, testModeView } from \"./views\"\nimport {\n    ServiceWorkerModel, SyncerModel, LibraryModel, GoogleModel, UrlModel, SearchModel, AppStateModel\n} from \"./models\"\n\nexport const appStateModel = AppStateModel.getInstance()\nexport const serviceWorkerModel = ServiceWorkerModel.getInstance()\nexport const googleModel = GoogleModel.getInstance()\nexport const syncerModel = SyncerModel.getInstance()\nexport const libraryModel = LibraryModel.getInstance()\nexport const urlModel = UrlModel.getInstance()\nexport const searchModel = SearchModel.getInstance()\n\nconst root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,        // TODO switch to be about page\n        \"/demo\": testModeView,\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/setTestMode/:testMode\": testModeView,\n        \"/library/:shelfId/:journalId\": journalView,\n    })\n}\n","export * from \"./tagFactory\"\nexport * from \"./shelfFactory\"\nexport * from \"./entryFactory\"\n","export * from \"./googleComponent\"\nexport * from \"./composeComponent\"\nexport * from \"./entriesComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./refinesComponent\"\nexport * from \"./testModeComponent\"\nexport * from \"./journalsComponent\"\nexport * from \"./syncStateComponent\"\nexport * from \"./searchbarComponent\"\nexport * from \"./addShelvesComponent\"\nexport * from \"./breadcrumbComponent\"","export * from \"./UrlModel\"\r\nexport * from \"./TagModel\"\r\nexport * from \"./EntryModel\"\r\nexport * from \"./ShelfModel\"\r\nexport * from \"./SyncerModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./GoogleModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./JournalModel\"\r\nexport * from \"./LibraryModel\"\r\nexport * from \"./AppStateModel\"\r\nexport * from \"./ServiceWorkerModel\"\r\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"demomode\"\n}\n\nexport function instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload |\n    AuthUpdatePayload | UnpausePayload | SyncStatePayload | ErrorPayload |\n    TokenRequestPayload | CreateRowPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface CreateRowPayload {\n    type: SyncerPayloadType.CREATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n}\n","export * from \"./GapiErrors\"\nexport * from \"./SyncerError\"\nexport * from \"./FriendlyError\"\n","import { ErrorPayload, SyncerPayloadType } from \"../types\"\r\n\r\nexport class SyncerError extends Error {\r\n    public payload: ErrorPayload\r\n\r\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean, pause?: boolean) {\r\n        super(errorMsg)\r\n        this.payload = {\r\n            pause: (pause !== undefined) ? pause : true,\r\n            error: this,\r\n            friendlyMsg: this.friendlyMsg,\r\n            type: SyncerPayloadType.ERROR,\r\n        }\r\n    }\r\n}\r\n","export class FriendlyError extends Error {\n    public msg: string\n    public friendlyMsg: string\n\n    constructor(errorMsg: string, friendlyMsg: string) {\n        super(errorMsg)\n        this.msg = errorMsg\n        this.friendlyMsg = friendlyMsg\n    }\n}\n","import m from \"mithril\"\nimport { libraryModel, urlModel } from \"..\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport const urlController = {\n    redirect: redirect,\n    getActiveShelf: getActiveShelf,\n    getActiveJournal: getActiveJournal,\n    getBreadcrumbTrail: getBreadcrumbTrail,\n}\n\nfunction redirect(hash: string) {\n    urlModel.hash = hash\n}\n\nfunction getActiveShelf(): ShelfModel | undefined {\n    let id = urlModel.shelfId\n    if (id === undefined) return undefined\n    return libraryModel.shelves.get(id)\n}\n\nfunction getActiveJournal(): JournalModel | undefined {\n    let id = urlModel.journalId\n    let shelf = getActiveShelf()\n    if (id === undefined || shelf === undefined) return undefined\n    return shelf.journals.get(id)\n}\n\nfunction getBreadcrumbTrail() {\n    let breadcrumb: m.Vnode[] = []\n    let hash = urlModel.hash.split(\"?\")[0].split(\"/\").filter(crumb => crumb !== \"#\" && crumb !== \"\")\n    let shelfId: string | undefined = undefined\n    for (let i = 0; i < hash.length; i++) {\n        let crumb = hash[i]\n        let trail = \"#/\" + hash.slice(0, i + 1).join(\"/\")\n        if (i === 2) {\n            shelfId = crumb\n            crumb = libraryModel.shelves.get(crumb)?.title || crumb\n        } else if (i === 3 && shelfId !== undefined) {\n            crumb = libraryModel.shelves.get(shelfId)?.journals.get(parseInt(crumb))?.title || crumb\n        }\n        if (i !== 0) breadcrumb.push(m(\"span\", \" / \"))\n        if (i === hash.length - 1) {\n            breadcrumb.push(m(\"span\", `${crumb}`))\n        } else {\n            breadcrumb.push(m(\"a\", { href: trail }, `${crumb}`))\n        }\n    }\n    return breadcrumb\n}\n","import { textController } from \".\"\nimport { tagFactory } from \"../factories\"\nimport { JournalEntryModel, TagModel, BaseEntryModel } from \"../models\"\n\nconst tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\n\nexport const entryController = {\n    save: save,\n    update: update,\n}\n\nfunction save(entry: JournalEntryModel, content: string) {\n    entry.saved = content\n    entry.savedClean = textController.clean(entry.saved)\n    entry.tags = getTags(entry.tagMatches)\n}\n\nfunction update(entry: BaseEntryModel | JournalEntryModel, content: string) {\n    entry.raw = content\n    entry.clean = textController.clean(content)\n    entry.safe = textController.escape(entry.raw)\n    entry.tokens = tokenize(entry.clean)\n    entry.tagMatches = getTagMatches(entry.safe)\n    entry.rendered = render(entry.safe, entry.tagMatches)\n}\n\nfunction render(text: string, tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): string {\n    for (let { tag, match } of tagMatches) {\n        let chars = text.split(\"\")\n        chars.splice(match.index!, match[0].length, tag.rendered)\n        text = chars.join(\"\")\n    }\n    return text\n}\n\nfunction getTags(tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): Map<string, TagModel> {\n    let tags: Map<string, TagModel> = new Map()\n    for (let { tag } of tagMatches) {\n        if (tags.has(tag.clean)) {\n            tags.get(tag.clean)!.frq += 1\n        } else {\n            tags.set(tag.clean, tag)\n        }\n    }\n    return tags\n}\n\nfunction getTagMatches(text: string): { tag: TagModel, match: RegExpMatchArray }[] {\n    let tagMatches = []\n    let matchesIter = text.matchAll(tagPattern)\n    for (let match of matchesIter) {\n        let tag = tagFactory.createTag(match[0], match[1], match[2], match[3], match[4])\n        tagMatches.push({ tag: tag, match: match })\n    }\n    tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n    return tagMatches\n}\n\nfunction tokenize(text: string): string[] {\n    let tokens = text.split(\" \")\n    return tokens.filter(token => {\n        return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n    })\n}\n","import { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { TagModel, BaseEntryModel } from \".\"\n\nexport class SearchModel {\n    private static instance: SearchModel\n\n    public searchType: SearchType = SearchType.NONE\n    public simpleRefines: Map<string, TagModel> = new Map()\n    public complexRefines: Map<string, TagModel[]> = new Map()\n    public barQuery: BaseEntryModel = entryFactory.createBaseEntry()\n    public refinesQuery: {\n        keys: Set<string>,\n        vals: Map<string, TagModel>,\n        simpleKeys: Map<string, TagModel>\n    } = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    private constructor() { }\n\n    static getInstance(): SearchModel {\n        return (!SearchModel.instance) ? new SearchModel() : SearchModel.instance\n    }\n\n    get query(): BaseEntryModel {\n        return entryFactory.createBaseEntry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n}\n","import m from \"mithril\"\r\nimport { errorsController } from \".\"\r\nimport { googleModel, syncerModel } from \"..\"\r\nimport { SyncerPayloadType, TestMode, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nconst worker = new Worker(\"./js/syncWebWorker.js\")\r\nworker.onmessage = (msg: MessageEvent) => onMessage(msg)\r\n\r\nexport const syncerController = {\r\n    unpause: unpause,\r\n    getRows: getRows,\r\n    createRow: createRow,\r\n    deleteRow: deleteRow,\r\n    updateRow: updateRow,\r\n    updateAuth: updateAuth,\r\n    updateTestMode: updateTestMode,\r\n    getSpreadsheet: getSpreadsheet,\r\n}\r\n\r\nasync function updateTestMode(testMode: TestMode) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.TEST_MODE_UPDATE,\r\n        testMode: testMode,\r\n    }, worker)\r\n}\r\n\r\nfunction updateAuth(token: string | undefined) {\r\n    if (token === undefined) return\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.AUTH_UPDATE,\r\n        token: token,\r\n    }, worker)\r\n}\r\n\r\nfunction getSpreadsheet(spreadsheetId: string) {\r\n    let spreadsheet: gapi.client.sheets.Spreadsheet | undefined = undefined\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_SPREADSHEET,\r\n        spreadsheetId: spreadsheetId,\r\n        spreadsheet: spreadsheet\r\n    }, worker)\r\n}\r\n\r\nasync function createRow(shelfId: string, journalId: number, idx: number) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.CREATE_ROW,\r\n        spreadsheetId: shelfId,\r\n        sheetId: journalId,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\nfunction getRows(shelfId: string, journalId: number, journalTitle: string) {\r\n    let rows: string[] = []\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_ROWS,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        rows: rows\r\n    }, worker)\r\n}\r\n\r\nasync function updateRow(shelfId: string, journalId: number, journalTitle: string, idx: number, content: string) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UPDATE_ROW,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        content: content,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\nasync function deleteRow(shelfId: string, journalId: number, idx: number) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.DELETE_ROW,\r\n        spreadsheetId: shelfId,\r\n        sheetId: journalId,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\n// TODO - NICE TO HAVE\r\n// async function moveRow() {}\r\n\r\nasync function unpause() {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UNPAUSE\r\n    }, worker)\r\n}\r\n\r\nfunction onMessage(msg: MessageEvent) {\r\n    let { id, payload, error }: { id: string | null, payload: SyncerPayload, error: ErrorPayload } = msg.data\r\n    if (id !== null && syncerModel.requests.has(id)) {\r\n        syncerModel.requests.get(id)!({ payload, error })\r\n        syncerModel.requests.delete(id)\r\n    } else if (payload !== undefined) {\r\n        switch (payload.type) {\r\n            case SyncerPayloadType.SYNC_STATE:\r\n                syncerModel.state = payload.state\r\n                m.redraw()\r\n                break\r\n            case SyncerPayloadType.ERROR:\r\n                errorsController.add(payload.error.message, payload.friendlyMsg)\r\n                break\r\n            case SyncerPayloadType.TOKEN_REQUEST:\r\n                updateAuth(googleModel.token)\r\n                break\r\n        }\r\n    } else {\r\n        errorsController.add(\"undefined payload\", \"An unexpected error occurred.\")\r\n    }\r\n}\r\n","export * from \"./shelfView\"\r\nexport * from \"./signinView\"\r\nexport * from \"./libraryView\"\r\nexport * from \"./journalView\"\r\nexport * from \"./testModeView\"\r\n","import m from \"mithril\"\nimport {\n    googleComponent, journalsComponent, syncStateComponent, breadcrumbComponent,\n    testModeComponent,\n} from \"../components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { googleController } from \"../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return {\n            async: true,\n            defer: true,\n            src: googleModel.src,\n            onload: () => {\n                if (!googleModel.isSignedIn) {\n                    googleController.initGapi()\n                }\n            }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n","export const textController = {\n    escape: escape,\n    clean: clean,\n}\n\nfunction escape(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n\nfunction clean(content: string): string {\n    return content.toLowerCase()\n}\n","import { textController } from \"../controllers\"\r\nimport { TagModel } from \"../models\"\r\n\r\nexport const tagFactory = {\r\n    createTag: createTag\r\n}\r\n\r\nfunction createTag(raw: string, flag: string, key: string, separator?: string | null, val?: string | null) {\r\n    separator = (separator !== undefined) ? separator : null\r\n    val = (val !== undefined) ? val : null\r\n    let clean = cleanTagString(raw)\r\n    let cleanKey = cleanTagString(key)\r\n    let cleanVal = (val !== null) ? cleanTagString(val) : null\r\n\r\n    let renderedKey = \"<span onclick=\\\"tagOnClick(event, '\"\r\n        + flag\r\n        + cleanKey\r\n        + ((separator !== null) ? separator : \"\")\r\n        + \"')\\\" class=\\\"\"\r\n        + ((separator !== null) ? \"tagKey\" : (val === null) ? \"simpleTag\" : \"roundTagVal\")\r\n        + \"\\\">\"\r\n        + flag\r\n        + key\r\n        + \"</span>\"\r\n\r\n    let renderedVal = \"\"\r\n\r\n    if (separator !== undefined && separator !== null) {\r\n        renderedVal = \"<span onclick=\\\"tagOnClick(event, '\"\r\n            + flag\r\n            + cleanKey\r\n            + separator\r\n            + ((cleanVal !== null) ? cleanVal.replace(/'/, \"\\\\'\") : \"\")\r\n            + \"')\\\" class=\\\"tagVal\\\">\"\r\n            + separator\r\n            + ((val !== null) ? val : \"\")\r\n            + \"</span>\"\r\n    }\r\n\r\n    return new TagModel(raw, flag, key, separator, val, clean, cleanKey, cleanVal, renderedKey + renderedVal)\r\n\r\n}\r\n\r\nfunction cleanTagString(str: string) {\r\n    str = textController.escape(str)\r\n    str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\r\n    str = str.toLowerCase()\r\n    return str\r\n}\r\n","import m from \"mithril\"\n\nexport class UrlModel {\n    private static instance: UrlModel\n\n    private constructor() { }\n\n    static getInstance(): UrlModel {\n        return (!UrlModel.instance) ? new UrlModel() : UrlModel.instance\n    }\n\n    get hash(): string {\n        return window.location.hash\n    }\n    set hash(hash_: string) {\n        window.location.hash = hash_\n    }\n\n    get url(): URL {\n        return new URL(window.location.href)\n    }\n\n    public getParam(key: string): string | undefined {\n        let val = this.url.searchParams.get(key) || m.route.param(key)\n        if (val === \"\") return\n        return val\n    }\n\n    get shelfId(): string | undefined {\n        let id = m.route.param(\"shelfId\")\n        return (id === \"\") ? undefined : id\n    }\n\n    get journalId(): number | undefined {\n        let id = m.route.param(\"journalId\")\n        return (id === \"\") ? undefined : parseInt(id)\n    }\n\n}\n","export class TagModel {\n    public frq: number\n\n    constructor(\n        public raw: string,\n        public flag: string,\n        public key: string,\n        public separator: string | null,\n        public val: string | null,\n        public clean: string,\n        public cleanKey: string,\n        public cleanVal: string | null,\n        public rendered: string\n    ) { \n        this.frq = 1\n    }\n\n}\n","import { TagModel } from \".\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport class BaseEntryModel {\n    public raw: string = \"\"\n    public safe: string = \"\"\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public tags: Map<string, TagModel> = new Map()\n    public tagMatches: { tag: TagModel, match: RegExpMatchArray }[] = []\n}\n\nexport class JournalEntryModel extends BaseEntryModel {\n    readonly id: number\n    readonly shelf: ShelfModel\n    readonly journal: JournalModel\n\n    public saved: string = \"\"\n    public savedClean: string = \"\"\n\n    constructor(shelf: ShelfModel, journal: JournalModel, entryId: number) {\n        super()\n        this.id = entryId\n        this.shelf = shelf\n        this.journal = journal\n    }\n}\n","import { JournalModel } from \".\"\n\nexport class ShelfModel {\n    readonly id: string\n    readonly title: string | undefined\n\n    public error: string | undefined\n    public journals: Map<number, JournalModel> = new Map()\n\n    constructor(id: string, title?: string, error?: string) {\n        this.id = id\n        this.error = error\n        this.title = title\n    }\n\n}\n","import { SyncerState, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nexport class SyncerModel {\r\n    private static instance: SyncerModel\r\n\r\n    public requestsCounter: number\r\n    public requests: Map<string, Function>\r\n    public state: SyncerState\r\n\r\n    private constructor() {\r\n        this.requestsCounter = 0\r\n        this.requests = new Map()\r\n        this.state = SyncerState.INITIALIZING\r\n    }\r\n\r\n    static getInstance(): SyncerModel {\r\n        return (!SyncerModel.instance) ? new SyncerModel() : SyncerModel.instance\r\n    }\r\n\r\n    public pushSyncerTask<P extends SyncerPayload>(payload: P, worker: Worker): Promise<P> {\r\n        let id = `payload-${this.requestsCounter++}`\r\n        return new Promise((resolve, reject) => {\r\n            this.requests.set(id, ({ payload, error }: { payload: P, error: ErrorPayload }) => {\r\n                (error) ? reject(error) : resolve(payload)\r\n            })\r\n            worker.postMessage({ id, payload })\r\n        })\r\n    }\r\n}\r\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nexport class GoogleModel {\n    private static instance: GoogleModel\n\n    readonly src: string\n    readonly scope: string\n    readonly clientId: string\n\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    private constructor() {\n        this.isSignedIn = false\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\n            \"https://www.googleapis.com/auth/spreadsheets\",\n        ].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    static getInstance() {\n        return (!GoogleModel.instance) ? new GoogleModel() : GoogleModel.instance\n    }\n\n    get token(): string | undefined {\n        if (!this.user) return\n        let auth = this.user.getAuthResponse()\n        return auth.access_token\n    }\n}\n","import { ShelfModel } from \"./ShelfModel\"\nimport { JournalEntryModel, TagModel } from \".\"\n\nexport class JournalModel {\n    readonly id: number\n    readonly title: string\n    readonly shelf: ShelfModel\n\n    public loaded: boolean\n    public tags: Map<string, TagModel>\n    public entries: { id: number, entry: JournalEntryModel }[]\n\n    constructor(shelf: ShelfModel, journalId: number, journalTitle: string) {\n        this.entries = []\n        this.shelf = shelf\n        this.loaded = false\n        this.id = journalId\n        this.tags = new Map()\n        this.title = journalTitle\n    }\n\n    public createEntry(idx: number, entry: JournalEntryModel) {\n        this.entries.splice(idx, 0, { id: entry.id, entry })\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        this.entries.splice(toIdx, 0, this.entries.splice(fromIdx, 1)[0])\n    }\n\n}\n","import { ShelfModel } from \".\"\n\nexport class LibraryModel {\n    private static instance: LibraryModel\n    \n    public shelves: Map<string, ShelfModel | undefined>\n\n    private constructor() {\n        this.shelves = new Map()\n        this.shelfIds.forEach(id => this.shelves.set(id, undefined))\n    }\n\n    static getInstance() {\n        return (!LibraryModel.instance) ? new LibraryModel() : LibraryModel.instance\n    }\n\n    set shelfIds(ids: string[]) {\n        if (ids.length === 0) {\n            localStorage.removeItem(\"spreadsheetIds\")\n        } else {\n            localStorage.setItem(\"spreadsheetIds\", ids.join(\",\"))\n        }\n    }\n    get shelfIds(): string[] {\n        let ids = localStorage.getItem(\"spreadsheetIds\")\n        return (ids === null) ? [] : ids.split(\",\")\n    }\n}\n","import { TestMode } from \"../types\"\nimport { ErrorsModel } from \"./ErrorsModel\"\n\nexport class AppStateModel {\n    private static instance: AppStateModel\n\n    public testMode: TestMode\n    public errors: ErrorsModel\n\n    private constructor() {\n        this.testMode = TestMode.OFF\n        this.errors = ErrorsModel.getInstance()\n    }\n\n    static getInstance(): AppStateModel {\n        return (!AppStateModel.instance) ? new AppStateModel() : AppStateModel.instance\n    }\n}\n","import { FriendlyError } from \"../errors\"\r\n\r\nexport class ErrorsModel {\r\n    private static instance: ErrorsModel\r\n\r\n    public errors: FriendlyError[] = []\r\n\r\n    private constructor() {}\r\n\r\n    add(error: FriendlyError) {\r\n        this.errors.push(error)\r\n    }\r\n\r\n    remove(idx: number) {\r\n        this.errors.splice(idx, 1)\r\n    }\r\n\r\n    static getInstance(): ErrorsModel {\r\n        return (!ErrorsModel.instance) ? new ErrorsModel() : ErrorsModel.instance\r\n    }\r\n}\r\n","import { errorsController } from \"../controllers\"\n\nexport class ServiceWorkerModel {\n    private static instance: ServiceWorkerModel\n\n    private constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            errorsController.add(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n\n    static getInstance(): ServiceWorkerModel {\n        return (!ServiceWorkerModel.instance) ? new ServiceWorkerModel() : ServiceWorkerModel.instance\n    }\n}\n","import { ShelfModel, JournalModel } from \"../models\"\n\nexport const shelfFactory = {\n    createShelf: createShelf,\n}\n\nfunction createShelf(spreadsheetId: string, spreadsheet?: gapi.client.sheets.Spreadsheet, error?: string): ShelfModel {\n    if (\n        spreadsheet !== undefined &&\n        spreadsheet.spreadsheetId !== undefined &&\n        spreadsheet.properties !== undefined &&\n        spreadsheet.properties.title !== undefined &&\n        spreadsheet.sheets !== undefined\n    ) {\n        let shelf = new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title)\n        getJournals(shelf, spreadsheet.sheets).forEach(journal => shelf.journals.set(journal.id, journal))\n        return shelf\n    }\n    return new ShelfModel(spreadsheetId, undefined, error)\n}\n\nfunction getJournals(shelf: ShelfModel, sheets: gapi.client.sheets.Sheet[]): JournalModel[] {\n    let journals: JournalModel[] = []\n    sheets.forEach(sheet => {\n        if (\n            sheet.properties !== undefined &&\n            sheet.properties.title !== undefined &&\n            sheet.properties.sheetId !== undefined\n        ) {\n            let journal = new JournalModel(\n                shelf, sheet.properties.sheetId, sheet.properties.title\n            )\n            if (journal === undefined) return\n            journals.push(journal)\n        }\n    })\n    return journals\n}\n","import { entryController } from \"../controllers\"\nimport { JournalEntryModel, ShelfModel, JournalModel, BaseEntryModel } from \"../models\"\n\nlet entryCounter = -1\n\nexport const entryFactory = {\n    createBaseEntry: createBaseEntry,\n    createJournalEntry: createJournalEntry\n}\n\nfunction createBaseEntry(content?: string) {\n    let entry = new BaseEntryModel()\n    entryController.update(entry, content || \"\")\n    return entry\n}\n\nfunction createJournalEntry(shelf: ShelfModel, journal: JournalModel, content: string) {\n    let entry = new JournalEntryModel(shelf, journal, entryCounter += 1)\n    entryController.update(entry, content)\n    return entry\n}\n","export const caretController = {\n    getCaretPosition: getCaretPosition,\n    setCaretPosition: setCaretPosition,\n}\n\nfunction node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nfunction getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nfunction setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","import { searchModel } from \"..\"\nimport { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { entryController } from \"./entryController\"\nimport { TagModel, JournalModel, JournalEntryModel } from \"../models\"\n\nexport const searchController = {\n    reset: reset,\n    buildRefines: buildRefines,\n    filteredEntries: filteredEntries,\n    updateSearchbar: updateSearchbar,\n}\n\nfunction updateSearchbar(content: string) {\n    entryController.update(searchModel.barQuery, content)\n}\n\nfunction reset() {\n    searchModel.searchType = SearchType.NONE\n    searchModel.barQuery = entryFactory.createBaseEntry()\n    searchModel.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n}\n\nfunction buildRefines(journal: JournalModel) {\n    let simpleRefines: Map<string, TagModel> = new Map()\n    let complexRefines: Map<string, TagModel[]> = new Map()\n\n    for (let tag of journal.tags.values()) {\n        if (tag.val === null) {\n            let key = `${tag.flag}${tag.cleanKey}`\n            if (!simpleRefines.has(key)) {\n                simpleRefines.set(key, tag)\n            }\n        } else {\n            let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n            if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n            complexRefines.get(key)!.push(tag)\n        }\n    }\n\n    searchModel.simpleRefines = new Map([...simpleRefines.entries()])\n    searchModel.complexRefines = new Map([...complexRefines.entries()].sort())\n\n    cleanRefines()\n}\n\nfunction cleanRefines() {\n    // Clean stale simple tag key (refine val) selections\n    for (let [key,] of searchModel.refinesQuery.simpleKeys) {\n        if (!searchModel.simpleRefines.has(key)) {\n            searchModel.refinesQuery.simpleKeys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag key selections\n    for (let key of searchModel.refinesQuery.keys) {\n        if (!searchModel.complexRefines.has(key)) {\n            searchModel.refinesQuery.keys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag val\n    for (let [key,] of searchModel.refinesQuery.vals) {\n        if (!Array.from(searchModel.complexRefines.values()).some(tags => tags.some(tag => tag.clean === key))) {\n            searchModel.refinesQuery.vals.delete(key)\n        }\n    }\n}\n\nfunction filteredEntries(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    if (searchModel.query.tokens.length === 0) {\n        searchModel.searchType = SearchType.NONE\n        filteredEntries = entries.map(({ entry }, idx) => { return { idx, entry } })\n    } else {\n        searchModel.searchType = SearchType.AND\n        filteredEntries = search(entries)\n        if (filteredEntries.length === 0) {\n            searchModel.searchType = SearchType.OR\n            filteredEntries = search(entries)\n        }\n    }\n    return filteredEntries\n}\n\nfunction search(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let query = searchModel.query\n    let sourceEntries = entries\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    for (let [idx, { entry }] of sourceEntries.entries()) {\n        switch (searchModel.searchType) {\n            case SearchType.AND:\n                if (query.tokens.every(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n            case SearchType.OR:\n                if (query.tokens.some(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n        }\n    }\n    return filteredEntries\n}\n\nfunction match(token: string, entry: JournalEntryModel) {\n\n    if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token.substring(1)) === undefined\n    } else if (token.startsWith(\"-\")) {\n        return !entry.savedClean.includes(token.substring(1))\n    } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token) !== undefined\n    } else {\n        return entry.savedClean.includes(token)\n    }\n}\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { googleModel, appStateModel } from \"..\"\r\nimport { syncerController, libraryController } from \"../controllers\"\r\nimport { urlController } from \"./urlController\"\r\n\r\nexport const googleController = {\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    initGapi: initGapi,\r\n}\r\n\r\nfunction signOut() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\r\n}\r\n\r\nfunction signIn() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\r\n}\r\n\r\nfunction initGapi() {\r\n    let gapi_ = (appStateModel.testMode === TestMode.OFF) ? gapi : new MockGapi()\r\n    googleModel.gapi_ = gapi_\r\n    googleModel.gapi_.load('auth2', () => {\r\n        googleModel.gapi_!.auth2.init({\r\n            scope: googleModel.scope, client_id: googleModel.clientId\r\n        }).then(() => {\r\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\r\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\r\n        })\r\n    })\r\n}\r\n\r\nasync function isSignedIn(signedIn: boolean) {\r\n    googleModel.isSignedIn = signedIn\r\n    if (googleModel.isSignedIn) {\r\n        googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\r\n        syncerController.updateAuth(googleModel.token)\r\n        libraryController.loadShelves()\r\n    } else {\r\n        libraryController.removeShelves()\r\n        urlController.redirect(\"/\")\r\n    }\r\n    m.redraw()\r\n}\r\n","export * from \"./Gapi\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import { appStateModel } from \"..\"\r\nimport { FriendlyError } from \"../errors\"\r\n\r\nexport const errorsController = {\r\n    add: add,\r\n    remove: remove,\r\n}\r\n\r\nfunction add(errorMsg: string, friendlyMsg: string) {\r\n    console.error(errorMsg)\r\n    appStateModel.errors.add(new FriendlyError(errorMsg, friendlyMsg))\r\n}\r\n\r\nfunction remove(idx: number) {\r\n    appStateModel.errors.remove(idx)\r\n}\r\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { shelfFactory } from \"../factories\"\nimport { urlController, journalController, errorsController, syncerController } from \"../controllers\"\n\nconst spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n\nexport const libraryController = {\n    addShelves: addShelves,\n    loadShelves: loadShelves,\n    removeShelves: removeShelves,\n    getSpreadsheetIdsFromUrls: getSpreadsheetIdsFromUrls,\n}\n\nfunction addShelves(urls: string) {\n    let ids = getSpreadsheetIdsFromUrls(urls)\n    ids = ids.filter(id => !libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.set(id, undefined))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n    loadShelves(false, ids)\n}\n\nfunction removeShelves(ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    ids = ids.filter(id => libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.delete(id))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n}\n\nfunction loadShelves(reloadLoaded?: boolean, ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    if (reloadLoaded) {\n        ids.forEach(id => libraryModel.shelves.set(id, undefined))\n        m.redraw()\n    }\n    ids.filter(id => !libraryModel.shelves.get(id))\n        .forEach(id => syncerController.getSpreadsheet(id)\n        .then(payload => {\n            let shelf = shelfFactory.createShelf(id, payload.spreadsheet)\n            libraryModel.shelves.set(shelf.id, shelf)\n            let journal = urlController.getActiveJournal()\n            if (journal && journal.shelf === shelf) {\n                journalController.loadEntries(journal)\n            }\n        })\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n            let shelf = shelfFactory.createShelf(id, undefined, error.friendlyMsg)\n            libraryModel.shelves.set(id, shelf)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n    )\n}\n\nfunction getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n    let ids: string[] = []\n    if (urls) {\n        Array.from(urls.matchAll(spreadsheetIdPattern)).forEach(m => ids.push(m[1]))\n    }\n    return ids\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { tagFactory, entryFactory } from \"../factories\"\nimport { JournalEntryModel, JournalModel, TagModel } from \"../models\"\nimport { syncerController, searchController, entryController, errorsController } from \".\"\n\nexport const journalController = {\n    addEntry: addEntry,\n    createEntry: createEntry,\n    updateEntry: updateEntry,\n    moveEntry: moveEntry,\n    buildTags: buildTags,\n    deleteEntry: deleteEntry,\n    loadEntries: loadEntries,\n}\n\nfunction unloadOtherJournals(keepJournal: JournalModel) {\n    libraryModel.shelves.forEach(shelf => {\n        if (shelf === undefined) return\n        shelf.journals.forEach(journal => {\n            if (keepJournal.shelf.id !== journal.shelf.id || keepJournal.id !== journal.id) {\n                unloadEntries(journal)\n            }\n        })\n    })\n}\n\nfunction unloadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    journal.entries = []\n    journal.loaded = false\n}\n\nfunction loadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    unloadOtherJournals(journal)\n    syncerController.getRows(journal.shelf.id, journal.id, journal.title)\n        .then(payload => {\n            payload.rows.forEach((content, idx) => addEntry(journal, idx, content))\n            journal.loaded = true\n        })\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n}\n\nfunction addEntry(journal: JournalModel, idx: number, content: string | undefined) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    journal.createEntry(idx, entry)\n    entryController.save(entry, content)\n    buildTags(journal)\n}\n\nfunction createEntry(journal: JournalModel, idx: number, content?: string) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    journal.createEntry(idx, entry)\n    entryController.save(entry, content)\n    syncerController.createRow(journal.shelf.id, journal.id, idx)\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n    syncerController.updateRow(journal.shelf.id, journal.id, journal.title, idx, entry.raw)\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n    buildTags(journal)\n}\n\nfunction updateEntry(journal: JournalModel, entry: JournalEntryModel, idx: number, content: string) {\n    if (entry.saved === content) return\n    entryController.save(entry, content)\n    syncerController.updateRow(journal.shelf.id, journal.id, journal.title, idx, entry.raw)\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n    buildTags(journal)\n}\n\nfunction deleteEntry(journal: JournalModel, idx: number) {\n    journal.deleteEntry(idx)\n    syncerController.deleteRow(journal.shelf.id, journal.id, idx)\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n    buildTags(journal)\n}\n\nfunction moveEntry(journal: JournalModel, fromIdx: number, toIdx: number) {\n    if (fromIdx === toIdx) return\n    journal.moveEntry(fromIdx, toIdx)\n    buildTags(journal)\n}\n\nfunction buildTags(journal: JournalModel) {\n    let tags: Map<string, TagModel> = new Map()\n    let entries = Array.from(journal.entries.values())\n    for (let { entry } of entries.reverse()) {\n        for (let [key, tag] of entry.tags) {\n            if (tags.has(key)) {\n                tags.get(key)!.frq += tag.frq\n            } else {\n                tags.set(key, tagFactory.createTag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n            }\n        }\n    }\n    journal.tags = tags\n    searchController.buildRefines(journal)\n}\n","import { appStateModel } from \"..\"\nimport { syncerController } from \"./syncerController\"\nimport { TestMode, instanceOfTestMode } from \"../types\"\n\nexport const appStateController = {\n    updateTestMode: updateTestMode,\n}\n\nfunction updateTestMode(mode: TestMode | string | undefined) {\n    if (mode !== undefined && instanceOfTestMode(mode) && mode !== appStateModel.testMode) {\n        appStateModel.testMode = mode\n        syncerController.updateTestMode(mode)\n    }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { BaseEntryModel, JournalModel } from \"../models\"\nimport { urlController, journalController, caretController, entryController } from \"../controllers\"\n\nexport function composeComponent() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefixEntry = entryFactory.createBaseEntry()\n    const composeContentEntry = entryFactory.createBaseEntry()\n    const composeSuffixEntry = entryFactory.createBaseEntry()\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#compose\", [\n            m(\n                \"#prefix\",\n                composeNodeSettings(composePrefixEntry, journal, prefixSettings),\n                m.trust(composePrefixEntry.rendered)\n            ),\n            m(\n                \"#content\",\n                composeNodeSettings(composeContentEntry, journal, entrySettings),\n                m.trust(composeContentEntry.rendered)\n            ),\n            m(\n                \"#suffix\",\n                composeNodeSettings(composeSuffixEntry, journal, suffixSettings),\n                m.trust(composeSuffixEntry.rendered)\n            ),\n        ])\n    }\n\n    function getComposedContent() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: BaseEntryModel, journal: JournalModel, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event, journal),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any, journal: JournalModel) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let content = getComposedContent()\n            entryController.update(composeContentEntry, \"\")\n            let idx = journal.entries.length\n            journalController.createEntry(journal, idx, content)\n        }\n    }\n\n    function composeInput(event: any, entry: BaseEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function composeUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { JournalModel, JournalEntryModel } from \"../models\"\nimport {\n    caretController, urlController, entryController, journalController, searchController\n} from \"../controllers\"\n\nexport function entriesComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        let shelf = urlController.getActiveShelf()\n        const journal = urlController.getActiveJournal()\n        if (!shelf || !journal) return null\n\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesList(journal),\n        ])\n    }\n\n    function entriesList(journal: JournalModel) {\n        return searchController.filteredEntries(journal.entries)\n            .map(({ idx, entry }) => entryVnode(entry, idx))\n    }\n\n    function createEntryVnode(journal: JournalModel, idx: number): m.Vnode {\n        return m(\"button\", {\n            class: \"createEntry\",\n            id: `createEntry-${idx}`,\n            onclick: async () => journalController.createEntry(journal, idx)\n        }, \"ins\")\n    }\n\n    function entryVnode(entry: JournalEntryModel, entryIdx: number): m.Vnode {\n        return m(\".entryWrap\", { id: `entry-${entry.id}` }, [\n            createEntryVnode(entry.journal, entryIdx),\n            entryContent(entry, entryIdx),\n            deleteEntryButton(entry, entryIdx),\n            createEntryVnode(entry.journal, entryIdx+1),\n        ])\n    }\n\n    function deleteEntryButton(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: async () => journalController.deleteEntry(entry.journal, entryIdx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"div\", entryContentSettings(entry, entryIdx), m.trust(entry.rendered))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: JournalEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    async function onEntryBlur(event: any, entry: JournalEntryModel, entryIdx: number) {\n        event.redraw = false\n        journalController.updateEntry(entry.journal, entry, entryIdx, event.target.innerText)\n    }\n\n    function entryContentSettings(entry: JournalEntryModel, entryIdx: number) {\n        return {\n            id: `entry-${entry.id}-content`,\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, entryIdx),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ShelfModel } from \"../models\"\nimport { libraryController } from \"../controllers\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        let shelves = Array.from(libraryModel.shelves.entries())\n        return m(\"#shelvesList\", shelves.map(([id, shelf]) => shelfNode(id, shelf)))\n    }\n\n    function delShelfButton(id: string) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: () => libraryController.removeShelves([id])\n        }, \"del\")\n    }\n\n    function retryShelfLoadButton(id: string) {\n        return m(\"button\", {\n            onclick: () => libraryController.loadShelves(true, [id])\n        }, \"retry\")\n    }\n\n    function shelfNode(id: string, shelf: ShelfModel | undefined) {\n        if (shelf === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", id)\n            ])\n        } else if (shelf.error !== undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", `${id} ${shelf.error}`),\n                retryShelfLoadButton(id)\n            ])\n        } else {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"a\", { href: `#/library/${id}` }, shelf.title)\n            ])\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport function refinesComponent() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes() {\n        if (searchModel.simpleRefines.size === 0) return\n        return m(\".tagRefineWrap\", [\n            refineKeyVnode(simpleTagsHeader, searchModel.simpleRefines.size),\n            Array.from(searchModel.simpleRefines, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(searchModel.complexRefines, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: searchModel.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: TagModel) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", {\n                    type: \"checkbox\", checked: (tag.val === null)\n                        ? searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                        : searchModel.refinesQuery.vals.has(tag.clean)\n                }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: TagModel) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            searchModel.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            searchModel.refinesQuery.keys.has(key)\n                ? searchModel.refinesQuery.keys.delete(key)\n                : searchModel.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: TagModel) {\n        if (tag.val === null) {\n            searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                ? searchModel.refinesQuery.simpleKeys.delete(tag.clean)\n                : searchModel.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            searchModel.refinesQuery.vals.has(tag.clean)\n                ? searchModel.refinesQuery.vals.delete(tag.clean)\n                : searchModel.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { appStateModel } from \"..\"\nimport { TestMode } from \"../types\"\nimport { urlController } from \"../controllers\"\n\nexport function testModeComponent() {\n\n    function view() {\n        if (appStateModel.testMode !== TestMode.OFF) {\n            return m(\"#testMode\", [\n                m(\"span\", `${appStateModel.testMode} active `),\n                stopDemoButton()\n            ])\n        }\n        return\n    }\n\n    function stopDemoButton() {\n        if (appStateModel.testMode === TestMode.DEMO) {\n            return m(\"button\", { onclick: () => {\n                urlController.redirect(`/library/${TestMode.OFF}`)\n            }, class: \"stopDemo\" }, \"Start Now\")\n        }\n        return\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { urlController } from \"../controllers\"\n\nexport function journalsComponent() {\n\n    function view() {\n        return m(\"#journals\", journalList())\n    }\n\n    function journalList() {\n        let shelf = urlController.getActiveShelf()\n        if (shelf === undefined) {\n            urlController.redirect(\"/library\")\n            return\n        }\n        return Array.from(shelf.journals.values()).map(journal => {\n            let link = `#/library/${journal.shelf.id}/${journal.id}`\n            return m(\"li\", m(\"a\", { href: link }, journal.title))\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { SyncerState } from \"../types\"\nimport { syncerController } from \"../controllers\"\nimport { syncerModel, googleModel, libraryModel } from \"..\"\n\nexport function syncStateComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn || libraryModel.shelves.size === 0) return\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncerModel.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive...\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused.\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"Cloud synced.\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive...\"\n                break\n            case SyncerState.INITIALIZING:\n                txt = \"Initializing...\"\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncerModel.state)\n    }\n\n    function unpauseSync() {\n        if (syncerModel.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncerController.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncerModel.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { Caret } from \"../types\"\nimport { caretController, textController, searchController, urlController } from \"../controllers\"\n\n\nexport function searchbarComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(searchModel.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\")\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onSearchInput(event),\n            onupdate: () => onSearchUpdate(),\n            onkeydown: (event: any) => onSearchKeydown(event)\n        }\n    }\n\n    function onSearchInput(event: any) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        searchController.updateSearchbar(textController.escape(event.target.innerText))\n    }\n\n    function onSearchUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    function onSearchKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => searchController.updateSearchbar(\"\")\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { libraryController } from \"../controllers\"\r\nimport { libraryModel } from \"..\"\r\n\r\nexport function addShelvesComponent() {\r\n\r\n    let newShelfUrls = \"\"\r\n    let addingShelves = false\r\n\r\n    function view() {\r\n        return m(\"#addShelves\", [\r\n            addShelvesMessage(),\r\n            addShelvesButton(),\r\n            addShelvesTextbox(),\r\n        ])\r\n    }\r\n\r\n    function addShelvesMessage() {\r\n        if (libraryModel.shelves.size !== 0) return\r\n        return m(\"span\", \"Add Google Spreadsheet URLs here to get started. \")\r\n    }\r\n\r\n    function addShelvesButton() {\r\n        return m(\"button\", {\r\n            id: \"addShelvesButton\",\r\n            onclick: async () => {\r\n                if (addingShelves) libraryController.addShelves(newShelfUrls)\r\n                newShelfUrls = \"\"\r\n                addingShelves = !addingShelves\r\n            }\r\n        }, (addingShelves) ? \" ✓ \" : \"+/-\")\r\n    }\r\n\r\n    function addShelvesTextbox() {\r\n        if (!addingShelves) return null\r\n        return m(\"textarea\", {\r\n            id: \"addShelvesText\",\r\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n            oninput: (event: any) => newShelfUrls = event.target.value\r\n        })\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n    }\r\n\r\n}\r\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\n\nexport function breadcrumbComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn) return\n        return m(\"#breadcrumb\", urlController.getBreadcrumbTrail())\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\r\nimport { googleModel } from \"..\"\r\nimport { urlController } from \"../controllers\"\r\nimport { googleComponent } from \"../components\"\r\n\r\nexport function signinView() {\r\n\r\n    function view() {\r\n        return m(\"#auth\", [\r\n            m(googleComponent),\r\n        ])\r\n    }\r\n\r\n    function onupdate() {\r\n        if (googleModel.isSignedIn) {\r\n            urlController.redirect(\"/library\")\r\n        }\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n\r\n}\r\n","import m from \"mithril\"\nimport { \n    googleComponent, shelvesComponent, syncStateComponent, addShelvesComponent,\n    testModeComponent,\n} from \"../components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(addShelvesComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { urlController, journalController } from \"../controllers\"\nimport {\n    googleComponent, breadcrumbComponent, entriesComponent, syncStateComponent,\n    searchbarComponent, refinesComponent, composeComponent, testModeComponent,\n} from \"../components\"\n\nexport function journalView() {\n\n    function oninit() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded) return\n        journalController.loadEntries(journal)\n    }\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(searchbarComponent),\n            m(refinesComponent),\n            m(\"#entriesWrap\", [\n                m(entriesComponent),\n                m(composeComponent),\n            ])\n        ])\n    }\n\n    return {\n        view: view,\n        oninit: oninit,\n    }\n\n}\n","\nimport { urlModel } from \"..\"\nimport { urlController, appStateController } from \"../controllers\"\nimport { TestMode } from \"../types\"\n\nexport function testModeView() {\n    // TODO: WORK OUT HOW TO MANAGE TEST MODE\n    function view() {\n        if (urlModel.hash.startsWith(\"#/demo\")) {\n            appStateController.updateTestMode(TestMode.DEMO)\n            urlController.redirect(\"/library\")\n        }\n\n        if (urlModel.hash.startsWith(\"#/setTestMode\")) {\n            appStateController.updateTestMode(urlModel.getParam(\"testMode\"))\n            urlController.redirect(\"/\")\n        }\n    }\n\n    return {\n        view: view\n    }\n\n}\n"],"sourceRoot":""}