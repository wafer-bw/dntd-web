{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"m\"","webpack:///./src/index.ts","webpack:///./src/helpers/index.ts","webpack:///./src/types/index.ts","webpack:///./src/models/index.ts","webpack:///./src/classes/index.ts","webpack:///./src/views/components/index.ts","webpack:///./src/components/index.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncerTasks.ts","webpack:///./src/types/syncerResponses.ts","webpack:///./src/classes/Tag.ts","webpack:///./src/mocks/index.ts","webpack:///./src/controllers/index.ts","webpack:///./src/components/app.ts","webpack:///./src/helpers/misc.ts","webpack:///./src/helpers/errors.ts","webpack:///./src/helpers/textOps.ts","webpack:///./src/helpers/caretOps.ts","webpack:///./src/helpers/patterns.ts","webpack:///./src/helpers/localStorageOps.ts","webpack:///./src/components/links.ts","webpack:///./src/components/about.ts","webpack:///./src/components/errors.ts","webpack:///./src/components/compose.ts","webpack:///./src/classes/Entry.ts","webpack:///./src/classes/Sheet.ts","webpack:///./src/classes/Syncer.ts","webpack:///./src/classes/Search.ts","webpack:///./src/classes/Refines.ts","webpack:///./src/classes/Journal.ts","webpack:///./src/classes/Spreadsheet.ts","webpack:///./src/classes/ServiceWorker.ts","webpack:///./src/components/entries.ts","webpack:///./src/components/toggles.ts","webpack:///./src/components/searchbar.ts","webpack:///./src/components/googleAPI.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/mocks/syncTasks.ts","webpack:///./src/components/refinesPane.ts","webpack:///./src/components/syncStateIndicator.ts","webpack:///./src/views/index.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/views/components/googleComponent.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/controllers/syncerController.ts","webpack:///./src/views/components/shelvesComponent.ts","webpack:///./src/views/components/journalsComponent.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","syncer","Syncer","search","Search","refines","Refines","journal","Journal","serviceWorker","ServiceWorker","root","document","getElementById","route","app","signinView","libraryView","shelfView","journalView","Tag","Entry","Sheet","Spreadsheet","SearchType","TestMode","SyncerTaskType","SyncerResponseType","SyncerState","raw","flag","separator","val","this","frq","undefined","clean","cleanTagString","cleanKey","cleanVal","hideKeys","replace","renderVal","renderKey","str","escapeHtml","endsWith","substring","length","toLowerCase","view","hash","getHash","links","syncStateIndicator","googleAPI","errors","searchbar","toggles","refinesPane","class","entries","compose","URL","window","location","href","url","DEMO","test","searchParams","values","includes","OFF","FriendlyError","Error","errorMsg","friendlyMsg","super","push","console","warn","redraw","unsafe","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","tagPattern","spreadsheetIdPattern","id","localStorage","setItem","getItem","urls","hide","spreadsheetId","sheetId","parseInt","toString","removeItem","linkList","onclick","updateTestMode","separatedLinks","idx","link","drawLinks","errorDismissButtonSettings","splice","map","error","caret","composePrefix","composeContent","composeSuffix","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","entry","extraSettings","baseSettings","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","join","newEntry","spreadsheet","sheet","saveEntry","composeKeydown","oninput","getCaretPosition","target","composeInput","onupdate","assign","trust","rendered","saved","tags","Map","hovered","focused","tokens","savedClean","tagMatches","readableRendered","rawText","savedText","getTags","safe","getTokens","getTagMatches","render","text","tag","match","chars","split","index","has","set","matchesIter","matchAll","sort","a","b","filter","token","trim","title","sheets","getRows","rows","row","switch","build","Array","from","reverse","state","DOWNLOADING","user","worker","Worker","getTestMode","onmessage","msg","onMessage","testMode","pushSyncerTask","type","TEST_MODE_UPDATE","AUTH_UPDATE","GET_SHEETS","sheetTitle","GET_ROWS","DELETE_ROW","content","UPDATE_ROW","UNPAUSE","task","postMessage","response","data","SYNCER_STATE","SHEETS","spreadsheets","load","ROWS","ERROR","message","REAUTH","reloadAuthResponse","then","auth","updateAuth","access_token","catch","err","barQuery","searchType","NONE","refinesQuery","keys","Set","vals","simpleKeys","query","AND","OR","sourceEntries","every","some","startsWith","simple","complex","simpleRefines","complexRefines","cleanRefines","delete","isSignedIn","entryInFocus","hideTagRefines","hideEntriesKeys","showAddSpreadsheetTextbox","spreadsheetUrls","getStoredHideTagRefines","getStoredHideEntriesKeys","incomingSpreadsheetIds","getSpreadsheetIdsFromUrls","loadNewSpreadsheets","removeOldSpreadsheets","getStoredSpreadsheetId","getStoredSpreadsheetSheetId","reset","setStoredSpreadsheetId","setStoredSpreadsheetSheetId","spreadsheetIds","spreadsheet_id","delStoredSpreadsheetSheetId","ids","matches","deleteRow","updateRow","getSheets","properties","navigator","addEventListener","register","entriesVnodes","searchEntries","entryVnode","entryContent","deleteEntryButton","deleteEntry","blur","onEntryKeydown","onEntryInput","onEntryUpdate","onblur","onEntryBlur","onmouseover","onEntryMouseover","onmouseout","onEntryMouseout","onfocus","onEntryFocus","entryContentSettings","for","checked","disabled","setStoredHideEntriesKeys","setStoredHideTagRefines","placeholder","onSearchInput","onSearchKeydown","scope","gapi_","initClient","auth2","init","client_id","getAuthInstance","listen","updateSigninStatus","signedIn","currentUser","getAuthResponse","getStoredSpreadsheetUrls","initJournal","unload","addSpreadsheetButton","setStoredSpreadsheetUrls","onchange","selected","substr","isActive","RETURN_ROWS","signOut","signIn","async","defer","src","onload","gapi","MockGapi","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","MockIsSignedIn","extendSheetLength","_token","_task","FAIL_GET_SPREADSHEET_SHEETS","FAIL_GET_RANGE","FAIL_UPDATE_RANGE","FAIL_DELETE_ROW","expanded","refineKeyVnode","count","metaKey","ctrlKey","add","refineTagKeyOnClick","tagRefineKeySettings","refineValVnode","tagRefineValSettings","tagClass","hideClass","refineTagValOnClick","size","syncStateText","txt","class_","stateColorClass","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","unpause","syncState","googleComponent","journalsComponent","googleModel","googleController","initGapi","TagModel","sheetIds","ShelfModel","journalIds","syncerModel","requestsCounter","requests","Promise","resolve","reject","clientId","shelfId","EntryModel","buildTags","fromIdx","toIdx","LibraryModel","shelfIds","libraryModel","spreadsheetUrlsString","getSpreadsheetsMetadata","forEach","all","syncerController","tasks","log","createLibrary","param","journalId","shelvesComponent"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = m;","import m from \"mithril\"\nimport { app } from \"./components\"\nimport { signinView, libraryView, shelfView, journalView } from \"./views\"\nimport { Journal, Search, Syncer, ServiceWorker, Refines } from \"./classes\"\n\nexport const syncer = new Syncer()\nexport const search = new Search()\nexport const refines = new Refines()\nexport const journal = new Journal()\nexport const serviceWorker = new ServiceWorker()\n\nlet root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": app,                                           // TODO remove\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/library/:shelfId/:journalId\": journalView,\n        // \"/demo\" : app,                                   // TODO\n        // \"/about\": about,                                 // TODO\n    })\n}\n","export * from \"./misc\"\nexport * from \"./errors\"\nexport * from \"./textOps\"\nexport * from \"./caretOps\"\nexport * from \"./patterns\"\nexport * from \"./localStorageOps\"\n","export * from \"./caret\"\nexport * from \"./errors\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncerTasks\"\nexport * from \"./syncerResponses\"\n","export * from \"./TagModel\"\r\nexport * from \"./EntryModel\"\r\nexport * from \"./ShelfModel\"\r\nexport * from \"./SyncerModel\"\r\nexport * from \"./GoogleModel\"\r\nexport * from \"./JournalModel\"\r\nexport * from \"./LibraryModel\"\r\n","export { Tag } from \"./Tag\"\nexport { Entry } from \"./Entry\"\nexport { Sheet } from \"./Sheet\"\nexport { Syncer } from \"./Syncer\"\nexport { Search } from \"./Search\"\nexport { Refines } from \"./Refines\"\nexport { Journal } from \"./Journal\"\nexport { Spreadsheet } from \"./Spreadsheet\"\nexport { ServiceWorker } from \"./ServiceWorker\"\n","// TODO: remove old components directory at src/components and replace with this directory\nexport * from \"./googleComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./journalsComponent\"\n","export * from \"./app\"\nexport * from \"./links\"\nexport * from \"./about\"\nexport * from \"./errors\"\nexport * from \"./compose\"\nexport * from \"./entries\"\nexport * from \"./toggles\"\nexport * from \"./searchbar\"\nexport * from \"./googleAPI\"\nexport * from \"./refinesPane\"\nexport * from \"./syncStateIndicator\"\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"7\"\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerTask = (\n    AuthUpdateTask | DeleteRowTask | UpdateRowTask | GetRowsTask |\n    GetSheetsTask | TestModeUpdateTask | UnpauseTask\n)\n\nexport enum SyncerTaskType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    GET_SHEETS,\n    TEST_MODE_UPDATE,\n    UNPAUSE\n}\n\nexport interface GetSheetsTask {\n    type: SyncerTaskType.GET_SHEETS\n    spreadsheetId: string\n}\n\nexport interface TestModeUpdateTask {\n    type: SyncerTaskType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdateTask {\n    type: SyncerTaskType.AUTH_UPDATE\n    token: string\n}\n\nexport interface DeleteRowTask {\n    type: SyncerTaskType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowTask {\n    type: SyncerTaskType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetRowsTask {\n    type: SyncerTaskType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n}\n\nexport interface UnpauseTask {\n    type: SyncerTaskType.UNPAUSE\n}\n","import { SyncerError } from \"../workers/sync\"\n\nexport type SyncerResponse = (\n    RowsResponse | SheetsResponse | QueueStateResponse | ErrorResponse | ReauthResponse\n)\n\nexport enum SyncerResponseType {\n    ROWS,\n    SHEETS,\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n}\n\nexport interface RowsResponse {\n    type: SyncerResponseType.ROWS\n    spreadsheetId: string\n    sheetId: number\n    rows: string[]\n}\n\nexport interface SheetsResponse {\n    type: SyncerResponseType.SHEETS\n    spreadsheetId: string\n    sheets: gapi.client.sheets.Sheet[]\n}\n\nexport interface QueueStateResponse {\n    type: SyncerResponseType.SYNCER_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorResponse {\n    type: SyncerResponseType.ERROR\n    error: SyncerError | Error\n    friendlyMsg: string\n}\n\nexport interface ReauthResponse {\n    type: SyncerResponseType.REAUTH\n}\n","import { escapeHtml } from \"../helpers\"\n\nexport class Tag {\n    public frq: number\n    public raw: string\n    public key: string\n    public flag: string\n    public clean: string\n    public cleanKey: string\n    public val: string | null\n    public cleanVal: string | null\n    public separator: string | null\n\n    constructor(raw: string, flag: string, key: string, separator: string | undefined | null, val: string | undefined | null) {\n        this.frq = 1\n        this.raw = raw\n        this.flag = flag\n        this.key = key\n        this.separator = (separator !== undefined) ? separator : null\n        this.val = (val !== undefined) ? val : null\n        this.clean = this.cleanTagString(this.raw)\n        this.cleanKey = this.cleanTagString(this.key)\n        this.cleanVal = (this.val !== null) ? this.cleanTagString(this.val) : null\n    }\n\n    public renderKey(): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + ((this.separator) ? this.separator : \"\")\n            + \"')\\\" class=\\\"\"\n            + ((this.separator) ? \"tagKey\" : (this.val === null) ? \"simpleTag\" : \"roundTagVal\")\n            + \"\\\">\"\n            + this.flag\n            + this.key\n            + \"</span>\"\n    }\n\n    public renderVal(hideKeys?: boolean): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + this.separator\n            + this.cleanVal?.replace(/'/, \"\\\\'\")\n            + \"')\\\" class=\\\"\"\n            + ((hideKeys) ? \"roundTagVal\" : \"tagVal\")\n            + \"\\\">\"\n            + ((hideKeys) ? \"\" : this.separator)\n            + (this.val || \"\")\n            + \"</span>\"\n    }\n\n    public render(hideKeys?: boolean): string {\n        if (this.separator) {\n            return (hideKeys) ? this.renderVal(hideKeys) : this.renderKey() + this.renderVal(hideKeys)\n        } else {\n            return this.renderKey()\n        }\n    }\n\n    private cleanTagString(str: string) {\n        str = escapeHtml(str)\n        str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\n        str = str.toLowerCase()\n        return str\n    }\n}\n","export * from \"./Gapi\"\nexport * from \"./syncTasks\"\n","export * from \"./googleController\"\r\nexport * from \"./syncerController\"\r\n","import m from \"mithril\"\nimport { journal } from \"..\"\nimport { getHash } from \"../helpers\"\nimport {\n    googleAPI, compose, entries, searchbar, toggles, syncStateIndicator, refinesPane, errors, links\n} from \".\"\n\nexport function app() {\n\n    function view() {\n        let hash = getHash()\n        return [\n            (hash === \"#!\" || hash === \"\") ? null : m(links),\n            m(syncStateIndicator),\n            m(googleAPI),\n            m(\"#errorsWrap\", m(errors)),\n            (journal.isActive)\n                ? [\n                    m(\"#searchWrap\", [\n                        m(searchbar),\n                        m(toggles)\n                    ]),\n                    m(refinesPane),\n                    m(\"#entriesWrap\", entriesWrappSettings(), [\n                        m(entries),\n                        m(compose),\n                    ]),\n                ]\n                : [],\n        ]\n    }\n\n    function entriesWrappSettings() {\n        return { class: (journal.hideTagRefines) ? \"fullWidth\" : \"\" }\n    }\n\n    return { view: view }\n}","import { TestMode } from \"../types\"\n\nexport function getHash(): string {\n    let url = new URL(window.location.href)\n    return url.hash\n}\n\nexport function getTestMode(): TestMode {\n    let url = new URL(window.location.href)\n    if (url.hash === \"#!demo\") {\n        return TestMode.DEMO\n    }\n    let test = url.searchParams.get(\"test\")\n    return (test !== null && instanceOfTestMode(test)) ? test : TestMode.OFF\n\n}\n\nfunction instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","import m from \"mithril\"\nimport { journal } from \"..\"\n\nexport class FriendlyError extends Error {\n    constructor(errorMsg: string, public friendlyMsg: string) {\n        super(errorMsg)\n        journal.errors.push(friendlyMsg)\n        console.warn(errorMsg)\n        m.redraw()\n    }\n}\n","export function escapeHtml(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n","function node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nexport function getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nexport function setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","export const tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\nexport const spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n","export function setStoredSpreadsheetId(id: string) {\n    localStorage.setItem(\"spreadsheetId\", id)\n}\nexport function getStoredSpreadsheetId(): string | undefined {\n    return localStorage.getItem(\"spreadsheetId\") || undefined\n}\n\nexport function setStoredSpreadsheetUrls(urls: string) {\n    localStorage.setItem(\"spreadsheetUrls\", urls)\n}\nexport function getStoredSpreadsheetUrls(): string | undefined {\n    return localStorage.getItem(\"spreadsheetUrls\") || undefined\n}\n\nexport function setStoredHideEntriesKeys(hide: boolean) {\n    localStorage.setItem(\"hideEntriesKeys\", (hide) ? \"1\": \"0\")\n}\nexport function getStoredHideEntriesKeys(): boolean {\n    return localStorage.getItem(\"hideEntriesKeys\") === \"1\"\n}\n\nexport function setStoredHideTagRefines(hide: boolean) {\n    localStorage.setItem(\"hideTagRefines\", (hide) ? \"1\": \"0\")\n}\nexport function getStoredHideTagRefines(): boolean {\n    return localStorage.getItem(\"hideTagRefines\") === \"1\"\n}\n\nexport function getStoredSpreadsheetSheetId(spreadsheetId: string | undefined): number | undefined {\n    let sheetId = localStorage.getItem(`${spreadsheetId}-sheetId`) || undefined\n    return (sheetId !== undefined) ? parseInt(sheetId) : undefined\n}\nexport function setStoredSpreadsheetSheetId(spreadsheetId: string, sheetId: number) {\n    localStorage.setItem(`${spreadsheetId}-sheetId`, sheetId.toString())\n}\nexport function delStoredSpreadsheetSheetId(spreadsheetId: string | undefined) {\n    localStorage.removeItem(`${spreadsheetId}-sheetId`)\n}\n","import m from \"mithril\"\nimport { syncer } from \"..\"\nimport { TestMode } from \"../types\"\nimport { getHash } from \"../helpers\"\n\nexport function links() {\n\n    function view() {\n        let hash = getHash()\n        let linkList: m.Vnode[] = []\n        if (hash !== \"#!about\") linkList.push(m(\"a\", { href: \"/#!about\" }, \"About\"))\n        if (hash !== \"#!demo\") linkList.push(m(\"a\", { href: \"/#!demo\", onclick: () => syncer.updateTestMode(TestMode.DEMO) }, \"Demo\"))\n        if (hash !== \"#!\" && hash !== \"\") linkList.push(m(\"a\", { href: \"/#!\", onclick: () => syncer.updateTestMode(TestMode.OFF) }, \"Start\"))\n        return m(\"#navLinks\", drawLinks(linkList))\n    }\n\n    function drawLinks(linkList: m.Vnode[]) {\n        let separatedLinks = []\n        for (let [idx, link] of linkList.entries()) {\n            separatedLinks.push(link)\n            if (idx !== linkList.length - 1) separatedLinks.push(\" | \")\n        }\n        return separatedLinks\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { links } from \".\"\n\nexport function about() {\n\n    function view() {\n        return m(\"#callToAction\", [\n            m(links),\n            m(\"#about\", \"About page will be filled when the visual overhaul is complete.\")\n        ])\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { journal } from \"..\"\n\nexport function errors() {\n\n    function view() {\n        if (journal.errors.length === 0) { return [] }\n        return m(\"#errors\", journal.errors.map((error, idx) => [\n            m(\".error\", [\n                m(\"span\", error),\n                m(\"button\", errorDismissButtonSettings(idx), \"dismiss\"),\n            ])\n        ]))\n    }\n\n    function errorDismissButtonSettings(idx: number) {\n        return {\n            class: \"dismissErrorButton\",\n            onclick: () => journal.errors.splice(idx, 1),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { journal } from \"..\"\nimport { Caret } from \"../types\"\nimport { Entry } from \"../classes\"\nimport { getCaretPosition, setCaretPosition } from \"../helpers\"\n\nexport function compose() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefix = new Entry(\"\")\n    const composeContent = new Entry(\"\")\n    const composeSuffix = new Entry(\"\")\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        return m(\"#compose\", [\n            m(\"#prefix\", composeNodeSettings(composePrefix, prefixSettings), m.trust(composePrefix.rendered)),\n            m(\"#content\", composeNodeSettings(composeContent, entrySettings), m.trust(composeContent.rendered)),\n            m(\"#suffix\", composeNodeSettings(composeSuffix, suffixSettings), m.trust(composeSuffix.rendered)),\n        ])\n    }\n\n    function getComposedEntry() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: Entry, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let raw = getComposedEntry()\n            composeContent.raw = \"\"\n            let newEntry = new Entry(raw, \"\")\n            let idx = journal.spreadsheet!.sheet!.entries.length\n            journal.spreadsheet!.sheet!.entries.push(newEntry)\n            m.redraw()\n            await journal.saveEntry(idx)\n        }\n    }\n\n    function composeInput(event: any, entry: Entry) {\n        let pos = getCaretPosition(event.target)\n        caret = (pos)\n            ? { pos: pos[1], el: event.target }\n            : { pos: null, el: null }\n        entry.raw = event.target.innerText\n    }\n\n    function composeUpdate() {\n        setCaretPosition(caret.el, caret.pos)\n        caret = { el: null, pos: null }\n    }\n\n    return { view: view }\n}\n","import { Tag } from \"./Tag\"\nimport { tagPattern, escapeHtml } from \"../helpers\"\n\nexport type TagsMap = Map<string, Tag>\n\ninterface TagMatch {\n    tag: Tag,\n    match: RegExpMatchArray\n}\n\nexport interface IndexedEntry {\n    idx: number,\n    entry: Entry,\n}\n\nexport class Entry {\n    public tags: TagsMap = new Map()\n    public hovered: boolean = false\n    public focused: boolean = false\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public savedClean: string = \"\"\n    private tagMatches: TagMatch[] = []\n    public readableRendered: string = \"\"\n    private rawText: string = \"\"\n    private savedText: string = \"\"\n\n    constructor(raw?: string | undefined, saved?: string | undefined) {\n        this.raw = (raw) ? raw : \"\"\n        this.saved = (saved !== undefined) ? saved : this.raw\n    }\n\n    public get saved(): string {\n        return this.savedText\n    }\n    public set saved(str: string) {\n        this.savedText = str\n        this.savedClean = str.toLowerCase()\n        this.tags = this.getTags(this.tagMatches)\n    }\n\n    public get raw(): string {\n        return this.rawText\n    }\n    public set raw(raw: string) {\n        this.rawText = raw\n        this.clean = this.raw.toLowerCase()\n        let safe = escapeHtml(this.rawText)\n        this.tokens = this.getTokens(this.clean)\n        this.tagMatches = this.getTagMatches(safe)\n        this.rendered = this.render(safe, this.tagMatches)\n        this.readableRendered = this.render(safe, this.tagMatches, true)\n    }\n\n    private render(text: string, tagMatches: TagMatch[], hideKeys?: boolean): string {\n        for (let { tag, match } of tagMatches) {\n            let chars = text.split(\"\")\n            chars.splice(match.index!, match[0].length, tag.render(hideKeys))\n            text = chars.join(\"\")\n        }\n        return text\n    }\n\n    private getTags(tagMatches: TagMatch[]): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let { tag } of tagMatches) {\n            if (tags.has(tag.clean)) {\n                tags.get(tag.clean)!.frq += 1\n            } else {\n                tags.set(tag.clean, tag)\n            }\n        }\n        return tags\n    }\n\n    private getTagMatches(text: string): TagMatch[] {\n        let tagMatches = []\n        let matchesIter = text.matchAll(tagPattern)\n        for (let match of matchesIter) {\n            let tag = new Tag(match[0], match[1], match[2], match[3], match[4])\n            tagMatches.push({ tag: tag, match: match })\n        }\n        tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n        return tagMatches\n    }\n\n    private getTokens(text: string): string[] {\n        let tokens = text.split(\" \")\n        return tokens.filter(token => {\n            return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n        })\n    }\n\n}\n","import { Entry, Tag } from \".\"\nimport { TagsMap } from \"../classes/Entry\"\nimport { Spreadsheet } from \"./Spreadsheet\"\nimport { syncer, journal, refines } from \"..\"\n\nexport class Sheet {\n    public id: number\n    public title: string\n    public spreadsheet: Spreadsheet\n    public entries: Entry[] = []\n\n    constructor(id: number, title: string, spreadsheet: Spreadsheet) {\n        this.id = id\n        this.title = title\n        this.spreadsheet = spreadsheet\n        spreadsheet.sheets.set(this.id, this)\n        syncer.getRows(this.spreadsheet.id, this.id, this.title)\n    }\n\n    public async load(rows: string[]) {\n        rows.map(row => this.entries.push(new Entry(row)))\n        journal.switch()\n        if (\n            journal.spreadsheet !== null &&\n            journal.spreadsheet.sheet !== null &&\n            journal.spreadsheet.sheet.id === this.id\n        ) {\n            refines.build()\n        }\n    }\n\n    get tags(): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let entry of Array.from(this.entries.values()).reverse()) {\n            for (let [key, tag] of entry.tags) {\n                if (tags.has(key)) {\n                    tags.get(key)!.frq += tag.frq\n                } else {\n                    tags.set(key, new Tag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n                }\n            }\n        }\n        return tags\n    }\n\n}\n","import m from \"mithril\"\nimport { journal, syncer } from \"..\"\nimport { MockGoogleUser } from \"../mocks\"\nimport { FriendlyError, getTestMode } from \"../helpers\"\nimport { SyncerTask, SyncerTaskType, SyncerResponse, SyncerResponseType, SyncerState, TestMode } from \"../types\"\n\nexport class Syncer {\n    public worker: Worker\n    public state: SyncerState = SyncerState.DOWNLOADING\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | null = null\n\n    constructor() {\n        this.worker = new Worker(\"./js/syncWebWorker.js\")\n        this.updateTestMode(getTestMode())\n        this.worker.onmessage = (msg: MessageEvent) => this.onMessage(msg)\n    }\n\n    public updateTestMode(testMode: TestMode) {\n        this.pushSyncerTask({ testMode: testMode, type: SyncerTaskType.TEST_MODE_UPDATE })\n    }\n\n    public updateAuth(token: string) {\n        this.pushSyncerTask({ token: token, type: SyncerTaskType.AUTH_UPDATE })\n    }\n\n    public getSheets(spreadsheetId: string) {\n        this.pushSyncerTask({\n            spreadsheetId: spreadsheetId,\n            type: SyncerTaskType.GET_SHEETS\n        })\n    }\n\n    public getRows(spreadsheetId: string, sheetId: number, sheetTitle: string) {\n        this.pushSyncerTask({\n            spreadsheetId: spreadsheetId,\n            sheetId: sheetId,\n            sheetTitle: sheetTitle,\n            type: SyncerTaskType.GET_ROWS\n        })\n    }\n\n    public deleteRow(idx: number, spreadsheetId: string, sheetId: number) {\n        this.pushSyncerTask({\n            idx: idx,\n            spreadsheetId: spreadsheetId,\n            sheetId: sheetId,\n            type: SyncerTaskType.DELETE_ROW\n        })\n    }\n\n    public updateRow(idx: number, spreadsheetId: string, sheetId: number, sheetTitle: string, content: string) {\n        this.pushSyncerTask({\n            idx: idx,\n            spreadsheetId: spreadsheetId,\n            sheetId: sheetId,\n            sheetTitle: sheetTitle,\n            content: content,\n            type: SyncerTaskType.UPDATE_ROW\n        })\n    }\n\n    public unpause() {\n        this.pushSyncerTask({ type: SyncerTaskType.UNPAUSE })\n    }\n\n    private pushSyncerTask(task: SyncerTask) {\n        this.worker.postMessage(task)\n    }\n\n    private onMessage(msg: MessageEvent) {\n        let response: SyncerResponse = msg.data\n        switch (response.type) {\n            case SyncerResponseType.SYNCER_STATE:\n                if (response.state !== syncer.state) {\n                    syncer.state = response.state\n                    m.redraw()\n                }\n                break\n            case SyncerResponseType.SHEETS:\n                if (journal.spreadsheets.has(response.spreadsheetId)) {\n                    journal.spreadsheets.get(response.spreadsheetId)!.load(response.sheets)\n                }\n                break\n            case SyncerResponseType.ROWS:\n                if (\n                    journal.spreadsheets.has(response.spreadsheetId)\n                    && journal.spreadsheets.get(response.spreadsheetId)!.sheets.has(response.sheetId)\n                ) {\n                    journal.spreadsheets.get(response.spreadsheetId)!.sheets.get(response.sheetId)!.load(response.rows)\n                }\n                break\n            case SyncerResponseType.ERROR:\n                new FriendlyError(response.error.message, `Sync Error - ${response.friendlyMsg}`)\n                break\n            case SyncerResponseType.REAUTH:\n                if (syncer.user !== null) {\n                    syncer.user.reloadAuthResponse().then((auth) => {\n                        syncer.updateAuth(auth.access_token)\n                    }).catch((err) => {\n                        new FriendlyError(err, \"You're signed out and need to sign back in.\")\n                    })\n                }\n                break\n        }\n    }\n}\n","import { journal } from \"..\"\nimport { Entry, Tag } from \".\"\nimport { SearchType } from \"../types\"\nimport { IndexedEntry } from \"../classes/Entry\"\n\ninterface RefinesQuery {\n    keys: Set<string>,\n    vals: Map<string, Tag>,\n    simpleKeys: Map<string, Tag>\n}\n\nexport class Search {\n    public barQuery: Entry = new Entry(\"\")\n    public searchType: SearchType = SearchType.NONE\n    public refinesQuery: RefinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    get query(): Entry {\n        return new Entry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n\n    public reset() {\n        this.barQuery = new Entry(\"\")\n        this.searchType = SearchType.NONE\n        this.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n    }\n\n    public entries(): IndexedEntry[] | null {\n        let entries: IndexedEntry[] | null = null\n        if (this.query.tokens.length === 0) {\n            this.searchType = SearchType.NONE\n        } else {\n            this.searchType = SearchType.AND\n            entries = this.search()\n            if (entries.length === 0) {\n                this.searchType = SearchType.OR\n                entries = this.search()\n            }\n        }\n        return entries\n    }\n\n    private search(): IndexedEntry[] {\n        let query = this.query\n        let entries: IndexedEntry[] = []\n        let sourceEntries = journal.spreadsheet!.sheet!.entries\n        for (let [idx, entry] of sourceEntries.entries()) {\n            switch (this.searchType) {\n                case SearchType.AND:\n                    if (query.tokens.every(token => this.match(token, entry))) {\n                        entries.push({ idx: idx, entry: entry })\n                    }\n                    break\n                case SearchType.OR:\n                    if (query.tokens.some(token => this.match(token, entry))) {\n                        entries.push({ idx: idx, entry: entry })\n                    }\n                    break\n            }\n        }\n        return entries\n    }\n\n    private match(token: string, entry: Entry) {\n        if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n            return entry.tags.get(token.substring(1)) === undefined\n        } else if (token.startsWith(\"-\")) {\n            return !entry.savedClean.includes(token.substring(1))\n        } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n            return entry.tags.get(token) !== undefined\n        } else {\n            return entry.savedClean.includes(token)\n        }\n    }\n}\n","import { Tag } from \".\"\nimport { journal, search } from \"..\"\n\nexport class Refines {\n    public simple: Map<string, Tag> = new Map()\n    public complex: Map<string, Tag[]> = new Map()\n\n    constructor() { }\n\n    public build() {\n        let simpleRefines: Map<string, Tag> = new Map()\n        let complexRefines: Map<string, Tag[]> = new Map()\n\n        for (let tag of journal.spreadsheet!.sheet!.tags.values()) {\n            if (tag.val === null) {\n                let key = `${tag.flag}${tag.cleanKey}`\n                if (!simpleRefines.has(key)) {\n                    simpleRefines.set(key, tag)\n                }\n            } else {\n                let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n                if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n                complexRefines.get(key)!.push(tag)\n            }\n        }\n\n        this.simple = new Map([...simpleRefines.entries()])\n        this.complex = new Map([...complexRefines.entries()].sort())\n\n        this.cleanRefines()\n    }\n\n    private cleanRefines() {\n        // Clean stale simple tag key (refine val) selections\n        for (let [key,] of search.refinesQuery.simpleKeys) {\n            if (!this.simple.has(key)) {\n                search.refinesQuery.simpleKeys.delete(key)\n            }\n        }\n\n        // Clean stale complex tag key selections\n        for (let key of search.refinesQuery.keys) {\n            if (!this.complex.has(key)) {\n                search.refinesQuery.keys.delete(key)\n            }\n        }\n\n        // Clean stale complex tag val\n        for (let [key,] of search.refinesQuery.vals) {\n            if (!Array.from(this.complex.values()).some(tags => tags.some(tag => tag.clean === key))) {\n                search.refinesQuery.vals.delete(key)\n            }\n        }\n    }\n\n}","import m from \"mithril\"\nimport { Spreadsheet } from \".\"\nimport { search, syncer, refines } from \"..\"\nimport {\n    spreadsheetIdPattern, getStoredHideTagRefines, getStoredHideEntriesKeys,\n    setStoredSpreadsheetId, setStoredSpreadsheetSheetId, delStoredSpreadsheetSheetId,\n    getStoredSpreadsheetId, getStoredSpreadsheetSheetId\n} from \"../helpers\"\n\nexport class Journal {\n    public errors: string[] = []\n    public isSignedIn: boolean = false\n    public entryInFocus: boolean = false\n    public hideTagRefines: boolean = false\n    public hideEntriesKeys: boolean = false\n    public spreadsheet: Spreadsheet | null = null\n    public showAddSpreadsheetTextbox: boolean = false\n    public spreadsheets: Map<string, Spreadsheet> = new Map()\n\n    constructor() { }\n\n    public async load(spreadsheetUrls: string | undefined) {\n        this.hideTagRefines = getStoredHideTagRefines()\n        this.hideEntriesKeys = getStoredHideEntriesKeys()\n        let incomingSpreadsheetIds = this.getSpreadsheetIdsFromUrls(spreadsheetUrls)\n        await this.loadNewSpreadsheets(incomingSpreadsheetIds)\n        await this.removeOldSpreadsheets(incomingSpreadsheetIds)\n    }\n\n    public unload() {\n        this.removeOldSpreadsheets([])\n        this.errors = []\n        this.isSignedIn = false\n        this.entryInFocus = false\n        this.hideTagRefines = false\n        this.hideEntriesKeys = false\n        this.spreadsheet = null\n        this.showAddSpreadsheetTextbox = false\n        this.spreadsheets = new Map()\n    }\n\n    get isActive(): boolean {\n        return this.spreadsheet !== null && this.spreadsheet.sheet !== null && this.isSignedIn\n    }\n\n    public switch(spreadsheetId?: string | undefined, sheetId?: number | undefined) {\n        if (spreadsheetId !== undefined && sheetId !== undefined && this.spreadsheet?.id === spreadsheetId && this.spreadsheet?.sheet?.id === sheetId) {\n            return\n        }\n\n        if (spreadsheetId === undefined && sheetId === undefined) {\n            spreadsheetId = getStoredSpreadsheetId()\n            sheetId = getStoredSpreadsheetSheetId(spreadsheetId)\n        }\n\n        search.reset()\n\n        this.spreadsheet = (spreadsheetId !== undefined && this.spreadsheets.has(spreadsheetId))\n            ? this.spreadsheets.get(spreadsheetId)!\n            : Array.from(this.spreadsheets.values())[0] || null\n\n        if (this.spreadsheet !== null) {\n            setStoredSpreadsheetId(this.spreadsheet.id)\n            this.spreadsheet.sheet = (sheetId !== undefined && this.spreadsheet.sheets.has(sheetId))\n                ? this.spreadsheet.sheets.get(sheetId)!\n                : Array.from(this.spreadsheet.sheets.values())[0] || null\n\n            if (this.spreadsheet.sheet !== null) {\n                setStoredSpreadsheetSheetId(this.spreadsheet.id, this.spreadsheet.sheet.id)\n            }\n        }\n\n        refines.build()\n        m.redraw()\n    }\n\n    private async loadNewSpreadsheets(spreadsheetIds: string[]) {\n        for (let id of spreadsheetIds.filter(id => !this.spreadsheets.get(id)).sort(id => (id === getStoredSpreadsheetId() ? -1 : 1))) {\n            new Spreadsheet(id)\n        }\n    }\n\n    private async removeOldSpreadsheets(spreadsheetIds: string[]) {\n        for (let [spreadsheet_id] of Array.from(this.spreadsheets).filter(([spreadsheet_id]) => !spreadsheetIds.includes(spreadsheet_id))) {\n            delStoredSpreadsheetSheetId(spreadsheet_id)\n            if (this.spreadsheet === this.spreadsheets.get(spreadsheet_id)) {\n                this.spreadsheet = null\n            }\n            if (this.spreadsheets.has(spreadsheet_id)) {\n                for (let [id] of this.spreadsheets.get(spreadsheet_id)!.sheets) {\n                    this.spreadsheets.get(spreadsheet_id)!.sheets.delete(id)\n                }\n                this.spreadsheets.delete(spreadsheet_id)\n            }\n        }\n    }\n\n    private getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n        if (!urls) { return [] }\n        let ids: string[] = []\n        let matches = urls.matchAll(spreadsheetIdPattern)\n        for (let match of matches) {\n            if (match) { ids.push(match[1]) }\n        }\n        return ids\n    }\n\n    public async deleteEntry(idx: number) {\n        syncer.deleteRow(idx, this.spreadsheet!.id, this.spreadsheet!.sheet!.id)\n        this.spreadsheet!.sheet!.entries.splice(idx, 1)[0]\n        refines.build()\n        m.redraw()\n    }\n\n    public async saveEntry(idx: number) {\n        let entry = this.spreadsheet!.sheet!.entries[idx]\n        if (entry.raw === entry.saved) { return }\n        syncer.updateRow(idx, this.spreadsheet!.id, this.spreadsheet!.sheet!.id, this.spreadsheet!.sheet!.title, entry.raw)\n        entry.saved = entry.raw\n        refines.build()\n        m.redraw()\n    }\n}\n","import { Sheet } from \".\"\nimport { journal, syncer } from \"../index\"\nimport { getStoredSpreadsheetSheetId } from \"../helpers\"\n\nexport class Spreadsheet {\n    public sheet: Sheet | null = null\n    public sheets: Map<number, Sheet> = new Map()\n\n    constructor(public id: string) {\n        journal.spreadsheets.set(id, this)\n        syncer.getSheets(id)\n    }\n\n    public async load(sheets: gapi.client.sheets.Sheet[]) {\n        for (let sheet of sheets.sort((sheet) => (sheet.properties?.sheetId === getStoredSpreadsheetSheetId(this.id)) ? -1 : 1)) {\n            if (sheet.properties !== undefined && sheet.properties.title !== undefined && sheet.properties.sheetId !== undefined) {\n                new Sheet(sheet.properties.sheetId, sheet.properties.title, this)\n            }\n        }\n    }\n}\n","import { FriendlyError } from \"../helpers\"\r\n\r\nexport class ServiceWorker {\r\n    constructor() {\r\n        if (\"serviceWorker\" in navigator) {\r\n            window.addEventListener(\"load\", async () => {\r\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\r\n            })\r\n        } else {\r\n            throw new FriendlyError(\"serviceWorker not supported\", \"Your browser is not supported.\")\r\n        }\r\n    }\r\n}\r\n","import { Caret } from \"../types\"\nimport m from \"mithril\"\nimport { Entry } from \"../classes\"\nimport { journal, search } from \"..\"\nimport { getCaretPosition, setCaretPosition } from \"../helpers\"\n\nexport function entries() {\n    var caret: Caret = { pos: null, el: null }\n\n    function view() {\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesVnodes(),\n        ])\n    }\n\n    function entriesVnodes() {\n        let searchEntries = search.entries()\n        if (searchEntries !== null) {\n            return searchEntries.map(({idx, entry}) => entryVnode(idx, entry))\n        }\n\n        let allEntries = Array.from(journal.spreadsheet!.sheet!.entries.entries())\n        return allEntries.map(([idx, entry]) => entryVnode(idx, entry))\n    }\n\n    function entryVnode(idx: number, entry: Entry): m.Vnode {\n        return m(\".entryWrap\", { id: `entry-${idx}` }, [\n            entryContent(entry, idx),\n            deleteEntryButton(idx),\n        ])\n    }\n\n    function deleteEntryButton(idx: number) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: async () => await journal.deleteEntry(idx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: Entry, idx: number) {\n        return m(\"div\", entryContentSettings(entry, idx), m.trust(\n            (!entry.hovered && !entry.focused && journal.hideEntriesKeys)\n                ? entry.readableRendered\n                : entry.rendered\n        ))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: Entry) {\n        let pos = getCaretPosition(event.target)\n        caret = { pos: (pos) ? pos[1] : null, el: event.target }\n        entry.raw = event.target.innerText\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        setCaretPosition(caret.el, caret.pos)\n        caret = { pos: null, el: null }\n    }\n\n    function onEntryFocus(event: any, entry: Entry) {\n        event.redraw = false\n        entry.focused = true\n    }\n\n    async function onEntryBlur(event: any, entry: Entry, idx: number) {\n        event.redraw = false\n        entry.focused = false\n        await journal.saveEntry(idx)\n    }\n\n    function onEntryMouseover(event: any, entry: Entry) {\n        if (!journal.hideEntriesKeys) {\n            event.redraw = false\n        }\n        entry.hovered = true\n    }\n\n    function onEntryMouseout(event: any, entry: Entry) {\n        if (!journal.hideEntriesKeys) {\n            event.redraw = false\n        }\n        entry.hovered = false\n    }\n\n    function entryContentSettings(entry: Entry, idx: number) {\n        return {\n            id: `entry-${idx}-content`,\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, idx),\n            onmouseover: (event: any) => onEntryMouseover(event, entry),\n            onmouseout: (event: any) => onEntryMouseout(event, entry),\n            onfocus: (event: any) => onEntryFocus(event, entry),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { journal } from \"..\"\r\nimport {\r\n    getStoredHideEntriesKeys, setStoredHideEntriesKeys, setStoredHideTagRefines\r\n} from \"../helpers\"\r\n\r\nexport function toggles() {\r\n\r\n    function view() {\r\n        return [\r\n            m(\"#hideEntriesKeysToggle\", [\r\n                m(\"label\", { for: \"hideEntriesCheckbox\" }, \"Tag keys:\"),\r\n                m(\"input#hideEntriesCheckbox\", hideEntriesKeysSettings())\r\n            ]),\r\n            m(\"#hideTagRefinesToggle\", [\r\n                m(\"label\", { for: \"hideTagRefinesCheckbox\" }, \"Tag refines:\"),\r\n                m(\"input#hideTagRefinesCheckbox\", hideTagRefinesSettings())\r\n            ])\r\n        ]\r\n    }\r\n\r\n    function hideEntriesKeysSettings() {\r\n        return {\r\n            type: \"checkbox\",\r\n            checked: !getStoredHideEntriesKeys(),\r\n            disabled: (journal.entryInFocus),\r\n            onclick: () => {\r\n                journal.hideEntriesKeys = !journal.hideEntriesKeys\r\n                setStoredHideEntriesKeys(journal.hideEntriesKeys)\r\n            }\r\n        }\r\n    }\r\n\r\n    function hideTagRefinesSettings() {\r\n        return {\r\n            type: \"checkbox\",\r\n            checked: !journal.hideTagRefines,\r\n            onclick: () => {\r\n                journal.hideTagRefines = !journal.hideTagRefines\r\n                setStoredHideTagRefines(journal.hideTagRefines)\r\n            }\r\n        }\r\n    }\r\n\r\n    return { view: view }\r\n}\r\n","import m from \"mithril\"\nimport { search } from \"..\"\nimport { Caret } from \"../types\"\nimport { getCaretPosition, setCaretPosition, escapeHtml } from \"../helpers\"\n\nexport function searchbar() {\n    var caret: Caret = { el: null, pos: null }\n\n    function view() {\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(search.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\")\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onSearchInput(event),\n            onupdate: () => onSearchUpdate(),\n            onkeydown: (event: any) => onSearchKeydown(event)\n        }\n    }\n\n    function onSearchInput(event: any) {\n        let pos = getCaretPosition(event.target)\n        caret = (pos) ? { pos: pos[1], el: event.target } : { pos: null, el: null }\n        search.barQuery.raw = escapeHtml(event.target.innerText)\n    }\n\n    function onSearchUpdate() {\n        setCaretPosition(caret.el, caret.pos)\n        caret = { el: null, pos: null }\n    }\n\n    function onSearchKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => search.barQuery.raw = \"\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { journal, syncer } from \"..\"\r\nimport {\r\n    getStoredSpreadsheetUrls, getStoredSpreadsheetSheetId, setStoredSpreadsheetUrls, getTestMode\r\n} from \"../helpers\"\r\n\r\nconst scope = [\"https://www.googleapis.com/auth/spreadsheets\"].join(\" \")\r\nconst clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\r\n\r\nexport function googleAPI() {\r\n    var gapi_: MockGapi | typeof gapi\r\n\r\n    function gapiScriptSettings() {\r\n        return {\r\n            async: true, defer: true, src: \"https://apis.google.com/js/api.js\",\r\n            onload: () => {\r\n                gapi_ = (getTestMode() === TestMode.OFF) ? gapi : new MockGapi()\r\n                gapi_.load('auth2', initClient)\r\n            }\r\n        }\r\n    }\r\n\r\n    function initClient() {\r\n        gapi_.auth2.init({\r\n            scope: scope,\r\n            client_id: clientId\r\n        }).then(() => {\r\n            gapi_.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus)\r\n            updateSigninStatus(gapi_.auth2.getAuthInstance().isSignedIn.get())\r\n        })\r\n    }\r\n\r\n    async function updateSigninStatus(signedIn: boolean) {\r\n        journal.isSignedIn = signedIn\r\n        m.redraw()\r\n        if (journal.isSignedIn) {\r\n            let user = gapi_.auth2.getAuthInstance().currentUser.get()\r\n            syncer.user = user\r\n            let auth = user.getAuthResponse()\r\n            syncer.updateAuth(auth.access_token)\r\n            await initJournal()\r\n        } else {\r\n            journal.unload()\r\n        }\r\n    }\r\n\r\n    async function initJournal() {\r\n        let spreadsheetUrls = getStoredSpreadsheetUrls()\r\n        await journal.load(spreadsheetUrls)\r\n    }\r\n\r\n    function view() {\r\n        if (getTestMode() === TestMode.DEMO) {\r\n            journal.isSignedIn = true\r\n            journal.load(\"https://docs.google.com/spreadsheets/d/demo/edit\")\r\n            return []\r\n        } else {\r\n            return m(\"#googleApi\", [\r\n                (journal.showAddSpreadsheetTextbox) ? [spreadsheetsTextbox(), m(\"br\")] : [],\r\n                (journal.isSignedIn) ? addSpreadsheetButton() : [],\r\n                (journal.spreadsheet !== null) ? spreadsheetsSelect() : [],\r\n                (journal.isActive) ? sheetsSelect() : [],\r\n                signInOutButton(),\r\n                m(\"script\", gapiScriptSettings()),\r\n            ])\r\n        }\r\n    }\r\n\r\n    function signInOutButton() {\r\n        return (journal.isSignedIn)\r\n            ? m(\"button\", {\r\n                onclick: () => {\r\n                    if (getTestMode() === TestMode.RETURN_ROWS) { journal.unload() }\r\n                    gapi_.auth2.getAuthInstance().signOut()\r\n                }, class: \"authButton\"\r\n            }, \"Sign Out\")\r\n            : m(\"button\", { onclick: () => gapi_.auth2.getAuthInstance().signIn(), class: \"authButton\" }, \"Sign In\")\r\n    }\r\n\r\n    function addSpreadsheetButton() {\r\n        return m(\"button\", {\r\n            id: \"addSpreadsheet\",\r\n            onclick: async () => {\r\n                journal.showAddSpreadsheetTextbox = !journal.showAddSpreadsheetTextbox\r\n                if (!journal.showAddSpreadsheetTextbox) {\r\n                    let spreadsheetUrls = getStoredSpreadsheetUrls()\r\n                    await journal.load(spreadsheetUrls)\r\n                }\r\n            },\r\n        }, (journal.showAddSpreadsheetTextbox) ? \" ✓ \" : \"+/-\")\r\n    }\r\n\r\n    function spreadsheetsTextbox() {\r\n        return m(\"textarea\", {\r\n            id: \"spreadsheetURLs\",\r\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n            value: getStoredSpreadsheetUrls(),\r\n            oninput: (event: any) => setStoredSpreadsheetUrls(event.target.value),\r\n        })\r\n    }\r\n\r\n    function spreadsheetsSelect() {\r\n        return m(\"select\", {\r\n            onchange: (event: any) => {\r\n                let id = event.target.value\r\n                journal.switch(id, getStoredSpreadsheetSheetId(id))\r\n            },\r\n            id: \"spreadsheetSelect\",\r\n        }, [\r\n            Array.from(journal.spreadsheets).map(([id]) => [\r\n                m(\"option\", {\r\n                    value: id,\r\n                    selected: journal.spreadsheet!.id === id\r\n                }, id.substr(id.length - 6))\r\n            ])\r\n        ])\r\n    }\r\n\r\n    function sheetsSelect() {\r\n        return m(\"select\", {\r\n            onchange: (event: any) => {\r\n                journal.switch(journal.spreadsheet!.id, parseInt(event.target.value))\r\n                m.redraw()\r\n            },\r\n            id: \"sheetSelect\",\r\n        }, [\r\n            Array.from(journal.spreadsheet!.sheets).map(([id, sheet]) => [\r\n                m(\"option\", {\r\n                    value: id,\r\n                    selected: journal.isActive && journal.spreadsheet!.sheet!.id === id\r\n                }, sheet.title)\r\n            ])\r\n        ])\r\n    }\r\n\r\n    return { view: view }\r\n}\r\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import {\n    GetRowsTask, UpdateRowTask, DeleteRowTask, GetSheetsTask, TestMode\n} from \"../types\"\n\nexport class SyncerTasksMock {\n\n    public extendSheetLength = 100\n\n    constructor(private testMode: TestMode) { }\n\n    public async getSheets(_token: string, _task: GetSheetsTask) {\n        if (this.testMode === TestMode.FAIL_GET_SPREADSHEET_SHEETS) {\n            throw new Error(\"mock fail\")\n        }\n        return [{\n            \"properties\": {\n                \"sheetId\": 0,\n                \"title\": \"Sheet1\",\n                \"index\": 0,\n                \"sheetType\": \"GRID\",\n                \"gridProperties\": {\n                    \"rowCount\": 100,\n                    \"columnCount\": 26\n                }\n            }\n        },\n        {\n            \"properties\": {\n                \"sheetId\": 1,\n                \"title\": \"Sheet2\",\n                \"index\": 0,\n                \"sheetType\": \"GRID\",\n                \"gridProperties\": {\n                    \"rowCount\": 100,\n                    \"columnCount\": 26\n                }\n            }\n        }]\n    }\n\n    public async getRows(_token: string, _task: GetRowsTask) {\n        if (this.testMode === TestMode.FAIL_GET_RANGE) {\n            throw new Error(\"mock fail\")\n        } else if (this.testMode === TestMode.RETURN_ROWS) {\n            return [\"aaa\", \"bbb\", \"ccc\", \"@tag\", \"@key:value\"]\n        }\n        return []\n    }\n\n    public async updateRow(_token: string, _task: UpdateRowTask) {\n        if (this.testMode === TestMode.FAIL_UPDATE_RANGE) {\n            throw new Error(\"mock fail\")\n        }\n    }\n\n    public async deleteRow(_token: string, _task: DeleteRowTask) {\n        if (this.testMode === TestMode.FAIL_DELETE_ROW) {\n            throw new Error(\"mock fail\")\n        }\n    }\n\n}\n","import { Tag } from \"../classes\"\nimport m from \"mithril\"\nimport { journal, search, refines } from \"..\"\n\nexport function refinesPane() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        if (journal.hideTagRefines) { return [] }\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes(): m.Vnode {\n        return m(\".tagRefineWrap\", (refines.simple.size === 0)? [] : [\n            refineKeyVnode(simpleTagsHeader, refines.simple.size),\n            Array.from(refines.simple, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(refines.complex, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: search.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: Tag) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", { type: \"checkbox\", checked: (tag.val === null)\n                    ? search.refinesQuery.simpleKeys.has(tag.clean)\n                    : search.refinesQuery.vals.has(tag.clean) }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: Tag) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            search.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            search.refinesQuery.keys.has(key)\n                ? search.refinesQuery.keys.delete(key)\n                : search.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: Tag) {\n        if (tag.val === null) {\n            search.refinesQuery.simpleKeys.has(tag.clean)\n                ? search.refinesQuery.simpleKeys.delete(tag.clean)\n                : search.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            search.refinesQuery.vals.has(tag.clean)\n                ? search.refinesQuery.vals.delete(tag.clean)\n                : search.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { syncer, journal } from \"..\"\nimport { SyncerState } from \"../types\"\n\nexport function syncStateIndicator() {\n\n    function view() {\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        if (journal.spreadsheets.size === 0) { return }\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncer.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive...\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused.\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"All changes saved.\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive...\"\n                break\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncer.state)\n    }\n\n    function unpauseSync() {\n        if (syncer.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncer.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncer.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","export * from \"./shelfView\"\r\nexport * from \"./signinView\"\r\nexport * from \"./libraryView\"\r\nexport * from \"./journalView\"\r\n","import m from \"mithril\"\nimport { googleComponent, journalsComponent } from \"./components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}","import m from \"mithril\"\nimport { googleModel } from \"../../models\"\nimport { googleController } from \"../../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return { async: true, defer: true, src: googleModel.src, onload: () => { googleController.initGapi() }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n\n\n\n\n\n\n// function addSpreadsheetButton() {\n    //     return m(\"button\", {\n    //         id: \"addSpreadsheet\",\n    //         onclick: async () => {\n    //             journal.showAddSpreadsheetTextbox = !journal.showAddSpreadsheetTextbox\n    //             if (!journal.showAddSpreadsheetTextbox) {\n    //                 let spreadsheetUrls = getStoredSpreadsheetUrls()\n    //                 await journal.load(spreadsheetUrls)\n    //             }\n    //         },\n    //     }, (journal.showAddSpreadsheetTextbox) ? \" ✓ \" : \"+/-\")\n    // }\n\n    // function spreadsheetsTextbox() {\n    //     return m(\"textarea\", {\n    //         id: \"spreadsheetURLs\",\n    //         placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\n    //         value: getStoredSpreadsheetUrls(),\n    //         oninput: (event: any) => setStoredSpreadsheetUrls(event.target.value),\n    //     })\n    // }\n\n    // function spreadsheetsSelect() {\n    //     return m(\"select\", {\n    //         onchange: (event: any) => {\n    //             let id = event.target.value\n    //             journal.switch(id, getStoredSpreadsheetSheetId(id))\n    //         },\n    //         id: \"spreadsheetSelect\",\n    //     }, [\n    //         Array.from(journal.spreadsheets).map(([id]) => [\n    //             m(\"option\", {\n    //                 value: id,\n    //                 selected: journal.spreadsheet!.id === id\n    //             }, id.substr(id.length - 6))\n    //         ])\n    //     ])\n    // }\n\n    // function sheetsSelect() {\n    //     return m(\"select\", {\n    //         onchange: (event: any) => {\n    //             journal.switch(journal.spreadsheet!.id, parseInt(event.target.value))\n    //             m.redraw()\n    //         },\n    //         id: \"sheetSelect\",\n    //     }, [\n    //         Array.from(journal.spreadsheet!.sheets).map(([id, sheet]) => [\n    //             m(\"option\", {\n    //                 value: id,\n    //                 selected: journal.isActive && journal.spreadsheet!.sheet!.id === id\n    //             }, sheet.title)\n    //         ])\n    //     ])\n    // }\n","import { escapeHtml } from \"../helpers\"\n\nexport class TagModel {\n    public frq: number\n    public raw: string\n    public key: string\n    public flag: string\n    public clean: string\n    public cleanKey: string\n    public val: string | null\n    public cleanVal: string | null\n    public separator: string | null\n\n    constructor(raw: string, flag: string, key: string, separator: string | undefined | null, val: string | undefined | null) {\n        this.frq = 1\n        this.raw = raw\n        this.flag = flag\n        this.key = key\n        this.separator = (separator !== undefined) ? separator : null\n        this.val = (val !== undefined) ? val : null\n        this.clean = this.cleanTagString(this.raw)\n        this.cleanKey = this.cleanTagString(this.key)\n        this.cleanVal = (this.val !== null) ? this.cleanTagString(this.val) : null\n    }\n\n    public renderKey(): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + ((this.separator) ? this.separator : \"\")\n            + \"')\\\" class=\\\"\"\n            + ((this.separator) ? \"tagKey\" : (this.val === null) ? \"simpleTag\" : \"roundTagVal\")\n            + \"\\\">\"\n            + this.flag\n            + this.key\n            + \"</span>\"\n    }\n\n    public renderVal(hideKeys?: boolean): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + this.separator\n            + this.cleanVal?.replace(/'/, \"\\\\'\")\n            + \"')\\\" class=\\\"\"\n            + ((hideKeys) ? \"roundTagVal\" : \"tagVal\")\n            + \"\\\">\"\n            + ((hideKeys) ? \"\" : this.separator)\n            + (this.val || \"\")\n            + \"</span>\"\n    }\n\n    public render(hideKeys?: boolean): string {\n        if (this.separator) {\n            return (hideKeys) ? this.renderVal(hideKeys) : this.renderKey() + this.renderVal(hideKeys)\n        } else {\n            return this.renderKey()\n        }\n    }\n\n    private cleanTagString(str: string) {\n        str = escapeHtml(str)\n        str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\n        str = str.toLowerCase()\n        return str\n    }\n}\n","import { TagModel } from \".\"\nimport { tagPattern, escapeHtml } from \"../helpers\"\n\nexport type TagsMap = Map<string, TagModel>\n\ninterface TagMatch {\n    tag: TagModel,\n    match: RegExpMatchArray\n}\n\nexport interface IndexedEntry {\n    idx: number,\n    entry: EntryModel,\n}\n\nexport class EntryModel {\n    public tags: TagsMap = new Map()\n    public hovered: boolean = false\n    public focused: boolean = false\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public savedClean: string = \"\"\n    private tagMatches: TagMatch[] = []\n    public readableRendered: string = \"\"\n    private rawText: string = \"\"\n    private savedText: string = \"\"\n\n    constructor(raw?: string | undefined, saved?: string | undefined) {\n        this.raw = (raw) ? raw : \"\"\n        this.saved = (saved !== undefined) ? saved : this.raw\n    }\n\n    public get saved(): string {\n        return this.savedText\n    }\n    public set saved(str: string) {\n        this.savedText = str\n        this.savedClean = str.toLowerCase()\n        this.tags = this.getTags(this.tagMatches)\n    }\n\n    public get raw(): string {\n        return this.rawText\n    }\n    public set raw(raw: string) {\n        this.rawText = raw\n        this.clean = this.raw.toLowerCase()\n        let safe = escapeHtml(this.rawText)\n        this.tokens = this.getTokens(this.clean)\n        this.tagMatches = this.getTagMatches(safe)\n        this.rendered = this.render(safe, this.tagMatches)\n        this.readableRendered = this.render(safe, this.tagMatches, true)\n    }\n\n    private render(text: string, tagMatches: TagMatch[], hideKeys?: boolean): string {\n        for (let { tag, match } of tagMatches) {\n            let chars = text.split(\"\")\n            chars.splice(match.index!, match[0].length, tag.render(hideKeys))\n            text = chars.join(\"\")\n        }\n        return text\n    }\n\n    private getTags(tagMatches: TagMatch[]): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let { tag } of tagMatches) {\n            if (tags.has(tag.clean)) {\n                tags.get(tag.clean)!.frq += 1\n            } else {\n                tags.set(tag.clean, tag)\n            }\n        }\n        return tags\n    }\n\n    private getTagMatches(text: string): TagMatch[] {\n        let tagMatches = []\n        let matchesIter = text.matchAll(tagPattern)\n        for (let match of matchesIter) {\n            let tag = new TagModel(match[0], match[1], match[2], match[3], match[4])\n            tagMatches.push({ tag: tag, match: match })\n        }\n        tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n        return tagMatches\n    }\n\n    private getTokens(text: string): string[] {\n        let tokens = text.split(\" \")\n        return tokens.filter(token => {\n            return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n        })\n    }\n\n}\n","export class ShelfFactory {\n\n    public createShelf(id: string, sheetIds: number[]) {\n        return new ShelfModel(id, sheetIds)\n    }\n\n}\n\nexport class ShelfModel {\n\n    public id: string\n    public journalIds: number[]\n\n    constructor(id: string, journalIds: number[]) {\n        this.id = id\n        this.journalIds = journalIds\n    }\n\n    // TODO: add/remove journals\n\n}\n","import { MockGoogleUser } from \"../mocks\"\r\nimport { SyncerTask, SyncerState } from \"../types\"\r\n\r\nclass SyncerModel {\r\n    public worker: Worker\r\n    private requestsCounter = 0\r\n    private requests: Map<string, Function> = new Map()\r\n    public state: SyncerState = SyncerState.DOWNLOADING\r\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | null = null\r\n\r\n    constructor() {\r\n        this.worker = new Worker(\"./js/syncWebWorker.js\")\r\n        this.worker.onmessage = (msg: MessageEvent) => this.onMessage(msg)\r\n    }\r\n\r\n    public pushSyncerTask<T extends SyncerTask>(task: T): Promise<T> {\r\n        let id = `task-${this.requestsCounter++}`\r\n        return new Promise((resolve, reject) => {\r\n            this.requests.set(id, ({ task, error }: { task: T, error: Error }) => {\r\n                (error) ? reject(error) : resolve(task)\r\n            })\r\n            this.worker.postMessage({ id, task })\r\n        })\r\n    }\r\n\r\n    private onMessage<T extends SyncerTask>(msg: MessageEvent) {\r\n        let { id, task, error }: { id: string | null, task: T, error: Error } = msg.data\r\n        if (id !== null && this.requests.has(id)) {\r\n            this.requests.get(id)!({ task, error })\r\n            this.requests.delete(id)\r\n        } else {\r\n            // Handle tasks sent from the sync worker that were not\r\n            // invoked from this here and therefore have no id.\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const syncerModel = new SyncerModel()\r\n","import { MockGapi } from \"../mocks\"\n\nclass GoogleModel {\n\n    public src: string\n    public scope: string\n    public clientId: string\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n\n    constructor(isSignedIn?: boolean) {\n        this.isSignedIn = isSignedIn\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\"https://www.googleapis.com/auth/spreadsheets\"].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n}\n\nexport const googleModel = new GoogleModel()\n","import { EntryModel, TagsMap, TagModel } from \".\"\n\nexport class JournalModel {\n    public id: number\n    public tags: TagsMap\n    public title: string\n    public shelfId: string\n    public entries: EntryModel[]\n\n    constructor(id: number, shelfId: string, title: string, rows: string[]) {\n        this.id = id\n        this.title = title\n        this.tags = new Map()\n        this.shelfId = shelfId\n        this.entries = rows.map(row => new EntryModel(row))\n    }\n\n    private buildTags(): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let entry of Array.from(this.entries.values()).reverse()) {\n            for (let [key, tag] of entry.tags) {\n                if (tags.has(key)) {\n                    tags.get(key)!.frq += tag.frq\n                } else {\n                    tags.set(key, new TagModel(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n                }\n            }\n        }\n        return tags\n    }\n\n    public addEntry(idx: number, content: string) {\n        this.entries.splice(idx, 0, new EntryModel(content))\n        this.tags = this.buildTags()\n    }\n\n    public updateEntry(idx: number, content: string) {\n        let entry = this.entries[idx]\n        if (entry.saved === content) { return }\n        entry.saved = content\n        this.tags = this.buildTags()\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)[0]\n        this.tags = this.buildTags()\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        let entry = this.entries[fromIdx]\n        this.entries.splice(fromIdx, 1)\n        this.entries.splice(toIdx, 0, entry)\n    }\n\n}\n","import { syncerController } from \"../controllers\"\nimport { getStoredSpreadsheetUrls, spreadsheetIdPattern } from \"../helpers\"\n\nclass LibraryFactory {\n\n    public createLibrary() {\n        let spreadsheetUrlsString = getStoredSpreadsheetUrls()\n        let spreadsheetIds = this.getSpreadsheetIdsFromUrls(spreadsheetUrlsString)\n        this.getSpreadsheetsMetadata(spreadsheetIds)\n        return new LibraryModel(spreadsheetIds)\n    }\n\n    private getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n        let ids: string[] = []\n        if (urls) {\n            let matches = Array.from(urls.matchAll(spreadsheetIdPattern))\n            matches.forEach(match => ids.push(match[1]))\n        }\n        return ids\n    }\n\n    private getSpreadsheetsMetadata(spreadsheetIds: string[]) {\n        Promise.all(spreadsheetIds.map(\n            spreadsheetId => syncerController.getSheets(spreadsheetId)\n        )).then(tasks => tasks.forEach(task => console.log(task)))\n    }\n\n}\n\nclass LibraryModel {\n\n    public shelfIds: string[]\n\n    constructor(shelfIds: string[]) {\n        this.shelfIds = shelfIds\n    }\n\n    // TODO: add/remove shelves\n\n}\n\nexport const libraryModel = new LibraryFactory().createLibrary()\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { googleModel } from \"../models\"\r\nimport { getTestMode } from \"../helpers\"\r\n\r\nexport const googleController = {\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    initGapi: initGapi,\r\n}\r\n\r\nfunction signOut() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\r\n}\r\n\r\nfunction signIn() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\r\n}\r\n\r\nfunction initGapi() {\r\n    let gapi_ = (getTestMode() === TestMode.OFF) ? gapi : new MockGapi()\r\n    gapi_.load('auth2', () => {\r\n        gapi_.auth2.init({\r\n            scope: googleModel.scope, client_id: googleModel.clientId\r\n        }).then(() => {\r\n            gapi_.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\r\n            isSignedIn((gapi_.auth2.getAuthInstance().isSignedIn.get()))\r\n        })\r\n    })\r\n    googleModel.gapi_ = gapi_\r\n}\r\n\r\nfunction isSignedIn(signedIn: boolean) {\r\n    googleModel.isSignedIn = signedIn\r\n    m.redraw()\r\n\r\n    // journal.isSignedIn = signedIn\r\n    // m.redraw()\r\n    // if (journal.isSignedIn) {\r\n    //     let user = gapi_.auth2.getAuthInstance().currentUser.get()\r\n    //     syncer.user = user\r\n    //     let auth = user.getAuthResponse()\r\n    //     syncer.updateAuth(auth.access_token)\r\n    //     await initJournal()\r\n    // } else {\r\n    //     journal.unload()\r\n    // }\r\n\r\n    // async function initJournal() {\r\n    //     let spreadsheetUrls = getStoredSpreadsheetUrls()\r\n    //     await journal.load(spreadsheetUrls)\r\n    // }\r\n\r\n    // if (getTestMode() === TestMode.DEMO) {\r\n    //     journal.isSignedIn = true\r\n    //     journal.load(\"https://docs.google.com/spreadsheets/d/demo/edit\")\r\n    //     return []\r\n    // }\r\n}\r\n","import { syncerModel } from \"../models\"\r\nimport { SyncerTaskType, TestMode, GetRowsTask, GetSheetsTask } from \"../types\"\r\n\r\nexport const syncerController = {\r\n    updateTestMode: updateTestMode,\r\n    updateAuth: updateAuth,\r\n    getSheets: getSheets,\r\n    getRows: getRows,\r\n    deleteRow: deleteRow,\r\n    updateRow: updateRow,\r\n    unpause: unpause,\r\n}\r\n\r\nasync function updateTestMode(testMode: TestMode) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerTaskType.TEST_MODE_UPDATE,\r\n        testMode: testMode,\r\n    })\r\n}\r\n\r\nasync function updateAuth(token: string) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerTaskType.AUTH_UPDATE,\r\n        token: token,\r\n    })\r\n}\r\n\r\nasync function getSheets(spreadsheetId: string) {\r\n    let task: GetSheetsTask = {\r\n        type: SyncerTaskType.GET_SHEETS,\r\n        spreadsheetId: spreadsheetId,\r\n    }\r\n    let result = await syncerModel.pushSyncerTask(task)\r\n    return result\r\n}\r\n\r\nasync function getRows(spreadsheetId: string, sheetId: number, sheetTitle: string) {\r\n    let task: GetRowsTask = {\r\n        type: SyncerTaskType.GET_ROWS,\r\n        spreadsheetId: spreadsheetId,\r\n        sheetTitle: sheetTitle,\r\n        sheetId: sheetId,\r\n    }\r\n    let result = await syncerModel.pushSyncerTask(task)\r\n    return result\r\n}\r\n\r\nasync function deleteRow(idx: number, spreadsheetId: string, sheetId: number) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerTaskType.DELETE_ROW,\r\n        spreadsheetId: spreadsheetId,\r\n        sheetId: sheetId,\r\n        idx: idx,\r\n    })\r\n}\r\n\r\nasync function updateRow(idx: number, spreadsheetId: string, sheetId: number, sheetTitle: string, content: string) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerTaskType.UPDATE_ROW,\r\n        spreadsheetId: spreadsheetId,\r\n        sheetTitle: sheetTitle,\r\n        sheetId: sheetId,\r\n        content: content,\r\n        idx: idx,\r\n    })\r\n}\r\n\r\nasync function unpause() {\r\n    return await syncerModel.pushSyncerTask({ type: SyncerTaskType.UNPAUSE })\r\n}","import m from \"mithril\"\nimport { libraryModel } from \"../../models\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        return m(\"#shelves\", libraryModel.shelfIds\n            .map(shelfId => m(\"li\", m(\"a\", { href: `#/library/${shelfId}` }, shelfId)))\n        )\n    }\n\n    return {\n        view: view,\n    }\n\n}","import m from \"mithril\"\n\n\nexport function journalsComponent() {\n\n    function view() {\n        let shelfId: string = m.route.param(\"shelfId\")\n        return m(\"#journals\", [\"0\", \"123\", \"456\"]\n            .map(journalId => m(\"li\", m(\"a\", { href: `#/library/${shelfId}/${journalId}` }, journalId)))\n        )\n    }\n\n    return {\n        view: view,\n    }\n\n}","import m from \"mithril\"\r\nimport { googleModel } from \"../models\"\r\nimport { googleComponent } from \"./components\"\r\n\r\nexport function signinView() {\r\n\r\n    function view() {\r\n        return m(\"#auth\", [\r\n            m(googleComponent),\r\n        ])\r\n    }\r\n\r\n    function onupdate() {\r\n        if (googleModel.isSignedIn) {\r\n            window.location.hash = \"/library\" // TODO: redirect to correct place\r\n        }\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n\r\n}","import m from \"mithril\"\nimport { googleComponent, shelvesComponent } from \"./components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}","import m from \"mithril\"\nimport { googleComponent } from \"./components\"\n\nexport function journalView() {\n\n    function view() {\n        let shelfId = m.route.param(\"shelfId\")\n        let journalId = m.route.param(\"journalId\")\n\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(\"span\", `Shelf: ${shelfId}, Journal: ${journalId}`)\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}"],"sourceRoot":""}