{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"m\"","webpack:///./src/types/index.ts","webpack:///./src/controllers/index.ts","webpack:///./src/index.ts","webpack:///./src/factories/index.ts","webpack:///./src/components/index.ts","webpack:///./src/models/index.ts","webpack:///./src/errors/index.ts","webpack:///./src/controllers/urlController.ts","webpack:///./src/types/errors.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncer.ts","webpack:///./src/controllers/entryController.ts","webpack:///./src/models/SearchModel.ts","webpack:///./src/controllers/syncerController.ts","webpack:///./src/controllers/journalController.ts","webpack:///./src/views/index.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/components/googleComponent.ts","webpack:///./src/controllers/textController.ts","webpack:///./src/factories/tagFactory.ts","webpack:///./src/models/UrlModel.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/models/AppStateModel.ts","webpack:///./src/models/ServiceWorkerModel.ts","webpack:///./src/errors/FriendlyError.ts","webpack:///./src/factories/shelfFactory.ts","webpack:///./src/factories/entryFactory.ts","webpack:///./src/controllers/caretController.ts","webpack:///./src/controllers/searchController.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/controllers/libraryController.ts","webpack:///./src/controllers/appStateController.ts","webpack:///./src/components/composeComponent.ts","webpack:///./src/components/entriesComponent.ts","webpack:///./src/components/shelvesComponent.ts","webpack:///./src/components/refinesComponent.ts","webpack:///./src/components/testModeComponent.ts","webpack:///./src/components/journalsComponent.ts","webpack:///./src/components/syncStateComponent.ts","webpack:///./src/components/searchbarComponent.ts","webpack:///./src/components/addShelvesComponent.ts","webpack:///./src/components/breadcrumbComponent.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts","webpack:///./src/views/testModeView.ts","webpack:///./src/models/ErrorsModel.ts","webpack:///./src/controllers/errorsController.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","appStateModel","AppStateModel","getInstance","serviceWorkerModel","ServiceWorkerModel","googleModel","GoogleModel","syncerModel","SyncerModel","libraryModel","LibraryModel","urlModel","UrlModel","searchModel","SearchModel","root","document","getElementById","route","signinView","testModeView","libraryView","shelfView","journalView","getActiveShelf","id","shelfId","undefined","shelves","urlController","redirect","hash","getActiveJournal","journalId","shelf","journals","getBreadcrumbTrail","breadcrumb","split","filter","crumb","length","trail","slice","join","title","parseInt","push","href","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","pause","super","this","payload","error","type","SyncerPayloadType","ERROR","SearchType","TestMode","str","values","includes","SyncerResponseType","SyncerState","tagPattern","entryController","save","entry","content","saved","savedClean","textController","clean","tags","tagMatches","Map","tag","has","frq","set","getTags","update","raw","safe","escape","tokens","text","token","trim","matchesIter","matchAll","match","tagFactory","createTag","sort","a","b","index","getTagMatches","rendered","chars","splice","render","searchType","NONE","simpleRefines","complexRefines","barQuery","entryFactory","createBaseEntry","refinesQuery","keys","Set","vals","simpleKeys","instance","Array","from","worker","Worker","updateAuth","pushSyncerTask","AUTH_UPDATE","onmessage","msg","data","requests","delete","SYNC_STATE","state","redraw","errorsController","add","message","TOKEN_REQUEST","onMessage","syncerController","unpause","UNPAUSE","getRows","journalTitle","GET_ROWS","spreadsheetId","sheetTitle","sheetId","rows","createRow","idx","CREATE_ROW","deleteRow","DELETE_ROW","updateRow","UPDATE_ROW","updateTestMode","testMode","TEST_MODE_UPDATE","getSpreadsheet","GET_SPREADSHEET","spreadsheet","addEntry","journal","createJournalEntry","createEntry","buildTags","entries","reverse","flag","separator","val","searchController","buildRefines","journalController","catch","updateEntry","moveEntry","fromIdx","toIdx","deleteEntry","loadEntries","keepJournal","forEach","loaded","unloadEntries","then","finally","view","googleComponent","testModeComponent","syncStateComponent","breadcrumbComponent","journalsComponent","isSignedIn","onclick","googleController","signOut","class","signIn","async","defer","src","onload","initGapi","unsafe","replace","toLowerCase","cleanTagString","endsWith","substring","cleanKey","cleanVal","renderedKey","renderedVal","TagModel","window","location","hash_","URL","url","searchParams","param","BaseEntryModel","entryId","requestsCounter","INITIALIZING","Promise","resolve","reject","postMessage","scope","clientId","user","getAuthResponse","access_token","shelfIds","ids","localStorage","removeItem","setItem","getItem","OFF","errors","ErrorsModel","navigator","addEventListener","serviceWorker","register","FriendlyError","shelfFactory","createShelf","properties","sheets","ShelfModel","sheet","JournalModel","getJournals","entryCounter","JournalEntryModel","caretController","getCaretPosition","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","search","query","sourceEntries","filteredEntries","AND","every","OR","some","startsWith","reset","cleanRefines","map","updateSearchbar","signedIn","gapi_","auth2","getAuthInstance","currentUser","libraryController","loadShelves","removeShelves","gapi","MockGapi","load","init","client_id","listen","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","MockIsSignedIn","spreadsheetIdPattern","reloadLoaded","getSpreadsheetIdsFromUrls","urls","addShelves","appStateController","instanceOfTestMode","caret","composePrefixEntry","composeContentEntry","composeSuffixEntry","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","extraSettings","baseSettings","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","composeKeydown","oninput","target","composeInput","onupdate","assign","trust","entriesList","entryIdx","createEntryVnode","entryContent","deleteEntryButton","entryVnode","blur","onEntryKeydown","onEntryInput","onEntryUpdate","onblur","onEntryBlur","entryContentSettings","delShelfButton","retryShelfLoadButton","shelfNode","expanded","simpleRefinesVnodes","size","refineKeyVnode","refineValVnode","count","metaKey","ctrlKey","refineTagKeyOnClick","tagRefineKeySettings","checked","tagRefineValSettings","tagClass","hideClass","refineTagValOnClick","stopDemoButton","DEMO","link","journalList","syncStateText","txt","class_","stateColorClass","DOWNLOADING","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","placeholder","onSearchInput","onSearchKeydown","newShelfUrls","addingShelves","addShelvesMessage","addShelvesButton","addShelvesTextbox","addShelvesComponent","shelvesComponent","searchbarComponent","refinesComponent","entriesComponent","composeComponent","oninit","getParam","console","remove"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = m;","export * from \"./caret\"\nexport * from \"./errors\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncer\"\n","export * from \"./urlController\"\r\nexport * from \"./textController\"\r\nexport * from \"./entryController\"\r\nexport * from \"./caretController\"\r\nexport * from \"./searchController\"\r\nexport * from \"./googleController\"\r\nexport * from \"./syncerController\"\r\nexport * from \"./errorsController\"\r\nexport * from \"./libraryController\"\r\nexport * from \"./journalController\"\r\nexport * from \"./appStateController\"\r\n","import m from \"mithril\"\nimport { signinView, libraryView, shelfView, journalView, testModeView } from \"./views\"\nimport {\n    ServiceWorkerModel, SyncerModel, LibraryModel, GoogleModel, UrlModel, SearchModel, AppStateModel\n} from \"./models\"\n\nexport const appStateModel = AppStateModel.getInstance()\nexport const serviceWorkerModel = ServiceWorkerModel.getInstance()\nexport const googleModel = GoogleModel.getInstance()\nexport const syncerModel = SyncerModel.getInstance()\nexport const libraryModel = LibraryModel.getInstance()\nexport const urlModel = UrlModel.getInstance()\nexport const searchModel = SearchModel.getInstance()\n\nconst root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,        // TODO switch to be about page\n        \"/demo\": testModeView,\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/setTestMode/:testMode\": testModeView,\n        \"/library/:shelfId/:journalId\": journalView,\n    })\n}\n","export * from \"./tagFactory\"\nexport * from \"./shelfFactory\"\nexport * from \"./entryFactory\"\n","export * from \"./googleComponent\"\nexport * from \"./composeComponent\"\nexport * from \"./entriesComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./refinesComponent\"\nexport * from \"./testModeComponent\"\nexport * from \"./journalsComponent\"\nexport * from \"./syncStateComponent\"\nexport * from \"./searchbarComponent\"\nexport * from \"./addShelvesComponent\"\nexport * from \"./breadcrumbComponent\"","export * from \"./UrlModel\"\r\nexport * from \"./TagModel\"\r\nexport * from \"./EntryModel\"\r\nexport * from \"./ShelfModel\"\r\nexport * from \"./SyncerModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./GoogleModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./JournalModel\"\r\nexport * from \"./LibraryModel\"\r\nexport * from \"./AppStateModel\"\r\nexport * from \"./ServiceWorkerModel\"\r\n","export * from \"./FriendlyError\"\n","import m from \"mithril\"\nimport { libraryModel, urlModel } from \"..\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport const urlController = {\n    redirect: redirect,\n    getActiveShelf: getActiveShelf,\n    getActiveJournal: getActiveJournal,\n    getBreadcrumbTrail: getBreadcrumbTrail,\n}\n\nfunction redirect(hash: string) {\n    urlModel.hash = hash\n}\n\nfunction getActiveShelf(): ShelfModel | undefined {\n    let id = urlModel.shelfId\n    if (id === undefined) return undefined\n    return libraryModel.shelves.get(id)\n}\n\nfunction getActiveJournal(): JournalModel | undefined {\n    let id = urlModel.journalId\n    let shelf = getActiveShelf()\n    if (id === undefined || shelf === undefined) return undefined\n    return shelf.journals.get(id)\n}\n\nfunction getBreadcrumbTrail() {\n    let breadcrumb: m.Vnode[] = []\n    let hash = urlModel.hash.split(\"?\")[0].split(\"/\").filter(crumb => crumb !== \"#\" && crumb !== \"\")\n    let shelfId: string | undefined = undefined\n    for (let i = 0; i < hash.length; i++) {\n        let crumb = hash[i]\n        let trail = \"#/\" + hash.slice(0, i + 1).join(\"/\")\n        if (i === 2) {\n            shelfId = crumb\n            crumb = libraryModel.shelves.get(crumb)?.title || crumb\n        } else if (i === 3 && shelfId !== undefined) {\n            crumb = libraryModel.shelves.get(shelfId)?.journals.get(parseInt(crumb))?.title || crumb\n        }\n        if (i !== 0) breadcrumb.push(m(\"span\", \" / \"))\n        if (i === hash.length - 1) {\n            breadcrumb.push(m(\"span\", `${crumb}`))\n        } else {\n            breadcrumb.push(m(\"a\", { href: trail }, `${crumb}`))\n        }\n    }\n    return breadcrumb\n}\n","import { ErrorPayload, SyncerPayloadType } from \".\"\n\nexport interface GapiErrorResponseBody {\n    code: number,\n    message: string,\n    status: string\n}\n\nexport interface GapiErrorResponse {\n    error: GapiErrorResponseBody\n}\n\nexport class SyncerError extends Error {\n    public payload: ErrorPayload\n\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean, pause?: boolean) {\n        super(errorMsg)\n        this.payload = {\n            pause: (pause !== undefined) ? pause : true,\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: SyncerPayloadType.ERROR,\n        }\n    }\n}\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"demomode\"\n}\n\nexport function instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload |\n    AuthUpdatePayload | UnpausePayload | SyncStatePayload | ErrorPayload |\n    TokenRequestPayload | CreateRowPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface CreateRowPayload {\n    type: SyncerPayloadType.CREATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n}\n","import { textController } from \".\"\nimport { tagFactory } from \"../factories\"\nimport { JournalEntryModel, TagModel, BaseEntryModel } from \"../models\"\n\nconst tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\n\nexport const entryController = {\n    save: save,\n    update: update,\n}\n\nfunction save(entry: JournalEntryModel, content: string) {\n    entry.saved = content\n    entry.savedClean = textController.clean(entry.saved)\n    entry.tags = getTags(entry.tagMatches)\n}\n\nfunction update(entry: BaseEntryModel | JournalEntryModel, content: string) {\n    entry.raw = content\n    entry.clean = textController.clean(content)\n    entry.safe = textController.escape(entry.raw)\n    entry.tokens = tokenize(entry.clean)\n    entry.tagMatches = getTagMatches(entry.safe)\n    entry.rendered = render(entry.safe, entry.tagMatches)\n}\n\nfunction render(text: string, tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): string {\n    for (let { tag, match } of tagMatches) {\n        let chars = text.split(\"\")\n        chars.splice(match.index!, match[0].length, tag.rendered)\n        text = chars.join(\"\")\n    }\n    return text\n}\n\nfunction getTags(tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): Map<string, TagModel> {\n    let tags: Map<string, TagModel> = new Map()\n    for (let { tag } of tagMatches) {\n        if (tags.has(tag.clean)) {\n            tags.get(tag.clean)!.frq += 1\n        } else {\n            tags.set(tag.clean, tag)\n        }\n    }\n    return tags\n}\n\nfunction getTagMatches(text: string): { tag: TagModel, match: RegExpMatchArray }[] {\n    let tagMatches = []\n    let matchesIter = text.matchAll(tagPattern)\n    for (let match of matchesIter) {\n        let tag = tagFactory.createTag(match[0], match[1], match[2], match[3], match[4])\n        tagMatches.push({ tag: tag, match: match })\n    }\n    tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n    return tagMatches\n}\n\nfunction tokenize(text: string): string[] {\n    let tokens = text.split(\" \")\n    return tokens.filter(token => {\n        return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n    })\n}\n","import { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { TagModel, BaseEntryModel } from \".\"\n\nexport class SearchModel {\n    private static instance: SearchModel\n\n    public searchType: SearchType = SearchType.NONE\n    public simpleRefines: Map<string, TagModel> = new Map()\n    public complexRefines: Map<string, TagModel[]> = new Map()\n    public barQuery: BaseEntryModel = entryFactory.createBaseEntry()\n    public refinesQuery: {\n        keys: Set<string>,\n        vals: Map<string, TagModel>,\n        simpleKeys: Map<string, TagModel>\n    } = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    private constructor() { }\n\n    static getInstance(): SearchModel {\n        return (!SearchModel.instance) ? new SearchModel() : SearchModel.instance\n    }\n\n    get query(): BaseEntryModel {\n        return entryFactory.createBaseEntry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n}\n","import m from \"mithril\"\r\nimport { errorsController } from \".\"\r\nimport { googleModel, syncerModel } from \"..\"\r\nimport { SyncerPayloadType, TestMode, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nconst worker = new Worker(\"./js/syncWebWorker.js\")\r\nworker.onmessage = (msg: MessageEvent) => onMessage(msg)\r\n\r\nexport const syncerController = {\r\n    unpause: unpause,\r\n    getRows: getRows,\r\n    createRow: createRow,\r\n    deleteRow: deleteRow,\r\n    updateRow: updateRow,\r\n    updateAuth: updateAuth,\r\n    updateTestMode: updateTestMode,\r\n    getSpreadsheet: getSpreadsheet,\r\n}\r\n\r\nasync function updateTestMode(testMode: TestMode) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.TEST_MODE_UPDATE,\r\n        testMode: testMode,\r\n    }, worker)\r\n}\r\n\r\nfunction updateAuth(token: string | undefined) {\r\n    if (token === undefined) return\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.AUTH_UPDATE,\r\n        token: token,\r\n    }, worker)\r\n}\r\n\r\nfunction getSpreadsheet(spreadsheetId: string) {\r\n    let spreadsheet: gapi.client.sheets.Spreadsheet | undefined = undefined\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_SPREADSHEET,\r\n        spreadsheetId: spreadsheetId,\r\n        spreadsheet: spreadsheet\r\n    }, worker)\r\n}\r\n\r\nasync function createRow(shelfId: string, journalId: number, idx: number) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.CREATE_ROW,\r\n        spreadsheetId: shelfId,\r\n        sheetId: journalId,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\nfunction getRows(shelfId: string, journalId: number, journalTitle: string) {\r\n    let rows: string[] = []\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_ROWS,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        rows: rows\r\n    }, worker)\r\n}\r\n\r\nasync function updateRow(shelfId: string, journalId: number, journalTitle: string, idx: number, content: string) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UPDATE_ROW,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        content: content,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\nasync function deleteRow(shelfId: string, journalId: number, idx: number) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.DELETE_ROW,\r\n        spreadsheetId: shelfId,\r\n        sheetId: journalId,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\n// TODO - NICE TO HAVE\r\n// async function moveRow() {}\r\n\r\nasync function unpause() {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UNPAUSE\r\n    }, worker)\r\n}\r\n\r\nfunction onMessage(msg: MessageEvent) {\r\n    let { id, payload, error }: { id: string | null, payload: SyncerPayload, error: ErrorPayload } = msg.data\r\n    if (id !== null && syncerModel.requests.has(id)) {\r\n        syncerModel.requests.get(id)!({ payload, error })\r\n        syncerModel.requests.delete(id)\r\n    } else if (payload !== undefined) {\r\n        switch (payload.type) {\r\n            case SyncerPayloadType.SYNC_STATE:\r\n                syncerModel.state = payload.state\r\n                m.redraw()\r\n                break\r\n            case SyncerPayloadType.ERROR:\r\n                errorsController.add(payload.error.message, payload.friendlyMsg)\r\n                break\r\n            case SyncerPayloadType.TOKEN_REQUEST:\r\n                updateAuth(googleModel.token)\r\n                break\r\n        }\r\n    } else {\r\n        errorsController.add(\"undefined payload\", \"An unexpected error occurred.\")\r\n    }\r\n}\r\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { tagFactory, entryFactory } from \"../factories\"\nimport { JournalEntryModel, JournalModel, TagModel } from \"../models\"\nimport { syncerController, searchController, entryController, errorsController } from \".\"\n\nexport const journalController = {\n    addEntry: addEntry,\n    createEntry: createEntry,\n    updateEntry: updateEntry,\n    moveEntry: moveEntry,\n    buildTags: buildTags,\n    deleteEntry: deleteEntry,\n    loadEntries: loadEntries,\n}\n\nfunction unloadOtherJournals(keepJournal: JournalModel) {\n    libraryModel.shelves.forEach(shelf => {\n        if (shelf === undefined) return\n        shelf.journals.forEach(journal => {\n            if (keepJournal.shelf.id !== journal.shelf.id || keepJournal.id !== journal.id) {\n                unloadEntries(journal)\n            }\n        })\n    })\n}\n\nfunction unloadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    journal.entries = []\n    journal.loaded = false\n}\n\nfunction loadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    unloadOtherJournals(journal)\n    syncerController.getRows(journal.shelf.id, journal.id, journal.title)\n        .then(payload => {\n            payload.rows.forEach((content, idx) => addEntry(journal, idx, content))\n            journal.loaded = true\n        })\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n}\n\nfunction addEntry(journal: JournalModel, idx: number, content: string | undefined) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    journal.createEntry(idx, entry)\n    entryController.save(entry, content)\n    buildTags(journal)\n}\n\nfunction createEntry(journal: JournalModel, idx: number, content?: string) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    journal.createEntry(idx, entry)\n    entryController.save(entry, content)\n    syncerController.createRow(journal.shelf.id, journal.id, idx)\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n    syncerController.updateRow(journal.shelf.id, journal.id, journal.title, idx, entry.raw)\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n    buildTags(journal)\n}\n\nfunction updateEntry(journal: JournalModel, entry: JournalEntryModel, idx: number, content: string) {\n    if (entry.saved === content) return\n    entryController.save(entry, content)\n    syncerController.updateRow(journal.shelf.id, journal.id, journal.title, idx, entry.raw)\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n    buildTags(journal)\n}\n\nfunction deleteEntry(journal: JournalModel, idx: number) {\n    journal.deleteEntry(idx)\n    syncerController.deleteRow(journal.shelf.id, journal.id, idx)\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n        })\n    buildTags(journal)\n}\n\nfunction moveEntry(journal: JournalModel, fromIdx: number, toIdx: number) {\n    if (fromIdx === toIdx) return\n    journal.moveEntry(fromIdx, toIdx)\n    buildTags(journal)\n}\n\nfunction buildTags(journal: JournalModel) {\n    let tags: Map<string, TagModel> = new Map()\n    let entries = Array.from(journal.entries.values())\n    for (let { entry } of entries.reverse()) {\n        for (let [key, tag] of entry.tags) {\n            if (tags.has(key)) {\n                tags.get(key)!.frq += tag.frq\n            } else {\n                tags.set(key, tagFactory.createTag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n            }\n        }\n    }\n    journal.tags = tags\n    searchController.buildRefines(journal)\n}\n","export * from \"./shelfView\"\r\nexport * from \"./signinView\"\r\nexport * from \"./libraryView\"\r\nexport * from \"./journalView\"\r\nexport * from \"./testModeView\"\r\n","import m from \"mithril\"\nimport {\n    googleComponent, journalsComponent, syncStateComponent, breadcrumbComponent,\n    testModeComponent,\n} from \"../components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { googleController } from \"../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return {\n            async: true,\n            defer: true,\n            src: googleModel.src,\n            onload: () => {\n                if (!googleModel.isSignedIn) {\n                    googleController.initGapi()\n                }\n            }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n","export const textController = {\n    escape: escape,\n    clean: clean,\n}\n\nfunction escape(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n\nfunction clean(content: string): string {\n    return content.toLowerCase()\n}\n","import { textController } from \"../controllers\"\r\nimport { TagModel } from \"../models\"\r\n\r\nexport const tagFactory = {\r\n    createTag: createTag\r\n}\r\n\r\nfunction createTag(raw: string, flag: string, key: string, separator?: string | null, val?: string | null) {\r\n    separator = (separator !== undefined) ? separator : null\r\n    val = (val !== undefined) ? val : null\r\n    let clean = cleanTagString(raw)\r\n    let cleanKey = cleanTagString(key)\r\n    let cleanVal = (val !== null) ? cleanTagString(val) : null\r\n\r\n    let renderedKey = \"<span onclick=\\\"tagOnClick(event, '\"\r\n        + flag\r\n        + cleanKey\r\n        + ((separator !== null) ? separator : \"\")\r\n        + \"')\\\" class=\\\"\"\r\n        + ((separator !== null) ? \"tagKey\" : (val === null) ? \"simpleTag\" : \"roundTagVal\")\r\n        + \"\\\">\"\r\n        + flag\r\n        + key\r\n        + \"</span>\"\r\n\r\n    let renderedVal = \"\"\r\n\r\n    if (separator !== undefined && separator !== null) {\r\n        renderedVal = \"<span onclick=\\\"tagOnClick(event, '\"\r\n            + flag\r\n            + cleanKey\r\n            + separator\r\n            + ((cleanVal !== null) ? cleanVal.replace(/'/, \"\\\\'\") : \"\")\r\n            + \"')\\\" class=\\\"tagVal\\\">\"\r\n            + separator\r\n            + ((val !== null) ? val : \"\")\r\n            + \"</span>\"\r\n    }\r\n\r\n    return new TagModel(raw, flag, key, separator, val, clean, cleanKey, cleanVal, renderedKey + renderedVal)\r\n\r\n}\r\n\r\nfunction cleanTagString(str: string) {\r\n    str = textController.escape(str)\r\n    str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\r\n    str = str.toLowerCase()\r\n    return str\r\n}\r\n","import m from \"mithril\"\n\nexport class UrlModel {\n    private static instance: UrlModel\n\n    private constructor() { }\n\n    static getInstance(): UrlModel {\n        return (!UrlModel.instance) ? new UrlModel() : UrlModel.instance\n    }\n\n    get hash(): string {\n        return window.location.hash\n    }\n    set hash(hash_: string) {\n        window.location.hash = hash_\n    }\n\n    get url(): URL {\n        return new URL(window.location.href)\n    }\n\n    public getParam(key: string): string | undefined {\n        let val = this.url.searchParams.get(key) || m.route.param(key)\n        if (val === \"\") return\n        return val\n    }\n\n    get shelfId(): string | undefined {\n        let id = m.route.param(\"shelfId\")\n        return (id === \"\") ? undefined : id\n    }\n\n    get journalId(): number | undefined {\n        let id = m.route.param(\"journalId\")\n        return (id === \"\") ? undefined : parseInt(id)\n    }\n\n}\n","export class TagModel {\n    public frq: number\n\n    constructor(\n        public raw: string,\n        public flag: string,\n        public key: string,\n        public separator: string | null,\n        public val: string | null,\n        public clean: string,\n        public cleanKey: string,\n        public cleanVal: string | null,\n        public rendered: string\n    ) { \n        this.frq = 1\n    }\n\n}\n","import { TagModel } from \".\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport class BaseEntryModel {\n    public raw: string = \"\"\n    public safe: string = \"\"\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public tags: Map<string, TagModel> = new Map()\n    public tagMatches: { tag: TagModel, match: RegExpMatchArray }[] = []\n}\n\nexport class JournalEntryModel extends BaseEntryModel {\n    readonly id: number\n    readonly shelf: ShelfModel\n    readonly journal: JournalModel\n\n    public saved: string = \"\"\n    public savedClean: string = \"\"\n\n    constructor(shelf: ShelfModel, journal: JournalModel, entryId: number) {\n        super()\n        this.id = entryId\n        this.shelf = shelf\n        this.journal = journal\n    }\n}\n","import { JournalModel } from \".\"\n\nexport class ShelfModel {\n    readonly id: string\n    readonly title: string | undefined\n\n    public error: string | undefined\n    public journals: Map<number, JournalModel> = new Map()\n\n    constructor(id: string, title?: string, error?: string) {\n        this.id = id\n        this.error = error\n        this.title = title\n    }\n\n}\n","import { SyncerState, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nexport class SyncerModel {\r\n    private static instance: SyncerModel\r\n\r\n    public requestsCounter: number\r\n    public requests: Map<string, Function>\r\n    public state: SyncerState\r\n\r\n    private constructor() {\r\n        this.requestsCounter = 0\r\n        this.requests = new Map()\r\n        this.state = SyncerState.INITIALIZING\r\n    }\r\n\r\n    static getInstance(): SyncerModel {\r\n        return (!SyncerModel.instance) ? new SyncerModel() : SyncerModel.instance\r\n    }\r\n\r\n    public pushSyncerTask<P extends SyncerPayload>(payload: P, worker: Worker): Promise<P> {\r\n        let id = `payload-${this.requestsCounter++}`\r\n        return new Promise((resolve, reject) => {\r\n            this.requests.set(id, ({ payload, error }: { payload: P, error: ErrorPayload }) => {\r\n                (error) ? reject(error) : resolve(payload)\r\n            })\r\n            worker.postMessage({ id, payload })\r\n        })\r\n    }\r\n}\r\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nexport class GoogleModel {\n    private static instance: GoogleModel\n\n    readonly src: string\n    readonly scope: string\n    readonly clientId: string\n\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    private constructor() {\n        this.isSignedIn = false\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\n            \"https://www.googleapis.com/auth/spreadsheets\",\n        ].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    static getInstance() {\n        return (!GoogleModel.instance) ? new GoogleModel() : GoogleModel.instance\n    }\n\n    get token(): string | undefined {\n        if (!this.user) return\n        let auth = this.user.getAuthResponse()\n        return auth.access_token\n    }\n}\n","import { ShelfModel } from \"./ShelfModel\"\nimport { JournalEntryModel, TagModel } from \".\"\n\nexport class JournalModel {\n    readonly id: number\n    readonly title: string\n    readonly shelf: ShelfModel\n\n    public loaded: boolean\n    public tags: Map<string, TagModel>\n    public entries: { id: number, entry: JournalEntryModel }[]\n\n    constructor(shelf: ShelfModel, journalId: number, journalTitle: string) {\n        this.entries = []\n        this.shelf = shelf\n        this.loaded = false\n        this.id = journalId\n        this.tags = new Map()\n        this.title = journalTitle\n    }\n\n    public createEntry(idx: number, entry: JournalEntryModel) {\n        this.entries.splice(idx, 0, { id: entry.id, entry })\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        this.entries.splice(toIdx, 0, this.entries.splice(fromIdx, 1)[0])\n    }\n\n}\n","import { ShelfModel } from \".\"\n\nexport class LibraryModel {\n    private static instance: LibraryModel\n    \n    public shelves: Map<string, ShelfModel | undefined>\n\n    private constructor() {\n        this.shelves = new Map()\n        this.shelfIds.forEach(id => this.shelves.set(id, undefined))\n    }\n\n    static getInstance() {\n        return (!LibraryModel.instance) ? new LibraryModel() : LibraryModel.instance\n    }\n\n    set shelfIds(ids: string[]) {\n        if (ids.length === 0) {\n            localStorage.removeItem(\"spreadsheetIds\")\n        } else {\n            localStorage.setItem(\"spreadsheetIds\", ids.join(\",\"))\n        }\n    }\n    get shelfIds(): string[] {\n        let ids = localStorage.getItem(\"spreadsheetIds\")\n        return (ids === null) ? [] : ids.split(\",\")\n    }\n}\n","import { TestMode } from \"../types\"\nimport { ErrorsModel } from \"./ErrorsModel\"\n\nexport class AppStateModel {\n    private static instance: AppStateModel\n\n    public testMode: TestMode\n    public errors: ErrorsModel\n\n    private constructor() {\n        this.testMode = TestMode.OFF\n        this.errors = ErrorsModel.getInstance()\n    }\n\n    static getInstance(): AppStateModel {\n        return (!AppStateModel.instance) ? new AppStateModel() : AppStateModel.instance\n    }\n}\n","import { errorsController } from \"../controllers\"\n\nexport class ServiceWorkerModel {\n    private static instance: ServiceWorkerModel\n\n    private constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            errorsController.add(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n\n    static getInstance(): ServiceWorkerModel {\n        return (!ServiceWorkerModel.instance) ? new ServiceWorkerModel() : ServiceWorkerModel.instance\n    }\n}\n","export class FriendlyError extends Error {\n    public msg: string\n    public friendlyMsg: string\n\n    constructor(errorMsg: string, friendlyMsg: string) {\n        super(errorMsg)\n        this.msg = errorMsg\n        this.friendlyMsg = friendlyMsg\n    }\n}\n","import { ShelfModel, JournalModel } from \"../models\"\n\nexport const shelfFactory = {\n    createShelf: createShelf,\n}\n\nfunction createShelf(spreadsheetId: string, spreadsheet?: gapi.client.sheets.Spreadsheet, error?: string): ShelfModel {\n    if (\n        spreadsheet !== undefined &&\n        spreadsheet.spreadsheetId !== undefined &&\n        spreadsheet.properties !== undefined &&\n        spreadsheet.properties.title !== undefined &&\n        spreadsheet.sheets !== undefined\n    ) {\n        let shelf = new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title)\n        getJournals(shelf, spreadsheet.sheets).forEach(journal => shelf.journals.set(journal.id, journal))\n        return shelf\n    }\n    return new ShelfModel(spreadsheetId, undefined, error)\n}\n\nfunction getJournals(shelf: ShelfModel, sheets: gapi.client.sheets.Sheet[]): JournalModel[] {\n    let journals: JournalModel[] = []\n    sheets.forEach(sheet => {\n        if (\n            sheet.properties !== undefined &&\n            sheet.properties.title !== undefined &&\n            sheet.properties.sheetId !== undefined\n        ) {\n            let journal = new JournalModel(\n                shelf, sheet.properties.sheetId, sheet.properties.title\n            )\n            if (journal === undefined) return\n            journals.push(journal)\n        }\n    })\n    return journals\n}\n","import { entryController } from \"../controllers\"\nimport { JournalEntryModel, ShelfModel, JournalModel, BaseEntryModel } from \"../models\"\n\nlet entryCounter = -1\n\nexport const entryFactory = {\n    createBaseEntry: createBaseEntry,\n    createJournalEntry: createJournalEntry\n}\n\nfunction createBaseEntry(content?: string) {\n    let entry = new BaseEntryModel()\n    entryController.update(entry, content || \"\")\n    return entry\n}\n\nfunction createJournalEntry(shelf: ShelfModel, journal: JournalModel, content: string) {\n    let entry = new JournalEntryModel(shelf, journal, entryCounter += 1)\n    entryController.update(entry, content)\n    return entry\n}\n","export const caretController = {\n    getCaretPosition: getCaretPosition,\n    setCaretPosition: setCaretPosition,\n}\n\nfunction node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nfunction getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nfunction setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","import { searchModel } from \"..\"\nimport { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { entryController } from \"./entryController\"\nimport { TagModel, JournalModel, JournalEntryModel } from \"../models\"\n\nexport const searchController = {\n    reset: reset,\n    buildRefines: buildRefines,\n    filteredEntries: filteredEntries,\n    updateSearchbar: updateSearchbar,\n}\n\nfunction updateSearchbar(content: string) {\n    entryController.update(searchModel.barQuery, content)\n}\n\nfunction reset() {\n    searchModel.searchType = SearchType.NONE\n    searchModel.barQuery = entryFactory.createBaseEntry()\n    searchModel.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n}\n\nfunction buildRefines(journal: JournalModel) {\n    let simpleRefines: Map<string, TagModel> = new Map()\n    let complexRefines: Map<string, TagModel[]> = new Map()\n\n    for (let tag of journal.tags.values()) {\n        if (tag.val === null) {\n            let key = `${tag.flag}${tag.cleanKey}`\n            if (!simpleRefines.has(key)) {\n                simpleRefines.set(key, tag)\n            }\n        } else {\n            let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n            if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n            complexRefines.get(key)!.push(tag)\n        }\n    }\n\n    searchModel.simpleRefines = new Map([...simpleRefines.entries()])\n    searchModel.complexRefines = new Map([...complexRefines.entries()].sort())\n\n    cleanRefines()\n}\n\nfunction cleanRefines() {\n    // Clean stale simple tag key (refine val) selections\n    for (let [key,] of searchModel.refinesQuery.simpleKeys) {\n        if (!searchModel.simpleRefines.has(key)) {\n            searchModel.refinesQuery.simpleKeys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag key selections\n    for (let key of searchModel.refinesQuery.keys) {\n        if (!searchModel.complexRefines.has(key)) {\n            searchModel.refinesQuery.keys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag val\n    for (let [key,] of searchModel.refinesQuery.vals) {\n        if (!Array.from(searchModel.complexRefines.values()).some(tags => tags.some(tag => tag.clean === key))) {\n            searchModel.refinesQuery.vals.delete(key)\n        }\n    }\n}\n\nfunction filteredEntries(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    if (searchModel.query.tokens.length === 0) {\n        searchModel.searchType = SearchType.NONE\n        filteredEntries = entries.map(({ entry }, idx) => { return { idx, entry } })\n    } else {\n        searchModel.searchType = SearchType.AND\n        filteredEntries = search(entries)\n        if (filteredEntries.length === 0) {\n            searchModel.searchType = SearchType.OR\n            filteredEntries = search(entries)\n        }\n    }\n    return filteredEntries\n}\n\nfunction search(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let query = searchModel.query\n    let sourceEntries = entries\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    for (let [idx, { entry }] of sourceEntries.entries()) {\n        switch (searchModel.searchType) {\n            case SearchType.AND:\n                if (query.tokens.every(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n            case SearchType.OR:\n                if (query.tokens.some(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n        }\n    }\n    return filteredEntries\n}\n\nfunction match(token: string, entry: JournalEntryModel) {\n\n    if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token.substring(1)) === undefined\n    } else if (token.startsWith(\"-\")) {\n        return !entry.savedClean.includes(token.substring(1))\n    } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token) !== undefined\n    } else {\n        return entry.savedClean.includes(token)\n    }\n}\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { googleModel, appStateModel } from \"..\"\r\nimport { syncerController, libraryController } from \"../controllers\"\r\nimport { urlController } from \"./urlController\"\r\n\r\nexport const googleController = {\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    initGapi: initGapi,\r\n}\r\n\r\nfunction signOut() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\r\n}\r\n\r\nfunction signIn() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\r\n}\r\n\r\nfunction initGapi() {\r\n    let gapi_ = (appStateModel.testMode === TestMode.OFF) ? gapi : new MockGapi()\r\n    googleModel.gapi_ = gapi_\r\n    googleModel.gapi_.load('auth2', () => {\r\n        googleModel.gapi_!.auth2.init({\r\n            scope: googleModel.scope, client_id: googleModel.clientId\r\n        }).then(() => {\r\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\r\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\r\n        })\r\n    })\r\n}\r\n\r\nasync function isSignedIn(signedIn: boolean) {\r\n    googleModel.isSignedIn = signedIn\r\n    if (googleModel.isSignedIn) {\r\n        googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\r\n        syncerController.updateAuth(googleModel.token)\r\n        libraryController.loadShelves()\r\n    } else {\r\n        libraryController.removeShelves()\r\n        urlController.redirect(\"/\")\r\n    }\r\n    m.redraw()\r\n}\r\n","export * from \"./Gapi\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { shelfFactory } from \"../factories\"\nimport { urlController, journalController, errorsController, syncerController } from \"../controllers\"\n\nconst spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n\nexport const libraryController = {\n    addShelves: addShelves,\n    loadShelves: loadShelves,\n    removeShelves: removeShelves,\n    getSpreadsheetIdsFromUrls: getSpreadsheetIdsFromUrls,\n}\n\nfunction addShelves(urls: string) {\n    let ids = getSpreadsheetIdsFromUrls(urls)\n    ids = ids.filter(id => !libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.set(id, undefined))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n    loadShelves(false, ids)\n}\n\nfunction removeShelves(ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    ids = ids.filter(id => libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.delete(id))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n}\n\nfunction loadShelves(reloadLoaded?: boolean, ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    if (reloadLoaded) {\n        ids.forEach(id => libraryModel.shelves.set(id, undefined))\n        m.redraw()\n    }\n    ids.filter(id => !libraryModel.shelves.get(id))\n        .forEach(id => syncerController.getSpreadsheet(id)\n        .then(payload => {\n            let shelf = shelfFactory.createShelf(id, payload.spreadsheet)\n            libraryModel.shelves.set(shelf.id, shelf)\n            let journal = urlController.getActiveJournal()\n            if (journal && journal.shelf === shelf) {\n                journalController.loadEntries(journal)\n            }\n        })\n        .catch((error: ErrorPayload) => {\n            errorsController.add(error.error.message, error.friendlyMsg)\n            let shelf = shelfFactory.createShelf(id, undefined, error.friendlyMsg)\n            libraryModel.shelves.set(id, shelf)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n    )\n}\n\nfunction getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n    let ids: string[] = []\n    if (urls) {\n        Array.from(urls.matchAll(spreadsheetIdPattern)).forEach(m => ids.push(m[1]))\n    }\n    return ids\n}\n","import { appStateModel } from \"..\"\nimport { syncerController } from \"./syncerController\"\nimport { TestMode, instanceOfTestMode } from \"../types\"\n\nexport const appStateController = {\n    updateTestMode: updateTestMode,\n}\n\nfunction updateTestMode(mode: TestMode | string | undefined) {\n    if (mode !== undefined && instanceOfTestMode(mode) && mode !== appStateModel.testMode) {\n        appStateModel.testMode = mode\n        syncerController.updateTestMode(mode)\n    }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { BaseEntryModel, JournalModel } from \"../models\"\nimport { urlController, journalController, caretController, entryController } from \"../controllers\"\n\nexport function composeComponent() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefixEntry = entryFactory.createBaseEntry()\n    const composeContentEntry = entryFactory.createBaseEntry()\n    const composeSuffixEntry = entryFactory.createBaseEntry()\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#compose\", [\n            m(\n                \"#prefix\",\n                composeNodeSettings(composePrefixEntry, journal, prefixSettings),\n                m.trust(composePrefixEntry.rendered)\n            ),\n            m(\n                \"#content\",\n                composeNodeSettings(composeContentEntry, journal, entrySettings),\n                m.trust(composeContentEntry.rendered)\n            ),\n            m(\n                \"#suffix\",\n                composeNodeSettings(composeSuffixEntry, journal, suffixSettings),\n                m.trust(composeSuffixEntry.rendered)\n            ),\n        ])\n    }\n\n    function getComposedContent() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: BaseEntryModel, journal: JournalModel, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event, journal),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any, journal: JournalModel) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let content = getComposedContent()\n            entryController.update(composeContentEntry, \"\")\n            let idx = journal.entries.length\n            journalController.createEntry(journal, idx, content)\n        }\n    }\n\n    function composeInput(event: any, entry: BaseEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function composeUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { JournalModel, JournalEntryModel } from \"../models\"\nimport {\n    caretController, urlController, entryController, journalController, searchController\n} from \"../controllers\"\n\nexport function entriesComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        let shelf = urlController.getActiveShelf()\n        const journal = urlController.getActiveJournal()\n        if (!shelf || !journal) return null\n\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesList(journal),\n        ])\n    }\n\n    function entriesList(journal: JournalModel) {\n        return searchController.filteredEntries(journal.entries)\n            .map(({ idx, entry }) => entryVnode(entry, idx))\n    }\n\n    function createEntryVnode(journal: JournalModel, idx: number): m.Vnode {\n        return m(\"button\", {\n            class: \"createEntry\",\n            id: `createEntry-${idx}`,\n            onclick: async () => journalController.createEntry(journal, idx)\n        }, \"ins\")\n    }\n\n    function entryVnode(entry: JournalEntryModel, entryIdx: number): m.Vnode {\n        return m(\".entryWrap\", { id: `entry-${entry.id}` }, [\n            createEntryVnode(entry.journal, entryIdx),\n            entryContent(entry, entryIdx),\n            deleteEntryButton(entry, entryIdx),\n            createEntryVnode(entry.journal, entryIdx+1),\n        ])\n    }\n\n    function deleteEntryButton(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: async () => journalController.deleteEntry(entry.journal, entryIdx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"div\", entryContentSettings(entry, entryIdx), m.trust(entry.rendered))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: JournalEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    async function onEntryBlur(event: any, entry: JournalEntryModel, entryIdx: number) {\n        event.redraw = false\n        journalController.updateEntry(entry.journal, entry, entryIdx, event.target.innerText)\n    }\n\n    function entryContentSettings(entry: JournalEntryModel, entryIdx: number) {\n        return {\n            id: `entry-${entry.id}-content`,\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, entryIdx),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ShelfModel } from \"../models\"\nimport { libraryController } from \"../controllers\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        let shelves = Array.from(libraryModel.shelves.entries())\n        return m(\"#shelvesList\", shelves.map(([id, shelf]) => shelfNode(id, shelf)))\n    }\n\n    function delShelfButton(id: string) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: () => libraryController.removeShelves([id])\n        }, \"del\")\n    }\n\n    function retryShelfLoadButton(id: string) {\n        return m(\"button\", {\n            onclick: () => libraryController.loadShelves(true, [id])\n        }, \"retry\")\n    }\n\n    function shelfNode(id: string, shelf: ShelfModel | undefined) {\n        if (shelf === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", id)\n            ])\n        } else if (shelf.error !== undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", `${id} ${shelf.error}`),\n                retryShelfLoadButton(id)\n            ])\n        } else {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"a\", { href: `#/library/${id}` }, shelf.title)\n            ])\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport function refinesComponent() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes() {\n        if (searchModel.simpleRefines.size === 0) return\n        return m(\".tagRefineWrap\", [\n            refineKeyVnode(simpleTagsHeader, searchModel.simpleRefines.size),\n            Array.from(searchModel.simpleRefines, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(searchModel.complexRefines, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: searchModel.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: TagModel) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", {\n                    type: \"checkbox\", checked: (tag.val === null)\n                        ? searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                        : searchModel.refinesQuery.vals.has(tag.clean)\n                }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: TagModel) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            searchModel.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            searchModel.refinesQuery.keys.has(key)\n                ? searchModel.refinesQuery.keys.delete(key)\n                : searchModel.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: TagModel) {\n        if (tag.val === null) {\n            searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                ? searchModel.refinesQuery.simpleKeys.delete(tag.clean)\n                : searchModel.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            searchModel.refinesQuery.vals.has(tag.clean)\n                ? searchModel.refinesQuery.vals.delete(tag.clean)\n                : searchModel.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { appStateModel } from \"..\"\nimport { TestMode } from \"../types\"\nimport { urlController } from \"../controllers\"\n\nexport function testModeComponent() {\n\n    function view() {\n        if (appStateModel.testMode !== TestMode.OFF) {\n            return m(\"#testMode\", [\n                m(\"span\", `${appStateModel.testMode} active `),\n                stopDemoButton()\n            ])\n        }\n        return\n    }\n\n    function stopDemoButton() {\n        if (appStateModel.testMode === TestMode.DEMO) {\n            return m(\"button\", { onclick: () => {\n                urlController.redirect(`/library/${TestMode.OFF}`)\n            }, class: \"stopDemo\" }, \"Start Now\")\n        }\n        return\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { urlController } from \"../controllers\"\n\nexport function journalsComponent() {\n\n    function view() {\n        return m(\"#journals\", journalList())\n    }\n\n    function journalList() {\n        let shelf = urlController.getActiveShelf()\n        if (shelf === undefined) {\n            urlController.redirect(\"/library\")\n            return\n        }\n        return Array.from(shelf.journals.values()).map(journal => {\n            let link = `#/library/${journal.shelf.id}/${journal.id}`\n            return m(\"li\", m(\"a\", { href: link }, journal.title))\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { SyncerState } from \"../types\"\nimport { syncerController } from \"../controllers\"\nimport { syncerModel, googleModel, libraryModel } from \"..\"\n\nexport function syncStateComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn || libraryModel.shelves.size === 0) return\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncerModel.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive...\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused.\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"Cloud synced.\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive...\"\n                break\n            case SyncerState.INITIALIZING:\n                txt = \"Initializing...\"\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncerModel.state)\n    }\n\n    function unpauseSync() {\n        if (syncerModel.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncerController.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncerModel.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { Caret } from \"../types\"\nimport { caretController, textController, searchController, urlController } from \"../controllers\"\n\n\nexport function searchbarComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(searchModel.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\")\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onSearchInput(event),\n            onupdate: () => onSearchUpdate(),\n            onkeydown: (event: any) => onSearchKeydown(event)\n        }\n    }\n\n    function onSearchInput(event: any) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        searchController.updateSearchbar(textController.escape(event.target.innerText))\n    }\n\n    function onSearchUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    function onSearchKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => searchController.updateSearchbar(\"\")\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { libraryController } from \"../controllers\"\r\nimport { libraryModel } from \"..\"\r\n\r\nexport function addShelvesComponent() {\r\n\r\n    let newShelfUrls = \"\"\r\n    let addingShelves = false\r\n\r\n    function view() {\r\n        return m(\"#addShelves\", [\r\n            addShelvesMessage(),\r\n            addShelvesButton(),\r\n            addShelvesTextbox(),\r\n        ])\r\n    }\r\n\r\n    function addShelvesMessage() {\r\n        if (libraryModel.shelves.size !== 0) return\r\n        return m(\"span\", \"Add Google Spreadsheet URLs here to get started. \")\r\n    }\r\n\r\n    function addShelvesButton() {\r\n        return m(\"button\", {\r\n            id: \"addShelvesButton\",\r\n            onclick: async () => {\r\n                if (addingShelves) libraryController.addShelves(newShelfUrls)\r\n                newShelfUrls = \"\"\r\n                addingShelves = !addingShelves\r\n            }\r\n        }, (addingShelves) ? \" ✓ \" : \"+/-\")\r\n    }\r\n\r\n    function addShelvesTextbox() {\r\n        if (!addingShelves) return null\r\n        return m(\"textarea\", {\r\n            id: \"addShelvesText\",\r\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n            oninput: (event: any) => newShelfUrls = event.target.value\r\n        })\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n    }\r\n\r\n}\r\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\n\nexport function breadcrumbComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn) return\n        return m(\"#breadcrumb\", urlController.getBreadcrumbTrail())\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\r\nimport { googleModel } from \"..\"\r\nimport { urlController } from \"../controllers\"\r\nimport { googleComponent } from \"../components\"\r\n\r\nexport function signinView() {\r\n\r\n    function view() {\r\n        return m(\"#auth\", [\r\n            m(googleComponent),\r\n        ])\r\n    }\r\n\r\n    function onupdate() {\r\n        if (googleModel.isSignedIn) {\r\n            urlController.redirect(\"/library\")\r\n        }\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n\r\n}\r\n","import m from \"mithril\"\nimport { \n    googleComponent, shelvesComponent, syncStateComponent, addShelvesComponent,\n    testModeComponent,\n} from \"../components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(addShelvesComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { urlController, journalController } from \"../controllers\"\nimport {\n    googleComponent, breadcrumbComponent, entriesComponent, syncStateComponent,\n    searchbarComponent, refinesComponent, composeComponent, testModeComponent,\n} from \"../components\"\n\nexport function journalView() {\n\n    function oninit() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded) return\n        journalController.loadEntries(journal)\n    }\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(searchbarComponent),\n            m(refinesComponent),\n            m(\"#entriesWrap\", [\n                m(entriesComponent),\n                m(composeComponent),\n            ])\n        ])\n    }\n\n    return {\n        view: view,\n        oninit: oninit,\n    }\n\n}\n","\nimport { urlModel } from \"..\"\nimport { urlController, appStateController } from \"../controllers\"\nimport { TestMode } from \"../types\"\n\nexport function testModeView() {\n    // TODO: WORK OUT HOW TO MANAGE TEST MODE\n    function view() {\n        if (urlModel.hash.startsWith(\"#/demo\")) {\n            appStateController.updateTestMode(TestMode.DEMO)\n            urlController.redirect(\"/library\")\n        }\n\n        if (urlModel.hash.startsWith(\"#/setTestMode\")) {\n            appStateController.updateTestMode(urlModel.getParam(\"testMode\"))\n            urlController.redirect(\"/\")\n        }\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import { FriendlyError } from \"../errors\"\r\n\r\nexport class ErrorsModel {\r\n    private static instance: ErrorsModel\r\n\r\n    public errors: FriendlyError[] = []\r\n\r\n    private constructor() {}\r\n\r\n    add(error: FriendlyError) {\r\n        this.errors.push(error)\r\n    }\r\n\r\n    remove(idx: number) {\r\n        this.errors.splice(idx, 1)\r\n    }\r\n\r\n    static getInstance(): ErrorsModel {\r\n        return (!ErrorsModel.instance) ? new ErrorsModel() : ErrorsModel.instance\r\n    }\r\n}\r\n","import { appStateModel } from \"..\"\r\nimport { FriendlyError } from \"../errors\"\r\n\r\nexport const errorsController = {\r\n    add: add,\r\n    remove: remove,\r\n}\r\n\r\nfunction add(errorMsg: string, friendlyMsg: string) {\r\n    console.error(errorMsg)\r\n    appStateModel.errors.add(new FriendlyError(errorMsg, friendlyMsg))\r\n}\r\n\r\nfunction remove(idx: number) {\r\n    appStateModel.errors.remove(idx)\r\n}\r\n"],"sourceRoot":""}