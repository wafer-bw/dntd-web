{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"m\"","webpack:///./src/index.ts","webpack:///./src/helpers/index.ts","webpack:///./src/types/index.ts","webpack:///./src/models/index.ts","webpack:///./src/classes/index.ts","webpack:///./src/mocks/index.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncerTasks.ts","webpack:///./src/types/syncerResponses.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/mocks/syncTasks.ts","webpack:///./src/components/index.ts","webpack:///./src/views/index.ts","webpack:///./src/classes/Tag.ts","webpack:///./src/views/signinView.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/helpers/misc.ts","webpack:///./src/helpers/errors.ts","webpack:///./src/helpers/textOps.ts","webpack:///./src/helpers/caretOps.ts","webpack:///./src/helpers/patterns.ts","webpack:///./src/helpers/localStorageOps.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/views/googleComponent.ts","webpack:///./src/controllers/index.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/views/shelvesComponent.ts","webpack:///./src/components/app.ts","webpack:///./src/components/links.ts","webpack:///./src/components/about.ts","webpack:///./src/components/errors.ts","webpack:///./src/components/compose.ts","webpack:///./src/classes/Entry.ts","webpack:///./src/classes/Sheet.ts","webpack:///./src/classes/Syncer.ts","webpack:///./src/classes/Search.ts","webpack:///./src/classes/Refines.ts","webpack:///./src/classes/Journal.ts","webpack:///./src/classes/Spreadsheet.ts","webpack:///./src/classes/ServiceWorker.ts","webpack:///./src/components/entries.ts","webpack:///./src/components/toggles.ts","webpack:///./src/components/searchbar.ts","webpack:///./src/components/googleAPI.ts","webpack:///./src/components/refinesPane.ts","webpack:///./src/components/syncStateIndicator.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalsComponent.ts","webpack:///./src/views/shelfView.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","syncer","Syncer","search","Search","refines","Refines","journal","Journal","serviceWorker","ServiceWorker","root","document","getElementById","route","app","signinView","libraryView","shelfView","Tag","Entry","Sheet","Spreadsheet","SearchType","TestMode","SyncerTaskType","SyncerResponseType","SyncerState","auth2","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","access_token","isSignedIn","MockIsSignedIn","currentUser","listen","testMode","extendSheetLength","_token","_task","this","FAIL_GET_SPREADSHEET_SHEETS","Error","FAIL_GET_RANGE","RETURN_ROWS","FAIL_UPDATE_RANGE","FAIL_DELETE_ROW","raw","flag","separator","val","frq","undefined","clean","cleanTagString","cleanKey","cleanVal","hideKeys","replace","renderVal","renderKey","str","escapeHtml","endsWith","substring","length","toLowerCase","view","googleComponent","onupdate","googleModel","window","location","hash","URL","href","url","DEMO","test","searchParams","values","includes","OFF","FriendlyError","errorMsg","friendlyMsg","super","errors","push","console","warn","redraw","unsafe","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","tagPattern","spreadsheetIdPattern","id","localStorage","setItem","getItem","urls","hide","spreadsheetId","sheetId","parseInt","toString","removeItem","saved","tags","Map","hovered","focused","tokens","rendered","savedClean","tagMatches","readableRendered","rawText","savedText","getTags","safe","getTokens","getTagMatches","render","text","tag","match","chars","split","splice","index","join","has","set","matchesIter","matchAll","TagModel","sort","a","b","filter","token","trim","sheetIds","ShelfModel","journalIds","src","scope","clientId","shelfId","title","rows","entries","map","row","EntryModel","entry","Array","from","reverse","idx","content","buildTags","fromIdx","toIdx","LibraryModel","shelfIds","libraryModel","spreadsheetUrlsString","getStoredSpreadsheetUrls","spreadsheetIds","getSpreadsheetIdsFromUrls","ids","forEach","createLibrary","onclick","googleController","signOut","class","signIn","async","defer","onload","initGapi","signedIn","gapi_","getAuthInstance","getTestMode","gapi","MockGapi","load","init","client_id","then","getHash","links","syncStateIndicator","googleAPI","searchbar","toggles","refinesPane","compose","linkList","updateTestMode","separatedLinks","link","drawLinks","errorDismissButtonSettings","error","caret","composePrefix","composeContent","composeSuffix","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","extraSettings","baseSettings","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","newEntry","spreadsheet","sheet","saveEntry","composeKeydown","oninput","getCaretPosition","target","composeInput","assign","trust","sheets","getRows","switch","build","state","DOWNLOADING","user","worker","Worker","onmessage","msg","onMessage","pushSyncerTask","type","TEST_MODE_UPDATE","AUTH_UPDATE","GET_SHEETS","sheetTitle","GET_ROWS","DELETE_ROW","UPDATE_ROW","UNPAUSE","task","postMessage","response","data","SYNCER_STATE","SHEETS","spreadsheets","ROWS","ERROR","message","REAUTH","reloadAuthResponse","auth","updateAuth","catch","err","barQuery","searchType","NONE","refinesQuery","keys","Set","vals","simpleKeys","query","AND","OR","sourceEntries","every","some","startsWith","simple","complex","simpleRefines","complexRefines","cleanRefines","delete","entryInFocus","hideTagRefines","hideEntriesKeys","showAddSpreadsheetTextbox","spreadsheetUrls","getStoredHideTagRefines","getStoredHideEntriesKeys","incomingSpreadsheetIds","loadNewSpreadsheets","removeOldSpreadsheets","getStoredSpreadsheetId","getStoredSpreadsheetSheetId","reset","setStoredSpreadsheetId","setStoredSpreadsheetSheetId","spreadsheet_id","delStoredSpreadsheetSheetId","matches","deleteRow","updateRow","getSheets","properties","navigator","addEventListener","register","entriesVnodes","searchEntries","entryVnode","entryContent","deleteEntryButton","deleteEntry","blur","onEntryKeydown","onEntryInput","onEntryUpdate","onblur","onEntryBlur","onmouseover","onEntryMouseover","onmouseout","onEntryMouseout","onfocus","onEntryFocus","entryContentSettings","for","checked","disabled","setStoredHideEntriesKeys","setStoredHideTagRefines","placeholder","onSearchInput","onSearchKeydown","initClient","updateSigninStatus","getAuthResponse","initJournal","unload","addSpreadsheetButton","setStoredSpreadsheetUrls","onchange","selected","substr","isActive","expanded","refineKeyVnode","count","metaKey","ctrlKey","add","refineTagKeyOnClick","tagRefineKeySettings","refineValVnode","tagRefineValSettings","tagClass","hideClass","refineTagValOnClick","size","syncStateText","txt","class_","stateColorClass","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","unpause","syncState","shelvesComponent","param","journalId","journalsComponent"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = m;","import m from \"mithril\"\nimport { signinView, libraryView, shelfView } from \"./views\"\nimport { app } from \"./components\"\nimport { Journal, Search, Syncer, ServiceWorker, Refines } from \"./classes\"\n\nexport const syncer = new Syncer()\nexport const search = new Search()\nexport const refines = new Refines()\nexport const journal = new Journal()\nexport const serviceWorker = new ServiceWorker()\n\nlet root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": app,\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        // \"/demo\" : app,\n        // \"/about\": about,\n    })\n}\n","export * from \"./misc\"\nexport * from \"./errors\"\nexport * from \"./textOps\"\nexport * from \"./caretOps\"\nexport * from \"./patterns\"\nexport * from \"./localStorageOps\"\n","export * from \"./caret\"\nexport * from \"./errors\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncerTasks\"\nexport * from \"./syncerResponses\"\n","export * from \"./TagModel\"\r\nexport * from \"./EntryModel\"\r\nexport * from \"./ShelfModel\"\r\nexport * from \"./GoogleModel\"\r\nexport * from \"./JournalModel\"\r\nexport * from \"./LibraryModel\"\r\n","export { Tag } from \"./Tag\"\nexport { Entry } from \"./Entry\"\nexport { Sheet } from \"./Sheet\"\nexport { Syncer } from \"./Syncer\"\nexport { Search } from \"./Search\"\nexport { Refines } from \"./Refines\"\nexport { Journal } from \"./Journal\"\nexport { Spreadsheet } from \"./Spreadsheet\"\nexport { ServiceWorker } from \"./ServiceWorker\"\n","export * from \"./Gapi\"\nexport * from \"./syncTasks\"\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"7\"\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerTask = (\n    AuthUpdateTask | DeleteRowTask | UpdateRowTask | GetRowsTask |\n    GetSheetsTask | TestModeUpdateTask | UnpauseTask\n)\n\nexport enum SyncerTaskType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    GET_SHEETS,\n    TEST_MODE_UPDATE,\n    UNPAUSE\n}\n\nexport interface GetSheetsTask {\n    type: SyncerTaskType.GET_SHEETS\n    spreadsheetId: string\n}\n\nexport interface TestModeUpdateTask {\n    type: SyncerTaskType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdateTask {\n    type: SyncerTaskType.AUTH_UPDATE\n    token: string\n}\n\nexport interface DeleteRowTask {\n    type: SyncerTaskType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowTask {\n    type: SyncerTaskType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetRowsTask {\n    type: SyncerTaskType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n}\n\nexport interface UnpauseTask {\n    type: SyncerTaskType.UNPAUSE\n}\n","import { SyncerError } from \"../workers/sync\"\n\nexport type SyncerResponse = (\n    RowsResponse | SheetsResponse | QueueStateResponse | ErrorResponse | ReauthResponse\n)\n\nexport enum SyncerResponseType {\n    ROWS,\n    SHEETS,\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n}\n\nexport interface RowsResponse {\n    type: SyncerResponseType.ROWS\n    spreadsheetId: string\n    sheetId: number\n    rows: string[]\n}\n\nexport interface SheetsResponse {\n    type: SyncerResponseType.SHEETS\n    spreadsheetId: string\n    sheets: gapi.client.sheets.Sheet[]\n}\n\nexport interface QueueStateResponse {\n    type: SyncerResponseType.SYNCER_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorResponse {\n    type: SyncerResponseType.ERROR\n    error: SyncerError | Error\n    friendlyMsg: string\n}\n\nexport interface ReauthResponse {\n    type: SyncerResponseType.REAUTH\n}\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import {\n    GetRowsTask, UpdateRowTask, DeleteRowTask, GetSheetsTask, TestMode\n} from \"../types\"\n\nexport class SyncerTasksMock {\n\n    public extendSheetLength = 100\n\n    constructor(private testMode: TestMode) { }\n\n    public async getSheets(_token: string, _task: GetSheetsTask) {\n        if (this.testMode === TestMode.FAIL_GET_SPREADSHEET_SHEETS) {\n            throw new Error(\"mock fail\")\n        }\n        return [{\n            \"properties\": {\n                \"sheetId\": 0,\n                \"title\": \"Sheet1\",\n                \"index\": 0,\n                \"sheetType\": \"GRID\",\n                \"gridProperties\": {\n                    \"rowCount\": 100,\n                    \"columnCount\": 26\n                }\n            }\n        },\n        {\n            \"properties\": {\n                \"sheetId\": 1,\n                \"title\": \"Sheet2\",\n                \"index\": 0,\n                \"sheetType\": \"GRID\",\n                \"gridProperties\": {\n                    \"rowCount\": 100,\n                    \"columnCount\": 26\n                }\n            }\n        }]\n    }\n\n    public async getRows(_token: string, _task: GetRowsTask) {\n        if (this.testMode === TestMode.FAIL_GET_RANGE) {\n            throw new Error(\"mock fail\")\n        } else if (this.testMode === TestMode.RETURN_ROWS) {\n            return [\"aaa\", \"bbb\", \"ccc\", \"@tag\", \"@key:value\"]\n        }\n        return []\n    }\n\n    public async updateRow(_token: string, _task: UpdateRowTask) {\n        if (this.testMode === TestMode.FAIL_UPDATE_RANGE) {\n            throw new Error(\"mock fail\")\n        }\n    }\n\n    public async deleteRow(_token: string, _task: DeleteRowTask) {\n        if (this.testMode === TestMode.FAIL_DELETE_ROW) {\n            throw new Error(\"mock fail\")\n        }\n    }\n\n}\n","export * from \"./app\"\nexport * from \"./links\"\nexport * from \"./about\"\nexport * from \"./errors\"\nexport * from \"./compose\"\nexport * from \"./entries\"\nexport * from \"./toggles\"\nexport * from \"./searchbar\"\nexport * from \"./googleAPI\"\nexport * from \"./refinesPane\"\nexport * from \"./syncStateIndicator\"\n","export * from \"./shelfView\"\r\nexport * from \"./signinView\"\r\nexport * from \"./libraryView\"\r\n\r\nexport * from \"./googleComponent\"\r\nexport * from \"./shelvesComponent\"\r\nexport * from \"./journalsComponent\"\r\n","import { escapeHtml } from \"../helpers\"\n\nexport class Tag {\n    public frq: number\n    public raw: string\n    public key: string\n    public flag: string\n    public clean: string\n    public cleanKey: string\n    public val: string | null\n    public cleanVal: string | null\n    public separator: string | null\n\n    constructor(raw: string, flag: string, key: string, separator: string | undefined | null, val: string | undefined | null) {\n        this.frq = 1\n        this.raw = raw\n        this.flag = flag\n        this.key = key\n        this.separator = (separator !== undefined) ? separator : null\n        this.val = (val !== undefined) ? val : null\n        this.clean = this.cleanTagString(this.raw)\n        this.cleanKey = this.cleanTagString(this.key)\n        this.cleanVal = (this.val !== null) ? this.cleanTagString(this.val) : null\n    }\n\n    public renderKey(): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + ((this.separator) ? this.separator : \"\")\n            + \"')\\\" class=\\\"\"\n            + ((this.separator) ? \"tagKey\" : (this.val === null) ? \"simpleTag\" : \"roundTagVal\")\n            + \"\\\">\"\n            + this.flag\n            + this.key\n            + \"</span>\"\n    }\n\n    public renderVal(hideKeys?: boolean): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + this.separator\n            + this.cleanVal?.replace(/'/, \"\\\\'\")\n            + \"')\\\" class=\\\"\"\n            + ((hideKeys) ? \"roundTagVal\" : \"tagVal\")\n            + \"\\\">\"\n            + ((hideKeys) ? \"\" : this.separator)\n            + (this.val || \"\")\n            + \"</span>\"\n    }\n\n    public render(hideKeys?: boolean): string {\n        if (this.separator) {\n            return (hideKeys) ? this.renderVal(hideKeys) : this.renderKey() + this.renderVal(hideKeys)\n        } else {\n            return this.renderKey()\n        }\n    }\n\n    private cleanTagString(str: string) {\n        str = escapeHtml(str)\n        str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\n        str = str.toLowerCase()\n        return str\n    }\n}\n","import m from \"mithril\"\r\nimport { googleModel } from \"../models\"\r\nimport { googleComponent } from \".\"\r\n\r\nexport function signinView() {\r\n\r\n    function view() {\r\n        return m(\"#auth\", [\r\n            m(googleComponent),\r\n        ])\r\n    }\r\n\r\n    function onupdate() {\r\n        if (googleModel.isSignedIn) {\r\n            window.location.hash = \"/library\" // TODO: redirect to correct place\r\n        }\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n\r\n}","import { escapeHtml } from \"../helpers\"\r\n\r\nexport class TagModel {\r\n    public frq: number\r\n    public raw: string\r\n    public key: string\r\n    public flag: string\r\n    public clean: string\r\n    public cleanKey: string\r\n    public val: string | null\r\n    public cleanVal: string | null\r\n    public separator: string | null\r\n\r\n    constructor(raw: string, flag: string, key: string, separator: string | undefined | null, val: string | undefined | null) {\r\n        this.frq = 1\r\n        this.raw = raw\r\n        this.flag = flag\r\n        this.key = key\r\n        this.separator = (separator !== undefined) ? separator : null\r\n        this.val = (val !== undefined) ? val : null\r\n        this.clean = this.cleanTagString(this.raw)\r\n        this.cleanKey = this.cleanTagString(this.key)\r\n        this.cleanVal = (this.val !== null) ? this.cleanTagString(this.val) : null\r\n    }\r\n\r\n    public renderKey(): string {\r\n        return \"<span onclick=\\\"tagOnClick(event, '\"\r\n            + this.flag\r\n            + this.cleanKey\r\n            + ((this.separator) ? this.separator : \"\")\r\n            + \"')\\\" class=\\\"\"\r\n            + ((this.separator) ? \"tagKey\" : (this.val === null) ? \"simpleTag\" : \"roundTagVal\")\r\n            + \"\\\">\"\r\n            + this.flag\r\n            + this.key\r\n            + \"</span>\"\r\n    }\r\n\r\n    public renderVal(hideKeys?: boolean): string {\r\n        return \"<span onclick=\\\"tagOnClick(event, '\"\r\n            + this.flag\r\n            + this.cleanKey\r\n            + this.separator\r\n            + this.cleanVal?.replace(/'/, \"\\\\'\")\r\n            + \"')\\\" class=\\\"\"\r\n            + ((hideKeys) ? \"roundTagVal\" : \"tagVal\")\r\n            + \"\\\">\"\r\n            + ((hideKeys) ? \"\" : this.separator)\r\n            + (this.val || \"\")\r\n            + \"</span>\"\r\n    }\r\n\r\n    public render(hideKeys?: boolean): string {\r\n        if (this.separator) {\r\n            return (hideKeys) ? this.renderVal(hideKeys) : this.renderKey() + this.renderVal(hideKeys)\r\n        } else {\r\n            return this.renderKey()\r\n        }\r\n    }\r\n\r\n    private cleanTagString(str: string) {\r\n        str = escapeHtml(str)\r\n        str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\r\n        str = str.toLowerCase()\r\n        return str\r\n    }\r\n}\r\n","import { TestMode } from \"../types\"\n\nexport function getHash(): string {\n    let url = new URL(window.location.href)\n    return url.hash\n}\n\nexport function getTestMode(): TestMode {\n    let url = new URL(window.location.href)\n    if (url.hash === \"#!demo\") {\n        return TestMode.DEMO\n    }\n    let test = url.searchParams.get(\"test\")\n    return (test !== null && instanceOfTestMode(test)) ? test : TestMode.OFF\n\n}\n\nfunction instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","import m from \"mithril\"\nimport { journal } from \"..\"\n\nexport class FriendlyError extends Error {\n    constructor(errorMsg: string, public friendlyMsg: string) {\n        super(errorMsg)\n        journal.errors.push(friendlyMsg)\n        console.warn(errorMsg)\n        m.redraw()\n    }\n}\n","export function escapeHtml(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n","function node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nexport function getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nexport function setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","export const tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\nexport const spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n","export function setStoredSpreadsheetId(id: string) {\n    localStorage.setItem(\"spreadsheetId\", id)\n}\nexport function getStoredSpreadsheetId(): string | undefined {\n    return localStorage.getItem(\"spreadsheetId\") || undefined\n}\n\nexport function setStoredSpreadsheetUrls(urls: string) {\n    localStorage.setItem(\"spreadsheetUrls\", urls)\n}\nexport function getStoredSpreadsheetUrls(): string | undefined {\n    return localStorage.getItem(\"spreadsheetUrls\") || undefined\n}\n\nexport function setStoredHideEntriesKeys(hide: boolean) {\n    localStorage.setItem(\"hideEntriesKeys\", (hide) ? \"1\": \"0\")\n}\nexport function getStoredHideEntriesKeys(): boolean {\n    return localStorage.getItem(\"hideEntriesKeys\") === \"1\"\n}\n\nexport function setStoredHideTagRefines(hide: boolean) {\n    localStorage.setItem(\"hideTagRefines\", (hide) ? \"1\": \"0\")\n}\nexport function getStoredHideTagRefines(): boolean {\n    return localStorage.getItem(\"hideTagRefines\") === \"1\"\n}\n\nexport function getStoredSpreadsheetSheetId(spreadsheetId: string | undefined): number | undefined {\n    let sheetId = localStorage.getItem(`${spreadsheetId}-sheetId`) || undefined\n    return (sheetId !== undefined) ? parseInt(sheetId) : undefined\n}\nexport function setStoredSpreadsheetSheetId(spreadsheetId: string, sheetId: number) {\n    localStorage.setItem(`${spreadsheetId}-sheetId`, sheetId.toString())\n}\nexport function delStoredSpreadsheetSheetId(spreadsheetId: string | undefined) {\n    localStorage.removeItem(`${spreadsheetId}-sheetId`)\n}\n","import { TagModel } from \".\"\r\nimport { tagPattern, escapeHtml } from \"../helpers\"\r\n\r\nexport type TagsMap = Map<string, TagModel>\r\n\r\ninterface TagMatch {\r\n    tag: TagModel,\r\n    match: RegExpMatchArray\r\n}\r\n\r\nexport interface IndexedEntry {\r\n    idx: number,\r\n    entry: EntryModel,\r\n}\r\n\r\nexport class EntryModel {\r\n    public tags: TagsMap = new Map()\r\n    public hovered: boolean = false\r\n    public focused: boolean = false\r\n    public clean: string = \"\"\r\n    public tokens: string[] = []\r\n    public rendered: string = \"\"\r\n    public savedClean: string = \"\"\r\n    private tagMatches: TagMatch[] = []\r\n    public readableRendered: string = \"\"\r\n    private rawText: string = \"\"\r\n    private savedText: string = \"\"\r\n\r\n    constructor(raw?: string | undefined, saved?: string | undefined) {\r\n        this.raw = (raw) ? raw : \"\"\r\n        this.saved = (saved !== undefined) ? saved : this.raw\r\n    }\r\n\r\n    public get saved(): string {\r\n        return this.savedText\r\n    }\r\n    public set saved(str: string) {\r\n        this.savedText = str\r\n        this.savedClean = str.toLowerCase()\r\n        this.tags = this.getTags(this.tagMatches)\r\n    }\r\n\r\n    public get raw(): string {\r\n        return this.rawText\r\n    }\r\n    public set raw(raw: string) {\r\n        this.rawText = raw\r\n        this.clean = this.raw.toLowerCase()\r\n        let safe = escapeHtml(this.rawText)\r\n        this.tokens = this.getTokens(this.clean)\r\n        this.tagMatches = this.getTagMatches(safe)\r\n        this.rendered = this.render(safe, this.tagMatches)\r\n        this.readableRendered = this.render(safe, this.tagMatches, true)\r\n    }\r\n\r\n    private render(text: string, tagMatches: TagMatch[], hideKeys?: boolean): string {\r\n        for (let { tag, match } of tagMatches) {\r\n            let chars = text.split(\"\")\r\n            chars.splice(match.index!, match[0].length, tag.render(hideKeys))\r\n            text = chars.join(\"\")\r\n        }\r\n        return text\r\n    }\r\n\r\n    private getTags(tagMatches: TagMatch[]): TagsMap {\r\n        let tags: TagsMap = new Map()\r\n        for (let { tag } of tagMatches) {\r\n            if (tags.has(tag.clean)) {\r\n                tags.get(tag.clean)!.frq += 1\r\n            } else {\r\n                tags.set(tag.clean, tag)\r\n            }\r\n        }\r\n        return tags\r\n    }\r\n\r\n    private getTagMatches(text: string): TagMatch[] {\r\n        let tagMatches = []\r\n        let matchesIter = text.matchAll(tagPattern)\r\n        for (let match of matchesIter) {\r\n            let tag = new TagModel(match[0], match[1], match[2], match[3], match[4])\r\n            tagMatches.push({ tag: tag, match: match })\r\n        }\r\n        tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\r\n        return tagMatches\r\n    }\r\n\r\n    private getTokens(text: string): string[] {\r\n        let tokens = text.split(\" \")\r\n        return tokens.filter(token => {\r\n            return token !== undefined && token.trim() !== \"\" && token !== \"-\"\r\n        })\r\n    }\r\n\r\n}\r\n","export class ShelfFactory {\r\n\r\n    public createShelf(id: string, sheetIds: number[]) {\r\n        return new ShelfModel(id, sheetIds)\r\n    }\r\n\r\n}\r\n\r\nexport class ShelfModel {\r\n\r\n    public id: string\r\n    public journalIds: number[]\r\n\r\n    constructor(id: string, journalIds: number[]) {\r\n        this.id = id\r\n        this.journalIds = journalIds\r\n    }\r\n\r\n    // TODO: add/remove journals\r\n\r\n}\r\n","import { MockGapi } from \"../mocks\"\r\n\r\nclass GoogleModel {\r\n\r\n    public src: string\r\n    public scope: string\r\n    public clientId: string\r\n    public isSignedIn: boolean | undefined\r\n    public gapi_: MockGapi | typeof gapi | undefined\r\n\r\n    constructor(isSignedIn?: boolean) {\r\n        this.isSignedIn = isSignedIn\r\n        this.src = \"https://apis.google.com/js/api.js\"\r\n        this.scope = [\"https://www.googleapis.com/auth/spreadsheets\"].join(\" \")\r\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\r\n    }\r\n}\r\n\r\nexport const googleModel = new GoogleModel()\r\n","import { EntryModel, TagsMap, TagModel } from \".\"\r\n\r\nexport class JournalModel {\r\n    public id: number\r\n    public tags: TagsMap\r\n    public title: string\r\n    public shelfId: string\r\n    public entries: EntryModel[]\r\n\r\n    constructor(id: number, shelfId: string, title: string, rows: string[]) {\r\n        this.id = id\r\n        this.title = title\r\n        this.tags = new Map()\r\n        this.shelfId = shelfId\r\n        this.entries = rows.map(row => new EntryModel(row))\r\n    }\r\n\r\n    private buildTags(): TagsMap {\r\n        let tags: TagsMap = new Map()\r\n        for (let entry of Array.from(this.entries.values()).reverse()) {\r\n            for (let [key, tag] of entry.tags) {\r\n                if (tags.has(key)) {\r\n                    tags.get(key)!.frq += tag.frq\r\n                } else {\r\n                    tags.set(key, new TagModel(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\r\n                }\r\n            }\r\n        }\r\n        return tags\r\n    }\r\n\r\n    public addEntry(idx: number, content: string) {\r\n        this.entries.splice(idx, 0, new EntryModel(content))\r\n        this.tags = this.buildTags()\r\n    }\r\n\r\n    public updateEntry(idx: number, content: string) {\r\n        let entry = this.entries[idx]\r\n        if (entry.saved === content) { return }\r\n        entry.saved = content\r\n        this.tags = this.buildTags()\r\n    }\r\n\r\n    public deleteEntry(idx: number) {\r\n        this.entries.splice(idx, 1)[0]\r\n        this.tags = this.buildTags()\r\n    }\r\n\r\n    public moveEntry(fromIdx: number, toIdx: number) {\r\n        let entry = this.entries[fromIdx]\r\n        this.entries.splice(fromIdx, 1)\r\n        this.entries.splice(toIdx, 0, entry)\r\n    }\r\n\r\n}\r\n","import { getStoredSpreadsheetUrls, spreadsheetIdPattern } from \"../helpers\"\r\n\r\nclass LibraryFactory {\r\n\r\n    public createLibrary() {\r\n        let spreadsheetUrlsString = getStoredSpreadsheetUrls()\r\n        let spreadsheetIds = this.getSpreadsheetIdsFromUrls(spreadsheetUrlsString)\r\n        return new LibraryModel(spreadsheetIds)\r\n    }\r\n\r\n    private getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\r\n        let ids: string[] = []\r\n        if (urls) {\r\n            let matches = Array.from(urls.matchAll(spreadsheetIdPattern))\r\n            matches.forEach(match => ids.push(match[1]))\r\n        }\r\n        return ids\r\n    }\r\n\r\n}\r\n\r\nclass LibraryModel {\r\n\r\n    public shelfIds: string[]\r\n\r\n    constructor(shelfIds: string[]) {\r\n        this.shelfIds = shelfIds\r\n    }\r\n\r\n    // TODO: add/remove shelves\r\n\r\n}\r\n\r\nexport const libraryModel = new LibraryFactory().createLibrary()\r\n","import m from \"mithril\"\r\nimport { googleModel } from \"../models\"\r\nimport { googleController } from \"../controllers\"\r\n\r\nexport function googleComponent() {\r\n\r\n    function view() {\r\n        return m(\"#googleApi\", [\r\n            preambleMessage(),\r\n            signInOutButton(),\r\n            m(\"script\", gapiScriptSettings()),\r\n        ])\r\n    }\r\n\r\n    function gapiScriptSettings() {\r\n        return { async: true, defer: true, src: googleModel.src, onload: () => { googleController.initGapi() }\r\n        }\r\n    }\r\n\r\n    function signInOutButton() {\r\n        return (googleModel.isSignedIn)\r\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\r\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\r\n    }\r\n\r\n    function preambleMessage() {\r\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\r\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\r\n            : null\r\n    }\r\n\r\n    return { view: view }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function addSpreadsheetButton() {\r\n    //     return m(\"button\", {\r\n    //         id: \"addSpreadsheet\",\r\n    //         onclick: async () => {\r\n    //             journal.showAddSpreadsheetTextbox = !journal.showAddSpreadsheetTextbox\r\n    //             if (!journal.showAddSpreadsheetTextbox) {\r\n    //                 let spreadsheetUrls = getStoredSpreadsheetUrls()\r\n    //                 await journal.load(spreadsheetUrls)\r\n    //             }\r\n    //         },\r\n    //     }, (journal.showAddSpreadsheetTextbox) ? \" ✓ \" : \"+/-\")\r\n    // }\r\n\r\n    // function spreadsheetsTextbox() {\r\n    //     return m(\"textarea\", {\r\n    //         id: \"spreadsheetURLs\",\r\n    //         placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n    //         value: getStoredSpreadsheetUrls(),\r\n    //         oninput: (event: any) => setStoredSpreadsheetUrls(event.target.value),\r\n    //     })\r\n    // }\r\n\r\n    // function spreadsheetsSelect() {\r\n    //     return m(\"select\", {\r\n    //         onchange: (event: any) => {\r\n    //             let id = event.target.value\r\n    //             journal.switch(id, getStoredSpreadsheetSheetId(id))\r\n    //         },\r\n    //         id: \"spreadsheetSelect\",\r\n    //     }, [\r\n    //         Array.from(journal.spreadsheets).map(([id]) => [\r\n    //             m(\"option\", {\r\n    //                 value: id,\r\n    //                 selected: journal.spreadsheet!.id === id\r\n    //             }, id.substr(id.length - 6))\r\n    //         ])\r\n    //     ])\r\n    // }\r\n\r\n    // function sheetsSelect() {\r\n    //     return m(\"select\", {\r\n    //         onchange: (event: any) => {\r\n    //             journal.switch(journal.spreadsheet!.id, parseInt(event.target.value))\r\n    //             m.redraw()\r\n    //         },\r\n    //         id: \"sheetSelect\",\r\n    //     }, [\r\n    //         Array.from(journal.spreadsheet!.sheets).map(([id, sheet]) => [\r\n    //             m(\"option\", {\r\n    //                 value: id,\r\n    //                 selected: journal.isActive && journal.spreadsheet!.sheet!.id === id\r\n    //             }, sheet.title)\r\n    //         ])\r\n    //     ])\r\n    // }\r\n","export * from \"./googleController\"\r\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { googleModel } from \"../models\"\r\nimport { getTestMode } from \"../helpers\"\r\n\r\nexport const googleController = {\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    initGapi: initGapi,\r\n}\r\n\r\nfunction signOut() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\r\n}\r\n\r\nfunction signIn() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\r\n}\r\n\r\nfunction initGapi() {\r\n    let gapi_ = (getTestMode() === TestMode.OFF) ? gapi : new MockGapi()\r\n    gapi_.load('auth2', () => {\r\n        gapi_.auth2.init({\r\n            scope: googleModel.scope, client_id: googleModel.clientId\r\n        }).then(() => {\r\n            gapi_.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\r\n            isSignedIn((gapi_.auth2.getAuthInstance().isSignedIn.get()))\r\n        })\r\n    })\r\n    googleModel.gapi_ = gapi_\r\n}\r\n\r\nfunction isSignedIn(signedIn: boolean) {\r\n    googleModel.isSignedIn = signedIn\r\n    m.redraw()\r\n\r\n    // journal.isSignedIn = signedIn\r\n    // m.redraw()\r\n    // if (journal.isSignedIn) {\r\n    //     let user = gapi_.auth2.getAuthInstance().currentUser.get()\r\n    //     syncer.user = user\r\n    //     let auth = user.getAuthResponse()\r\n    //     syncer.updateAuth(auth.access_token)\r\n    //     await initJournal()\r\n    // } else {\r\n    //     journal.unload()\r\n    // }\r\n\r\n    // async function initJournal() {\r\n    //     let spreadsheetUrls = getStoredSpreadsheetUrls()\r\n    //     await journal.load(spreadsheetUrls)\r\n    // }\r\n\r\n    // if (getTestMode() === TestMode.DEMO) {\r\n    //     journal.isSignedIn = true\r\n    //     journal.load(\"https://docs.google.com/spreadsheets/d/demo/edit\")\r\n    //     return []\r\n    // }\r\n}\r\n","import m from \"mithril\"\r\nimport { libraryModel } from \"../models\"\r\n\r\nexport function shelvesComponent() {\r\n\r\n    function view() {\r\n        return m(\"#shelves\", libraryModel.shelfIds\r\n            .map(shelfId => m(\"li\", m(\"a\", { href: `#/library/${shelfId}` }, shelfId)))\r\n        )\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n    }\r\n\r\n}","import m from \"mithril\"\nimport { journal } from \"..\"\nimport { getHash } from \"../helpers\"\nimport {\n    googleAPI, compose, entries, searchbar, toggles, syncStateIndicator, refinesPane, errors, links\n} from \".\"\n\nexport function app() {\n\n    function view() {\n        let hash = getHash()\n        return [\n            (hash === \"#!\" || hash === \"\") ? null : m(links),\n            m(syncStateIndicator),\n            m(googleAPI),\n            m(\"#errorsWrap\", m(errors)),\n            (journal.isActive)\n                ? [\n                    m(\"#searchWrap\", [\n                        m(searchbar),\n                        m(toggles)\n                    ]),\n                    m(refinesPane),\n                    m(\"#entriesWrap\", entriesWrappSettings(), [\n                        m(entries),\n                        m(compose),\n                    ]),\n                ]\n                : [],\n        ]\n    }\n\n    function entriesWrappSettings() {\n        return { class: (journal.hideTagRefines) ? \"fullWidth\" : \"\" }\n    }\n\n    return { view: view }\n}","import m from \"mithril\"\nimport { syncer } from \"..\"\nimport { TestMode } from \"../types\"\nimport { getHash } from \"../helpers\"\n\nexport function links() {\n\n    function view() {\n        let hash = getHash()\n        let linkList: m.Vnode[] = []\n        if (hash !== \"#!about\") linkList.push(m(\"a\", { href: \"/#!about\" }, \"About\"))\n        if (hash !== \"#!demo\") linkList.push(m(\"a\", { href: \"/#!demo\", onclick: () => syncer.updateTestMode(TestMode.DEMO) }, \"Demo\"))\n        if (hash !== \"#!\" && hash !== \"\") linkList.push(m(\"a\", { href: \"/#!\", onclick: () => syncer.updateTestMode(TestMode.OFF) }, \"Start\"))\n        return m(\"#navLinks\", drawLinks(linkList))\n    }\n\n    function drawLinks(linkList: m.Vnode[]) {\n        let separatedLinks = []\n        for (let [idx, link] of linkList.entries()) {\n            separatedLinks.push(link)\n            if (idx !== linkList.length - 1) separatedLinks.push(\" | \")\n        }\n        return separatedLinks\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { links } from \".\"\n\nexport function about() {\n\n    function view() {\n        return m(\"#callToAction\", [\n            m(links),\n            m(\"#about\", \"About page will be filled when the visual overhaul is complete.\")\n        ])\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { journal } from \"..\"\n\nexport function errors() {\n\n    function view() {\n        if (journal.errors.length === 0) { return [] }\n        return m(\"#errors\", journal.errors.map((error, idx) => [\n            m(\".error\", [\n                m(\"span\", error),\n                m(\"button\", errorDismissButtonSettings(idx), \"dismiss\"),\n            ])\n        ]))\n    }\n\n    function errorDismissButtonSettings(idx: number) {\n        return {\n            class: \"dismissErrorButton\",\n            onclick: () => journal.errors.splice(idx, 1),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { journal } from \"..\"\nimport { Caret } from \"../types\"\nimport { Entry } from \"../classes\"\nimport { getCaretPosition, setCaretPosition } from \"../helpers\"\n\nexport function compose() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefix = new Entry(\"\")\n    const composeContent = new Entry(\"\")\n    const composeSuffix = new Entry(\"\")\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        return m(\"#compose\", [\n            m(\"#prefix\", composeNodeSettings(composePrefix, prefixSettings), m.trust(composePrefix.rendered)),\n            m(\"#content\", composeNodeSettings(composeContent, entrySettings), m.trust(composeContent.rendered)),\n            m(\"#suffix\", composeNodeSettings(composeSuffix, suffixSettings), m.trust(composeSuffix.rendered)),\n        ])\n    }\n\n    function getComposedEntry() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: Entry, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let raw = getComposedEntry()\n            composeContent.raw = \"\"\n            let newEntry = new Entry(raw, \"\")\n            let idx = journal.spreadsheet!.sheet!.entries.length\n            journal.spreadsheet!.sheet!.entries.push(newEntry)\n            m.redraw()\n            await journal.saveEntry(idx)\n        }\n    }\n\n    function composeInput(event: any, entry: Entry) {\n        let pos = getCaretPosition(event.target)\n        caret = (pos)\n            ? { pos: pos[1], el: event.target }\n            : { pos: null, el: null }\n        entry.raw = event.target.innerText\n    }\n\n    function composeUpdate() {\n        setCaretPosition(caret.el, caret.pos)\n        caret = { el: null, pos: null }\n    }\n\n    return { view: view }\n}\n","import { Tag } from \"./Tag\"\nimport { tagPattern, escapeHtml } from \"../helpers\"\n\nexport type TagsMap = Map<string, Tag>\n\ninterface TagMatch {\n    tag: Tag,\n    match: RegExpMatchArray\n}\n\nexport interface IndexedEntry {\n    idx: number,\n    entry: Entry,\n}\n\nexport class Entry {\n    public tags: TagsMap = new Map()\n    public hovered: boolean = false\n    public focused: boolean = false\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public savedClean: string = \"\"\n    private tagMatches: TagMatch[] = []\n    public readableRendered: string = \"\"\n    private rawText: string = \"\"\n    private savedText: string = \"\"\n\n    constructor(raw?: string | undefined, saved?: string | undefined) {\n        this.raw = (raw) ? raw : \"\"\n        this.saved = (saved !== undefined) ? saved : this.raw\n    }\n\n    public get saved(): string {\n        return this.savedText\n    }\n    public set saved(str: string) {\n        this.savedText = str\n        this.savedClean = str.toLowerCase()\n        this.tags = this.getTags(this.tagMatches)\n    }\n\n    public get raw(): string {\n        return this.rawText\n    }\n    public set raw(raw: string) {\n        this.rawText = raw\n        this.clean = this.raw.toLowerCase()\n        let safe = escapeHtml(this.rawText)\n        this.tokens = this.getTokens(this.clean)\n        this.tagMatches = this.getTagMatches(safe)\n        this.rendered = this.render(safe, this.tagMatches)\n        this.readableRendered = this.render(safe, this.tagMatches, true)\n    }\n\n    private render(text: string, tagMatches: TagMatch[], hideKeys?: boolean): string {\n        for (let { tag, match } of tagMatches) {\n            let chars = text.split(\"\")\n            chars.splice(match.index!, match[0].length, tag.render(hideKeys))\n            text = chars.join(\"\")\n        }\n        return text\n    }\n\n    private getTags(tagMatches: TagMatch[]): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let { tag } of tagMatches) {\n            if (tags.has(tag.clean)) {\n                tags.get(tag.clean)!.frq += 1\n            } else {\n                tags.set(tag.clean, tag)\n            }\n        }\n        return tags\n    }\n\n    private getTagMatches(text: string): TagMatch[] {\n        let tagMatches = []\n        let matchesIter = text.matchAll(tagPattern)\n        for (let match of matchesIter) {\n            let tag = new Tag(match[0], match[1], match[2], match[3], match[4])\n            tagMatches.push({ tag: tag, match: match })\n        }\n        tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n        return tagMatches\n    }\n\n    private getTokens(text: string): string[] {\n        let tokens = text.split(\" \")\n        return tokens.filter(token => {\n            return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n        })\n    }\n\n}\n","import { Entry, Tag } from \".\"\nimport { TagsMap } from \"../classes/Entry\"\nimport { Spreadsheet } from \"./Spreadsheet\"\nimport { syncer, journal, refines } from \"..\"\n\nexport class Sheet {\n    public id: number\n    public title: string\n    public spreadsheet: Spreadsheet\n    public entries: Entry[] = []\n\n    constructor(id: number, title: string, spreadsheet: Spreadsheet) {\n        this.id = id\n        this.title = title\n        this.spreadsheet = spreadsheet\n        spreadsheet.sheets.set(this.id, this)\n        syncer.getRows(this.spreadsheet.id, this.id, this.title)\n    }\n\n    public async load(rows: string[]) {\n        rows.map(row => this.entries.push(new Entry(row)))\n        journal.switch()\n        if (\n            journal.spreadsheet !== null &&\n            journal.spreadsheet.sheet !== null &&\n            journal.spreadsheet.sheet.id === this.id\n        ) {\n            refines.build()\n        }\n    }\n\n    get tags(): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let entry of Array.from(this.entries.values()).reverse()) {\n            for (let [key, tag] of entry.tags) {\n                if (tags.has(key)) {\n                    tags.get(key)!.frq += tag.frq\n                } else {\n                    tags.set(key, new Tag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n                }\n            }\n        }\n        return tags\n    }\n\n}\n","import m from \"mithril\"\nimport { journal, syncer } from \"..\"\nimport { MockGoogleUser } from \"../mocks\"\nimport { FriendlyError, getTestMode } from \"../helpers\"\nimport { SyncerTask, SyncerTaskType, SyncerResponse, SyncerResponseType, SyncerState, TestMode } from \"../types\"\n\nexport class Syncer {\n    public worker: Worker\n    public state: SyncerState = SyncerState.DOWNLOADING\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | null = null\n\n    constructor() {\n        this.worker = new Worker(\"./js/syncWebWorker.js\")\n        this.updateTestMode(getTestMode())\n        this.worker.onmessage = (msg: MessageEvent) => this.onMessage(msg)\n    }\n\n    public updateTestMode(testMode: TestMode) {\n        this.pushSyncerTask({ testMode: testMode, type: SyncerTaskType.TEST_MODE_UPDATE })\n    }\n\n    public updateAuth(token: string) {\n        this.pushSyncerTask({ token: token, type: SyncerTaskType.AUTH_UPDATE })\n    }\n\n    public getSheets(spreadsheetId: string) {\n        this.pushSyncerTask({\n            spreadsheetId: spreadsheetId,\n            type: SyncerTaskType.GET_SHEETS\n        })\n    }\n\n    public getRows(spreadsheetId: string, sheetId: number, sheetTitle: string) {\n        this.pushSyncerTask({\n            spreadsheetId: spreadsheetId,\n            sheetId: sheetId,\n            sheetTitle: sheetTitle,\n            type: SyncerTaskType.GET_ROWS\n        })\n    }\n\n    public deleteRow(idx: number, spreadsheetId: string, sheetId: number) {\n        this.pushSyncerTask({\n            idx: idx,\n            spreadsheetId: spreadsheetId,\n            sheetId: sheetId,\n            type: SyncerTaskType.DELETE_ROW\n        })\n    }\n\n    public updateRow(idx: number, spreadsheetId: string, sheetId: number, sheetTitle: string, content: string) {\n        this.pushSyncerTask({\n            idx: idx,\n            spreadsheetId: spreadsheetId,\n            sheetId: sheetId,\n            sheetTitle: sheetTitle,\n            content: content,\n            type: SyncerTaskType.UPDATE_ROW\n        })\n    }\n\n    public unpause() {\n        this.pushSyncerTask({ type: SyncerTaskType.UNPAUSE })\n    }\n\n    private pushSyncerTask(task: SyncerTask) {\n        this.worker.postMessage(task)\n    }\n\n    private onMessage(msg: MessageEvent) {\n        let response: SyncerResponse = msg.data\n        switch (response.type) {\n            case SyncerResponseType.SYNCER_STATE:\n                if (response.state !== syncer.state) {\n                    syncer.state = response.state\n                    m.redraw()\n                }\n                break\n            case SyncerResponseType.SHEETS:\n                if (journal.spreadsheets.has(response.spreadsheetId)) {\n                    journal.spreadsheets.get(response.spreadsheetId)!.load(response.sheets)\n                }\n                break\n            case SyncerResponseType.ROWS:\n                if (\n                    journal.spreadsheets.has(response.spreadsheetId)\n                    && journal.spreadsheets.get(response.spreadsheetId)!.sheets.has(response.sheetId)\n                ) {\n                    journal.spreadsheets.get(response.spreadsheetId)!.sheets.get(response.sheetId)!.load(response.rows)\n                }\n                break\n            case SyncerResponseType.ERROR:\n                new FriendlyError(response.error.message, `Sync Error - ${response.friendlyMsg}`)\n                break\n            case SyncerResponseType.REAUTH:\n                if (syncer.user !== null) {\n                    syncer.user.reloadAuthResponse().then((auth) => {\n                        syncer.updateAuth(auth.access_token)\n                    }).catch((err) => {\n                        new FriendlyError(err, \"You're signed out and need to sign back in.\")\n                    })\n                }\n                break\n        }\n    }\n}\n","import { journal } from \"..\"\nimport { Entry, Tag } from \".\"\nimport { SearchType } from \"../types\"\nimport { IndexedEntry } from \"../classes/Entry\"\n\ninterface RefinesQuery {\n    keys: Set<string>,\n    vals: Map<string, Tag>,\n    simpleKeys: Map<string, Tag>\n}\n\nexport class Search {\n    public barQuery: Entry = new Entry(\"\")\n    public searchType: SearchType = SearchType.NONE\n    public refinesQuery: RefinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    get query(): Entry {\n        return new Entry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n\n    public reset() {\n        this.barQuery = new Entry(\"\")\n        this.searchType = SearchType.NONE\n        this.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n    }\n\n    public entries(): IndexedEntry[] | null {\n        let entries: IndexedEntry[] | null = null\n        if (this.query.tokens.length === 0) {\n            this.searchType = SearchType.NONE\n        } else {\n            this.searchType = SearchType.AND\n            entries = this.search()\n            if (entries.length === 0) {\n                this.searchType = SearchType.OR\n                entries = this.search()\n            }\n        }\n        return entries\n    }\n\n    private search(): IndexedEntry[] {\n        let query = this.query\n        let entries: IndexedEntry[] = []\n        let sourceEntries = journal.spreadsheet!.sheet!.entries\n        for (let [idx, entry] of sourceEntries.entries()) {\n            switch (this.searchType) {\n                case SearchType.AND:\n                    if (query.tokens.every(token => this.match(token, entry))) {\n                        entries.push({ idx: idx, entry: entry })\n                    }\n                    break\n                case SearchType.OR:\n                    if (query.tokens.some(token => this.match(token, entry))) {\n                        entries.push({ idx: idx, entry: entry })\n                    }\n                    break\n            }\n        }\n        return entries\n    }\n\n    private match(token: string, entry: Entry) {\n        if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n            return entry.tags.get(token.substring(1)) === undefined\n        } else if (token.startsWith(\"-\")) {\n            return !entry.savedClean.includes(token.substring(1))\n        } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n            return entry.tags.get(token) !== undefined\n        } else {\n            return entry.savedClean.includes(token)\n        }\n    }\n}\n","import { Tag } from \".\"\nimport { journal, search } from \"..\"\n\nexport class Refines {\n    public simple: Map<string, Tag> = new Map()\n    public complex: Map<string, Tag[]> = new Map()\n\n    constructor() { }\n\n    public build() {\n        let simpleRefines: Map<string, Tag> = new Map()\n        let complexRefines: Map<string, Tag[]> = new Map()\n\n        for (let tag of journal.spreadsheet!.sheet!.tags.values()) {\n            if (tag.val === null) {\n                let key = `${tag.flag}${tag.cleanKey}`\n                if (!simpleRefines.has(key)) {\n                    simpleRefines.set(key, tag)\n                }\n            } else {\n                let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n                if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n                complexRefines.get(key)!.push(tag)\n            }\n        }\n\n        this.simple = new Map([...simpleRefines.entries()])\n        this.complex = new Map([...complexRefines.entries()].sort())\n\n        this.cleanRefines()\n    }\n\n    private cleanRefines() {\n        // Clean stale simple tag key (refine val) selections\n        for (let [key,] of search.refinesQuery.simpleKeys) {\n            if (!this.simple.has(key)) {\n                search.refinesQuery.simpleKeys.delete(key)\n            }\n        }\n\n        // Clean stale complex tag key selections\n        for (let key of search.refinesQuery.keys) {\n            if (!this.complex.has(key)) {\n                search.refinesQuery.keys.delete(key)\n            }\n        }\n\n        // Clean stale complex tag val\n        for (let [key,] of search.refinesQuery.vals) {\n            if (!Array.from(this.complex.values()).some(tags => tags.some(tag => tag.clean === key))) {\n                search.refinesQuery.vals.delete(key)\n            }\n        }\n    }\n\n}","import m from \"mithril\"\nimport { Spreadsheet } from \".\"\nimport { search, syncer, refines } from \"..\"\nimport {\n    spreadsheetIdPattern, getStoredHideTagRefines, getStoredHideEntriesKeys,\n    setStoredSpreadsheetId, setStoredSpreadsheetSheetId, delStoredSpreadsheetSheetId,\n    getStoredSpreadsheetId, getStoredSpreadsheetSheetId\n} from \"../helpers\"\n\nexport class Journal {\n    public errors: string[] = []\n    public isSignedIn: boolean = false\n    public entryInFocus: boolean = false\n    public hideTagRefines: boolean = false\n    public hideEntriesKeys: boolean = false\n    public spreadsheet: Spreadsheet | null = null\n    public showAddSpreadsheetTextbox: boolean = false\n    public spreadsheets: Map<string, Spreadsheet> = new Map()\n\n    constructor() { }\n\n    public async load(spreadsheetUrls: string | undefined) {\n        this.hideTagRefines = getStoredHideTagRefines()\n        this.hideEntriesKeys = getStoredHideEntriesKeys()\n        let incomingSpreadsheetIds = this.getSpreadsheetIdsFromUrls(spreadsheetUrls)\n        await this.loadNewSpreadsheets(incomingSpreadsheetIds)\n        await this.removeOldSpreadsheets(incomingSpreadsheetIds)\n    }\n\n    public unload() {\n        this.removeOldSpreadsheets([])\n        this.errors = []\n        this.isSignedIn = false\n        this.entryInFocus = false\n        this.hideTagRefines = false\n        this.hideEntriesKeys = false\n        this.spreadsheet = null\n        this.showAddSpreadsheetTextbox = false\n        this.spreadsheets = new Map()\n    }\n\n    get isActive(): boolean {\n        return this.spreadsheet !== null && this.spreadsheet.sheet !== null && this.isSignedIn\n    }\n\n    public switch(spreadsheetId?: string | undefined, sheetId?: number | undefined) {\n        if (spreadsheetId !== undefined && sheetId !== undefined && this.spreadsheet?.id === spreadsheetId && this.spreadsheet?.sheet?.id === sheetId) {\n            return\n        }\n\n        if (spreadsheetId === undefined && sheetId === undefined) {\n            spreadsheetId = getStoredSpreadsheetId()\n            sheetId = getStoredSpreadsheetSheetId(spreadsheetId)\n        }\n\n        search.reset()\n\n        this.spreadsheet = (spreadsheetId !== undefined && this.spreadsheets.has(spreadsheetId))\n            ? this.spreadsheets.get(spreadsheetId)!\n            : Array.from(this.spreadsheets.values())[0] || null\n\n        if (this.spreadsheet !== null) {\n            setStoredSpreadsheetId(this.spreadsheet.id)\n            this.spreadsheet.sheet = (sheetId !== undefined && this.spreadsheet.sheets.has(sheetId))\n                ? this.spreadsheet.sheets.get(sheetId)!\n                : Array.from(this.spreadsheet.sheets.values())[0] || null\n\n            if (this.spreadsheet.sheet !== null) {\n                setStoredSpreadsheetSheetId(this.spreadsheet.id, this.spreadsheet.sheet.id)\n            }\n        }\n\n        refines.build()\n        m.redraw()\n    }\n\n    private async loadNewSpreadsheets(spreadsheetIds: string[]) {\n        for (let id of spreadsheetIds.filter(id => !this.spreadsheets.get(id)).sort(id => (id === getStoredSpreadsheetId() ? -1 : 1))) {\n            new Spreadsheet(id)\n        }\n    }\n\n    private async removeOldSpreadsheets(spreadsheetIds: string[]) {\n        for (let [spreadsheet_id] of Array.from(this.spreadsheets).filter(([spreadsheet_id]) => !spreadsheetIds.includes(spreadsheet_id))) {\n            delStoredSpreadsheetSheetId(spreadsheet_id)\n            if (this.spreadsheet === this.spreadsheets.get(spreadsheet_id)) {\n                this.spreadsheet = null\n            }\n            if (this.spreadsheets.has(spreadsheet_id)) {\n                for (let [id] of this.spreadsheets.get(spreadsheet_id)!.sheets) {\n                    this.spreadsheets.get(spreadsheet_id)!.sheets.delete(id)\n                }\n                this.spreadsheets.delete(spreadsheet_id)\n            }\n        }\n    }\n\n    private getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n        if (!urls) { return [] }\n        let ids: string[] = []\n        let matches = urls.matchAll(spreadsheetIdPattern)\n        for (let match of matches) {\n            if (match) { ids.push(match[1]) }\n        }\n        return ids\n    }\n\n    public async deleteEntry(idx: number) {\n        syncer.deleteRow(idx, this.spreadsheet!.id, this.spreadsheet!.sheet!.id)\n        this.spreadsheet!.sheet!.entries.splice(idx, 1)[0]\n        refines.build()\n        m.redraw()\n    }\n\n    public async saveEntry(idx: number) {\n        let entry = this.spreadsheet!.sheet!.entries[idx]\n        if (entry.raw === entry.saved) { return }\n        syncer.updateRow(idx, this.spreadsheet!.id, this.spreadsheet!.sheet!.id, this.spreadsheet!.sheet!.title, entry.raw)\n        entry.saved = entry.raw\n        refines.build()\n        m.redraw()\n    }\n}\n","import { Sheet } from \".\"\nimport { journal, syncer } from \"../index\"\nimport { getStoredSpreadsheetSheetId } from \"../helpers\"\n\nexport class Spreadsheet {\n    public sheet: Sheet | null = null\n    public sheets: Map<number, Sheet> = new Map()\n\n    constructor(public id: string) {\n        journal.spreadsheets.set(id, this)\n        syncer.getSheets(id)\n    }\n\n    public async load(sheets: gapi.client.sheets.Sheet[]) {\n        for (let sheet of sheets.sort((sheet) => (sheet.properties?.sheetId === getStoredSpreadsheetSheetId(this.id)) ? -1 : 1)) {\n            if (sheet.properties !== undefined && sheet.properties.title !== undefined && sheet.properties.sheetId !== undefined) {\n                new Sheet(sheet.properties.sheetId, sheet.properties.title, this)\n            }\n        }\n    }\n}\n","import { FriendlyError } from \"../helpers\"\r\n\r\nexport class ServiceWorker {\r\n    constructor() {\r\n        if (\"serviceWorker\" in navigator) {\r\n            window.addEventListener(\"load\", async () => {\r\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\r\n            })\r\n        } else {\r\n            throw new FriendlyError(\"serviceWorker not supported\", \"Your browser is not supported.\")\r\n        }\r\n    }\r\n}\r\n","import { Caret } from \"../types\"\nimport m from \"mithril\"\nimport { Entry } from \"../classes\"\nimport { journal, search } from \"..\"\nimport { getCaretPosition, setCaretPosition } from \"../helpers\"\n\nexport function entries() {\n    var caret: Caret = { pos: null, el: null }\n\n    function view() {\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesVnodes(),\n        ])\n    }\n\n    function entriesVnodes() {\n        let searchEntries = search.entries()\n        if (searchEntries !== null) {\n            return searchEntries.map(({idx, entry}) => entryVnode(idx, entry))\n        }\n\n        let allEntries = Array.from(journal.spreadsheet!.sheet!.entries.entries())\n        return allEntries.map(([idx, entry]) => entryVnode(idx, entry))\n    }\n\n    function entryVnode(idx: number, entry: Entry): m.Vnode {\n        return m(\".entryWrap\", { id: `entry-${idx}` }, [\n            entryContent(entry, idx),\n            deleteEntryButton(idx),\n        ])\n    }\n\n    function deleteEntryButton(idx: number) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: async () => await journal.deleteEntry(idx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: Entry, idx: number) {\n        return m(\"div\", entryContentSettings(entry, idx), m.trust(\n            (!entry.hovered && !entry.focused && journal.hideEntriesKeys)\n                ? entry.readableRendered\n                : entry.rendered\n        ))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: Entry) {\n        let pos = getCaretPosition(event.target)\n        caret = { pos: (pos) ? pos[1] : null, el: event.target }\n        entry.raw = event.target.innerText\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        setCaretPosition(caret.el, caret.pos)\n        caret = { pos: null, el: null }\n    }\n\n    function onEntryFocus(event: any, entry: Entry) {\n        event.redraw = false\n        entry.focused = true\n    }\n\n    async function onEntryBlur(event: any, entry: Entry, idx: number) {\n        event.redraw = false\n        entry.focused = false\n        await journal.saveEntry(idx)\n    }\n\n    function onEntryMouseover(event: any, entry: Entry) {\n        if (!journal.hideEntriesKeys) {\n            event.redraw = false\n        }\n        entry.hovered = true\n    }\n\n    function onEntryMouseout(event: any, entry: Entry) {\n        if (!journal.hideEntriesKeys) {\n            event.redraw = false\n        }\n        entry.hovered = false\n    }\n\n    function entryContentSettings(entry: Entry, idx: number) {\n        return {\n            id: `entry-${idx}-content`,\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, idx),\n            onmouseover: (event: any) => onEntryMouseover(event, entry),\n            onmouseout: (event: any) => onEntryMouseout(event, entry),\n            onfocus: (event: any) => onEntryFocus(event, entry),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { journal } from \"..\"\r\nimport {\r\n    getStoredHideEntriesKeys, setStoredHideEntriesKeys, setStoredHideTagRefines\r\n} from \"../helpers\"\r\n\r\nexport function toggles() {\r\n\r\n    function view() {\r\n        return [\r\n            m(\"#hideEntriesKeysToggle\", [\r\n                m(\"label\", { for: \"hideEntriesCheckbox\" }, \"Tag keys:\"),\r\n                m(\"input#hideEntriesCheckbox\", hideEntriesKeysSettings())\r\n            ]),\r\n            m(\"#hideTagRefinesToggle\", [\r\n                m(\"label\", { for: \"hideTagRefinesCheckbox\" }, \"Tag refines:\"),\r\n                m(\"input#hideTagRefinesCheckbox\", hideTagRefinesSettings())\r\n            ])\r\n        ]\r\n    }\r\n\r\n    function hideEntriesKeysSettings() {\r\n        return {\r\n            type: \"checkbox\",\r\n            checked: !getStoredHideEntriesKeys(),\r\n            disabled: (journal.entryInFocus),\r\n            onclick: () => {\r\n                journal.hideEntriesKeys = !journal.hideEntriesKeys\r\n                setStoredHideEntriesKeys(journal.hideEntriesKeys)\r\n            }\r\n        }\r\n    }\r\n\r\n    function hideTagRefinesSettings() {\r\n        return {\r\n            type: \"checkbox\",\r\n            checked: !journal.hideTagRefines,\r\n            onclick: () => {\r\n                journal.hideTagRefines = !journal.hideTagRefines\r\n                setStoredHideTagRefines(journal.hideTagRefines)\r\n            }\r\n        }\r\n    }\r\n\r\n    return { view: view }\r\n}\r\n","import m from \"mithril\"\nimport { search } from \"..\"\nimport { Caret } from \"../types\"\nimport { getCaretPosition, setCaretPosition, escapeHtml } from \"../helpers\"\n\nexport function searchbar() {\n    var caret: Caret = { el: null, pos: null }\n\n    function view() {\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(search.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\")\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onSearchInput(event),\n            onupdate: () => onSearchUpdate(),\n            onkeydown: (event: any) => onSearchKeydown(event)\n        }\n    }\n\n    function onSearchInput(event: any) {\n        let pos = getCaretPosition(event.target)\n        caret = (pos) ? { pos: pos[1], el: event.target } : { pos: null, el: null }\n        search.barQuery.raw = escapeHtml(event.target.innerText)\n    }\n\n    function onSearchUpdate() {\n        setCaretPosition(caret.el, caret.pos)\n        caret = { el: null, pos: null }\n    }\n\n    function onSearchKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => search.barQuery.raw = \"\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { journal, syncer } from \"..\"\r\nimport {\r\n    getStoredSpreadsheetUrls, getStoredSpreadsheetSheetId, setStoredSpreadsheetUrls, getTestMode\r\n} from \"../helpers\"\r\n\r\nconst scope = [\"https://www.googleapis.com/auth/spreadsheets\"].join(\" \")\r\nconst clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\r\n\r\nexport function googleAPI() {\r\n    var gapi_: MockGapi | typeof gapi\r\n\r\n    function gapiScriptSettings() {\r\n        return {\r\n            async: true, defer: true, src: \"https://apis.google.com/js/api.js\",\r\n            onload: () => {\r\n                gapi_ = (getTestMode() === TestMode.OFF) ? gapi : new MockGapi()\r\n                gapi_.load('auth2', initClient)\r\n            }\r\n        }\r\n    }\r\n\r\n    function initClient() {\r\n        gapi_.auth2.init({\r\n            scope: scope,\r\n            client_id: clientId\r\n        }).then(() => {\r\n            gapi_.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus)\r\n            updateSigninStatus(gapi_.auth2.getAuthInstance().isSignedIn.get())\r\n        })\r\n    }\r\n\r\n    async function updateSigninStatus(signedIn: boolean) {\r\n        journal.isSignedIn = signedIn\r\n        m.redraw()\r\n        if (journal.isSignedIn) {\r\n            let user = gapi_.auth2.getAuthInstance().currentUser.get()\r\n            syncer.user = user\r\n            let auth = user.getAuthResponse()\r\n            syncer.updateAuth(auth.access_token)\r\n            await initJournal()\r\n        } else {\r\n            journal.unload()\r\n        }\r\n    }\r\n\r\n    async function initJournal() {\r\n        let spreadsheetUrls = getStoredSpreadsheetUrls()\r\n        await journal.load(spreadsheetUrls)\r\n    }\r\n\r\n    function view() {\r\n        if (getTestMode() === TestMode.DEMO) {\r\n            journal.isSignedIn = true\r\n            journal.load(\"https://docs.google.com/spreadsheets/d/demo/edit\")\r\n            return []\r\n        } else {\r\n            return m(\"#googleApi\", [\r\n                (journal.showAddSpreadsheetTextbox) ? [spreadsheetsTextbox(), m(\"br\")] : [],\r\n                (journal.isSignedIn) ? addSpreadsheetButton() : [],\r\n                (journal.spreadsheet !== null) ? spreadsheetsSelect() : [],\r\n                (journal.isActive) ? sheetsSelect() : [],\r\n                signInOutButton(),\r\n                m(\"script\", gapiScriptSettings()),\r\n            ])\r\n        }\r\n    }\r\n\r\n    function signInOutButton() {\r\n        return (journal.isSignedIn)\r\n            ? m(\"button\", {\r\n                onclick: () => {\r\n                    if (getTestMode() === TestMode.RETURN_ROWS) { journal.unload() }\r\n                    gapi_.auth2.getAuthInstance().signOut()\r\n                }, class: \"authButton\"\r\n            }, \"Sign Out\")\r\n            : m(\"button\", { onclick: () => gapi_.auth2.getAuthInstance().signIn(), class: \"authButton\" }, \"Sign In\")\r\n    }\r\n\r\n    function addSpreadsheetButton() {\r\n        return m(\"button\", {\r\n            id: \"addSpreadsheet\",\r\n            onclick: async () => {\r\n                journal.showAddSpreadsheetTextbox = !journal.showAddSpreadsheetTextbox\r\n                if (!journal.showAddSpreadsheetTextbox) {\r\n                    let spreadsheetUrls = getStoredSpreadsheetUrls()\r\n                    await journal.load(spreadsheetUrls)\r\n                }\r\n            },\r\n        }, (journal.showAddSpreadsheetTextbox) ? \" ✓ \" : \"+/-\")\r\n    }\r\n\r\n    function spreadsheetsTextbox() {\r\n        return m(\"textarea\", {\r\n            id: \"spreadsheetURLs\",\r\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n            value: getStoredSpreadsheetUrls(),\r\n            oninput: (event: any) => setStoredSpreadsheetUrls(event.target.value),\r\n        })\r\n    }\r\n\r\n    function spreadsheetsSelect() {\r\n        return m(\"select\", {\r\n            onchange: (event: any) => {\r\n                let id = event.target.value\r\n                journal.switch(id, getStoredSpreadsheetSheetId(id))\r\n            },\r\n            id: \"spreadsheetSelect\",\r\n        }, [\r\n            Array.from(journal.spreadsheets).map(([id]) => [\r\n                m(\"option\", {\r\n                    value: id,\r\n                    selected: journal.spreadsheet!.id === id\r\n                }, id.substr(id.length - 6))\r\n            ])\r\n        ])\r\n    }\r\n\r\n    function sheetsSelect() {\r\n        return m(\"select\", {\r\n            onchange: (event: any) => {\r\n                journal.switch(journal.spreadsheet!.id, parseInt(event.target.value))\r\n                m.redraw()\r\n            },\r\n            id: \"sheetSelect\",\r\n        }, [\r\n            Array.from(journal.spreadsheet!.sheets).map(([id, sheet]) => [\r\n                m(\"option\", {\r\n                    value: id,\r\n                    selected: journal.isActive && journal.spreadsheet!.sheet!.id === id\r\n                }, sheet.title)\r\n            ])\r\n        ])\r\n    }\r\n\r\n    return { view: view }\r\n}\r\n","import { Tag } from \"../classes\"\nimport m from \"mithril\"\nimport { journal, search, refines } from \"..\"\n\nexport function refinesPane() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        if (journal.hideTagRefines) { return [] }\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes(): m.Vnode {\n        return m(\".tagRefineWrap\", (refines.simple.size === 0)? [] : [\n            refineKeyVnode(simpleTagsHeader, refines.simple.size),\n            Array.from(refines.simple, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(refines.complex, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: search.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: Tag) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", { type: \"checkbox\", checked: (tag.val === null)\n                    ? search.refinesQuery.simpleKeys.has(tag.clean)\n                    : search.refinesQuery.vals.has(tag.clean) }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: Tag) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            search.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            search.refinesQuery.keys.has(key)\n                ? search.refinesQuery.keys.delete(key)\n                : search.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: Tag) {\n        if (tag.val === null) {\n            search.refinesQuery.simpleKeys.has(tag.clean)\n                ? search.refinesQuery.simpleKeys.delete(tag.clean)\n                : search.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            search.refinesQuery.vals.has(tag.clean)\n                ? search.refinesQuery.vals.delete(tag.clean)\n                : search.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { syncer, journal } from \"..\"\nimport { SyncerState } from \"../types\"\n\nexport function syncStateIndicator() {\n\n    function view() {\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        if (journal.spreadsheets.size === 0) { return }\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncer.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive...\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused.\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"All changes saved.\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive...\"\n                break\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncer.state)\n    }\n\n    function unpauseSync() {\n        if (syncer.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncer.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncer.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { googleComponent, shelvesComponent } from \".\"\r\n\r\nexport function libraryView() {\r\n\r\n    function view() {\r\n        return m(\"#library\", [\r\n            m(googleComponent),\r\n            m(shelvesComponent),\r\n        ])\r\n    }\r\n\r\n    return {\r\n        view: view\r\n    }\r\n\r\n}","import m from \"mithril\"\r\n\r\n\r\nexport function journalsComponent() {\r\n\r\n    function view() {\r\n        let shelfId: string = m.route.param(\"shelfId\")\r\n        return m(\"#journals\", [\"0\", \"123\", \"456\"]\r\n            .map(journalId => m(\"li\", m(\"a\", { href: `#/library/${shelfId}/${journalId}` }, journalId)))\r\n        )\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n    }\r\n\r\n}","import m from \"mithril\"\r\nimport { googleComponent, journalsComponent } from \".\"\r\n\r\nexport function shelfView() {\r\n\r\n    function view() {\r\n        return m(\"#shelf\", [\r\n            m(googleComponent),\r\n            m(journalsComponent),\r\n        ])\r\n    }\r\n\r\n    return {\r\n        view: view\r\n    }\r\n\r\n}"],"sourceRoot":""}