{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"m\"","webpack:///./src/types/index.ts","webpack:///./src/controllers/index.ts","webpack:///./src/index.ts","webpack:///./src/components/index.ts","webpack:///./src/factories/index.ts","webpack:///./src/models/index.ts","webpack:///./src/errors/index.ts","webpack:///./src/types/errors.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncer.ts","webpack:///./src/controllers/urlController.ts","webpack:///./src/controllers/syncerController.ts","webpack:///./src/controllers/journalController.ts","webpack:///./src/views/index.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/components/googleComponent.ts","webpack:///./src/controllers/textController.ts","webpack:///./src/controllers/entryController.ts","webpack:///./src/factories/tagFactory.ts","webpack:///./src/models/UrlModel.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/models/ServiceWorkerModel.ts","webpack:///./src/errors/FriendlyError.ts","webpack:///./src/factories/shelfFactory.ts","webpack:///./src/factories/entryFactory.ts","webpack:///./src/controllers/caretController.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/controllers/libraryController.ts","webpack:///./src/components/entriesComponent.ts","webpack:///./src/components/shelvesComponent.ts","webpack:///./src/components/journalsComponent.ts","webpack:///./src/components/syncStateComponent.ts","webpack:///./src/components/addShelvesComponent.ts","webpack:///./src/components/breadcrumbComponent.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts","webpack:///./src/models/SearchModel.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","serviceWorkerModel","ServiceWorkerModel","googleModel","GoogleModel","syncerModel","SyncerModel","libraryModel","LibraryModel","urlModel","UrlModel","searchModel","SearchModel","root","document","getElementById","route","signinView","libraryView","shelfView","journalView","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","pause","super","this","payload","undefined","error","type","SyncerPayloadType","ERROR","SearchType","TestMode","SyncerResponseType","SyncerState","getActiveShelf","id","shelfId","shelves","urlController","redirect","hash","getActiveJournal","journalId","shelf","journals","getBreadcrumbTrail","breadcrumb","split","filter","crumb","length","trail","slice","join","title","parseInt","push","href","worker","Worker","updateAuth","token","pushSyncerTask","AUTH_UPDATE","onmessage","msg","data","requests","has","delete","SYNC_STATE","state","redraw","FriendlyError","message","TOKEN_REQUEST","onMessage","syncerController","unpause","UNPAUSE","getRows","journalTitle","GET_ROWS","spreadsheetId","sheetTitle","sheetId","rows","deleteRow","idx","DELETE_ROW","updateRow","content","UPDATE_ROW","getSheets","GET_SHEETS","sheets","updateTestMode","testMode","TEST_MODE_UPDATE","getSpreadsheet","GET_SPREADSHEET","spreadsheet","buildTags","journal","tags","Map","entries","Array","from","values","entry","reverse","tag","frq","set","tagFactory","createTag","raw","flag","separator","val","journalController","addEntry","moveEntry","fromIdx","toIdx","updateEntry","saved","deleteEntry","loadEntries","then","forEach","catch","finally","view","googleComponent","syncStateComponent","breadcrumbComponent","journalsComponent","isSignedIn","onclick","googleController","signOut","class","signIn","async","defer","src","onload","initGapi","textController","escape","unsafe","replace","clean","toLowerCase","tagPattern","entryController","save","entryIdx","sync","force","savedClean","tagMatches","getTags","update","safe","tokens","text","trim","matchesIter","matchAll","match","sort","a","b","index","getTagMatches","rendered","chars","splice","render","cleanTagString","str","endsWith","substring","cleanKey","cleanVal","renderedKey","renderedVal","TagModel","URL","window","location","hash_","DEMO","test","param","instanceOfTestMode","OFF","includes","BaseEntryModel","entryId","requestsCounter","INITIALIZING","Promise","resolve","reject","postMessage","scope","clientId","user","getAuthResponse","access_token","entryCounter","entryFactory","createEntry","shelfIds","ids","localStorage","setItem","getItem","navigator","addEventListener","serviceWorker","register","console","warn","shelfFactory","createShelf","properties","ShelfModel","sheet","JournalModel","getJournals","EntryModel","caretController","getCaretPosition","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","signedIn","gapi_","auth2","getAuthInstance","currentUser","libraryController","loadShelves","removeShelves","gapi","MockGapi","load","init","client_id","listen","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","MockIsSignedIn","spreadsheetIdPattern","reloadLoaded","keys","getSpreadsheetIdsFromUrls","urls","addShelves","caret","entriesList","map","entryContent","deleteEntryButton","entryVnode","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","target","blur","onEntryKeydown","oninput","onEntryInput","onupdate","onEntryUpdate","onblur","onEntryBlur","entryContentSettings","trust","delShelfButton","retryShelfLoadButton","shelfNode","link","journalList","syncStateText","txt","class_","stateColorClass","DOWNLOADING","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","newShelfUrls","addingShelves","addShelvesButton","addShelvesTextbox","placeholder","addShelvesComponent","shelvesComponent","entriesComponent","oninit","simpleRefines","complexRefines"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = m;","export * from \"./caret\"\nexport * from \"./errors\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncer\"\n","export * from \"./urlController\"\r\nexport * from \"./textController\"\r\nexport * from \"./entryController\"\r\nexport * from \"./caretController\"\r\nexport * from \"./googleController\"\r\nexport * from \"./syncerController\"\r\nexport * from \"./libraryController\"\r\nexport * from \"./journalController\"\r\n","import m from \"mithril\"\nimport { signinView, libraryView, shelfView, journalView } from \"./views\"\nimport {\n    ServiceWorkerModel, SyncerModel, LibraryModel, GoogleModel, UrlModel, SearchModel\n} from \"./models\"\n\nexport const serviceWorkerModel = new ServiceWorkerModel()\nexport const googleModel = new GoogleModel()\nexport const syncerModel = new SyncerModel()\nexport const libraryModel = new LibraryModel()\nexport const urlModel = new UrlModel()\nexport const searchModel = new SearchModel()\n\nconst root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,                                   // TODO switch to be about page\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/library/:shelfId/:journalId\": journalView,\n        // \"/demo\" : app,                                   // TODO\n    })\n}\n","export * from \"./googleComponent\"\nexport * from \"./entriesComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./journalsComponent\"\nexport * from \"./syncStateComponent\"\nexport * from \"./addShelvesComponent\"\nexport * from \"./breadcrumbComponent\"\n","export * from \"./tagFactory\"\nexport * from \"./shelfFactory\"\nexport * from \"./entryFactory\"\n","export * from \"./UrlModel\"\r\nexport * from \"./TagModel\"\r\nexport * from \"./EntryModel\"\r\nexport * from \"./ShelfModel\"\r\nexport * from \"./SyncerModel\"\r\nexport * from \"./GoogleModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./JournalModel\"\r\nexport * from \"./LibraryModel\"\r\nexport * from \"./ServiceWorkerModel\"\r\n","export * from \"./FriendlyError\"\n","import { ErrorPayload, SyncerPayloadType } from \".\"\n\nexport interface GapiErrorResponseBody {\n    code: number,\n    message: string,\n    status: string\n}\n\nexport interface GapiErrorResponse {\n    error: GapiErrorResponseBody\n}\n\nexport class SyncerError extends Error { // TODO: see if this can be moved to src/errors/\n    public payload: ErrorPayload\n\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean, pause?: boolean) {\n        super(errorMsg)\n        this.payload = {\n            pause: (pause !== undefined) ? pause : true,\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: SyncerPayloadType.ERROR,\n        }\n    }\n}\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"7\"\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSheetsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload | AuthUpdatePayload |\n    UnpausePayload | SyncStatePayload | ErrorPayload | TokenRequestPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    GET_SHEETS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n}\n\nexport interface GetSheetsPayload {\n    type: SyncerPayloadType.GET_SHEETS\n    spreadsheetId: string\n    sheets: gapi.client.sheets.Sheet[]\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n}\n","import m from \"mithril\"\nimport { libraryModel, urlModel } from \"..\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport const urlController = {\n    redirect: redirect,\n    getActiveShelf: getActiveShelf,\n    getActiveJournal: getActiveJournal,\n    getBreadcrumbTrail: getBreadcrumbTrail,\n}\n\nfunction redirect(hash: string) {\n    urlModel.hash = hash\n}\n\nfunction getActiveShelf(): ShelfModel | undefined {\n    let id = urlModel.shelfId\n    if (id === undefined) return undefined\n    return libraryModel.shelves.get(id)\n}\n\nfunction getActiveJournal(): JournalModel | undefined {\n    let id = urlModel.journalId\n    let shelf =  getActiveShelf()\n    if (id === undefined || shelf === undefined) return undefined\n    return shelf.journals.get(id)\n}\n\nfunction getBreadcrumbTrail() {\n    // TODO: add dropdowns on each shelf and journal crumb\n    let breadcrumb: m.Vnode[] = []\n    let hash = urlModel.hash.split(\"/\").filter(crumb => crumb !== \"#\" && crumb !== \"\")\n    let shelfId: string | undefined = undefined\n    for (let i = 0; i < hash.length; i++) {\n        let crumb = hash[i]\n        let trail = \"#/\" + hash.slice(0, i + 1).join(\"/\")\n        if (i === 1) {\n            shelfId = crumb\n            crumb = libraryModel.shelves.get(crumb)?.title || crumb\n        } else if (i === 2 && shelfId !== undefined) {\n            crumb = libraryModel.shelves.get(shelfId)?.journals.get(parseInt(crumb))?.title || crumb\n        }\n        if (i !== 0) breadcrumb.push(m(\"span\", \" / \"))\n        if (i === hash.length - 1) {\n            breadcrumb.push(m(\"span\", `${crumb}`))\n        } else {\n            breadcrumb.push(m(\"a\", { href: trail }, `${crumb}`))\n        }\n    }\n    return breadcrumb\n}\n","import m from \"mithril\"\r\nimport { FriendlyError } from \"../errors\"\r\nimport { googleModel, syncerModel } from \"..\"\r\nimport { SyncerPayloadType, TestMode, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nconst worker = new Worker(\"./js/syncWebWorker.js\")\r\nworker.onmessage = (msg: MessageEvent) => onMessage(msg)\r\n\r\nexport const syncerController = {\r\n    unpause: unpause,\r\n    getRows: getRows,\r\n    deleteRow: deleteRow,\r\n    updateRow: updateRow,\r\n    getSheets: getSheets,\r\n    updateAuth: updateAuth,\r\n    updateTestMode: updateTestMode,\r\n    getSpreadsheet: getSpreadsheet,\r\n}\r\n\r\nasync function updateTestMode(testMode: TestMode) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.TEST_MODE_UPDATE,\r\n        testMode: testMode,\r\n    }, worker)\r\n}\r\n\r\nfunction updateAuth(token: string | undefined) {\r\n    if (token === undefined) return\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.AUTH_UPDATE,\r\n        token: token,\r\n    }, worker)\r\n}\r\n\r\nfunction getSpreadsheet(spreadsheetId: string) {\r\n    let spreadsheet: gapi.client.sheets.Spreadsheet | undefined = undefined\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_SPREADSHEET,\r\n        spreadsheetId: spreadsheetId,\r\n        spreadsheet: spreadsheet\r\n    }, worker)\r\n}\r\n\r\nfunction getSheets(spreadsheetId: string) {\r\n    let sheets: gapi.client.sheets.Sheet[] = []\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_SHEETS,\r\n        spreadsheetId: spreadsheetId,\r\n        sheets: sheets\r\n    }, worker)\r\n}\r\n\r\nfunction getRows(shelfId: string, journalId: number, journalTitle: string) {\r\n    let rows: string[] = []\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_ROWS,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        rows: rows\r\n    }, worker)\r\n}\r\n\r\nasync function deleteRow(idx: number, spreadsheetId: string, sheetId: number) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.DELETE_ROW,\r\n        spreadsheetId: spreadsheetId,\r\n        sheetId: sheetId,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\nasync function updateRow(shelfId: string, journalId: number, journalTitle: string, idx: number, content: string) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UPDATE_ROW,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        content: content,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\n// TODO: updateRow\r\n\r\nasync function unpause() {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UNPAUSE\r\n    }, worker)\r\n}\r\n\r\nfunction onMessage(msg: MessageEvent) {\r\n    let { id, payload, error }: { id: string | null, payload: SyncerPayload, error: ErrorPayload } = msg.data\r\n    if (id !== null && syncerModel.requests.has(id)) {\r\n        syncerModel.requests.get(id)!({ payload, error })\r\n        syncerModel.requests.delete(id)\r\n    } else {\r\n        switch (payload.type) {\r\n            case SyncerPayloadType.SYNC_STATE:\r\n                syncerModel.state = payload.state\r\n                m.redraw()\r\n                break\r\n            case SyncerPayloadType.ERROR:\r\n                new FriendlyError(payload.error.message, payload.friendlyMsg)\r\n                break\r\n            case SyncerPayloadType.TOKEN_REQUEST:\r\n                updateAuth(googleModel.token)\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\n","import m from \"mithril\"\nimport { ErrorPayload } from \"../types\"\nimport { tagFactory } from \"../factories\"\nimport { FriendlyError } from \"../errors\"\nimport { JournalModel, TagModel } from \"../models\"\nimport { syncerController } from \"./syncerController\"\n\nexport const journalController = {\n    addEntry: addEntry,\n    moveEntry: moveEntry,\n    updateEntry: updateEntry,\n    deleteEntry: deleteEntry,\n    loadEntries: loadEntries,\n}\n\nfunction loadEntries(journal: JournalModel) {\n    syncerController.getRows(journal.shelf.id, journal.id, journal.title)\n        .then(payload => {\n           payload.rows.forEach((content, idx) => journal.addEntry(idx, content))\n        })\n        .catch((error: ErrorPayload) => {\n            new FriendlyError(error.error.message, error.friendlyMsg)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n}\n\nfunction addEntry(journal: JournalModel, idx: number, content: string) {\n    journal.addEntry(idx, content)\n    journal.tags = buildTags(journal)\n}\n\nfunction updateEntry(journal: JournalModel, idx: number, content: string) {\n    if (journal.entries[idx].entry.saved === content) return\n    journal.updateEntry(idx, content)\n    journal.tags = buildTags(journal)\n}\n\nfunction deleteEntry(journal: JournalModel, idx: number) {\n    journal.deleteEntry(idx)\n    journal.tags = buildTags(journal)\n}\n\nfunction moveEntry(journal: JournalModel, fromIdx: number, toIdx: number) {\n    if (fromIdx === toIdx) return\n    journal.moveEntry(fromIdx, toIdx)\n    journal.tags = buildTags(journal)\n}\n\nfunction buildTags(journal: JournalModel): Map<string, TagModel> {\n    let tags: Map<string, TagModel> = new Map()\n    let entries = Array.from(journal.entries.values())\n    for (let { entry } of entries.reverse()) {\n        for (let [key, tag] of entry.tags) {\n            if (tags.has(key)) {\n                tags.get(key)!.frq += tag.frq\n            } else {\n                tags.set(key, tagFactory.createTag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n            }\n        }\n    }\n    return tags\n}\n","export * from \"./shelfView\"\r\nexport * from \"./signinView\"\r\nexport * from \"./libraryView\"\r\nexport * from \"./journalView\"\r\n","import m from \"mithril\"\nimport { googleComponent, journalsComponent, syncStateComponent, breadcrumbComponent } from \"../components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { googleController } from \"../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return {\n            async: true,\n            defer: true,\n            src: googleModel.src,\n            onload: () => {\n                if (!googleModel.isSignedIn) {\n                    googleController.initGapi()\n                }\n            }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n","export const textController = {\n    escape: escape,\n    clean: clean,\n}\n\nfunction escape(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n\nfunction clean(content: string): string {\n    return content.toLowerCase()\n}\n","import { tagFactory } from \"../factories\"\nimport { EntryModel, TagModel } from \"../models\"\nimport { textController, syncerController } from \".\"\n\nconst tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\n\nexport const entryController = {\n    save: save,\n    update: update,\n}\n\nfunction save(entry: EntryModel, entryIdx: number, content: string, sync?: boolean, force?: boolean) {\n    if (entry.saved !== content || force) {\n        entry.saved = content\n        entry.savedClean = textController.clean(entry.savedClean)\n        entry.tags = getTags(entry.tagMatches)\n        if (sync) {\n            syncerController.updateRow(entry.shelf.id, entry.journal.id, entry.journal.title, entryIdx, content)\n        }\n    }\n}\n\nfunction update(entry: EntryModel, content: string) {\n    entry.raw = content\n    entry.clean = textController.clean(content)\n    entry.safe = textController.escape(entry.raw)\n    entry.tokens = tokenize(entry.clean)\n    entry.tagMatches = getTagMatches(entry.safe)\n    entry.rendered = render(entry.safe, entry.tagMatches)\n}\n\nfunction render(text: string, tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): string {\n    for (let { tag, match } of tagMatches) {\n        let chars = text.split(\"\")\n        chars.splice(match.index!, match[0].length, tag.rendered)\n        text = chars.join(\"\")\n    }\n    return text\n}\n\nfunction getTags(tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): Map<string, TagModel> {\n    let tags: Map<string, TagModel> = new Map()\n    for (let { tag } of tagMatches) {\n        if (tags.has(tag.clean)) {\n            tags.get(tag.clean)!.frq += 1\n        } else {\n            tags.set(tag.clean, tag)\n        }\n    }\n    return tags\n}\n\nfunction getTagMatches(text: string): { tag: TagModel, match: RegExpMatchArray }[] {\n    let tagMatches = []\n    let matchesIter = text.matchAll(tagPattern)\n    for (let match of matchesIter) {\n        let tag = tagFactory.createTag(match[0], match[1], match[2], match[3], match[4])\n        tagMatches.push({ tag: tag, match: match })\n    }\n    tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n    return tagMatches\n}\n\nfunction tokenize(text: string): string[] {\n    let tokens = text.split(\" \")\n    return tokens.filter(token => {\n        return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n    })\n}\n","import { textController } from \"../controllers\"\r\nimport { TagModel } from \"../models\"\r\n\r\nexport const tagFactory = {\r\n    createTag: createTag\r\n}\r\n\r\nfunction createTag(raw: string, flag: string, key: string, separator?: string | null, val?: string | null) {\r\n    separator = (separator !== undefined) ? separator : null\r\n    val = (val !== undefined) ? val : null\r\n    let clean = cleanTagString(raw)\r\n    let cleanKey = cleanTagString(key)\r\n    let cleanVal = (val !== null) ? cleanTagString(val) : null\r\n\r\n    let renderedKey = \"<span onclick=\\\"tagOnClick(event, '\"\r\n        + flag\r\n        + cleanKey\r\n        + ((separator !== null) ? separator : \"\")\r\n        + \"')\\\" class=\\\"\"\r\n        + ((separator !== null) ? \"tagKey\" : (val === null) ? \"simpleTag\" : \"roundTagVal\")\r\n        + \"\\\">\"\r\n        + flag\r\n        + key\r\n        + \"</span>\"\r\n\r\n    let renderedVal = \"\"\r\n\r\n    if (separator !== undefined && separator !== null) {\r\n        renderedVal = \"<span onclick=\\\"tagOnClick(event, '\"\r\n            + flag\r\n            + cleanKey\r\n            + separator\r\n            + ((cleanVal !== null) ? cleanVal.replace(/'/, \"\\\\'\") : \"\")\r\n            + \"')\\\" class=\\\"tagVal\\\">\"\r\n            + separator\r\n            + ((val !== null) ? val : \"\")\r\n            + \"</span>\"\r\n    }\r\n\r\n    return new TagModel(raw, flag, key, separator, val, clean, cleanKey, cleanVal, renderedKey + renderedVal)\r\n\r\n}\r\n\r\nfunction cleanTagString(str: string) {\r\n    str = textController.escape(str)\r\n    str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\r\n    str = str.toLowerCase()\r\n    return str\r\n}\r\n","import m from \"mithril\"\nimport { TestMode } from \"../types\"\n\nexport class UrlModel {\n\n    get hash(): string {\n        let url = new URL(window.location.href)\n        return url.hash\n    }\n    set hash(hash_: string) {\n        window.location.hash = hash_\n    }\n\n    get testMode(): TestMode {\n        if (this.hash === \"#!demo\") return TestMode.DEMO\n        let test = m.route.param(\"test\")\n        return (test !== null && this.instanceOfTestMode(test)) ? test : TestMode.OFF\n    }\n\n    private instanceOfTestMode(str: string): str is TestMode {\n        return ((<any>Object).values(TestMode).includes(str))\n    }\n\n    get shelfId(): string | undefined {\n        let id = m.route.param(\"shelfId\")\n        return (id === \"\") ? undefined : id\n    }\n    // TODO: set\n\n    get journalId(): number | undefined {\n        let id = m.route.param(\"journalId\")\n        return (id === \"\") ? undefined : parseInt(id)\n    }\n    // TODO: set\n}\n","export class TagModel {\n    public frq: number\n\n    constructor(\n        public raw: string,\n        public flag: string,\n        public key: string,\n        public separator: string | null,\n        public val: string | null,\n        public clean: string,\n        public cleanKey: string,\n        public cleanVal: string | null,\n        public rendered: string\n    ) { \n        this.frq = 1\n    }\n\n}\n","import { TagModel } from \".\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport interface IndexedEntry { // TODO see if this can be deleted\n    idx: number,\n    entry: EntryModel,\n}\n\nexport class BaseEntryModel {\n    public raw: string = \"\"\n    public safe: string = \"\"\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public tags: Map<string, TagModel> = new Map()\n    public tagMatches: { tag: TagModel, match: RegExpMatchArray }[] = []\n}\n\nexport class EntryModel extends BaseEntryModel {\n    public id: number\n    public shelf: ShelfModel\n    public saved: string = \"\"\n    public journal: JournalModel\n    public savedClean: string = \"\"\n\n    constructor(shelf: ShelfModel, journal: JournalModel, entryId: number) {\n        super()\n        this.id = entryId\n        this.shelf = shelf\n        this.journal = journal\n    }\n\n}\n","import { JournalModel } from \".\"\n\nexport class ShelfModel {\n    public id: string\n    public error: string | undefined\n    public title: string | undefined\n    public journals: Map<number, JournalModel> = new Map()\n\n    constructor(id: string, title?: string, error?: string) {\n        this.id = id\n        this.error = error\n        this.title = title\n    }\n\n}\n","import { SyncerState, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nexport class SyncerModel {\r\n    public requestsCounter: number\r\n    public requests: Map<string, Function>\r\n    public state: SyncerState\r\n\r\n    constructor() {\r\n        this.requestsCounter = 0\r\n        this.requests = new Map()\r\n        this.state = SyncerState.INITIALIZING\r\n    }\r\n\r\n    public pushSyncerTask<P extends SyncerPayload>(payload: P, worker: Worker): Promise<P> {\r\n        let id = `payload-${this.requestsCounter++}`\r\n        return new Promise((resolve, reject) => {\r\n            this.requests.set(id, ({ payload, error }: { payload: P, error: ErrorPayload }) => {\r\n                (error) ? reject(error) : resolve(payload)\r\n            })\r\n            worker.postMessage({ id, payload })\r\n        })\r\n    }\r\n\r\n}\r\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nexport class GoogleModel {\n    public src: string\n    public scope: string\n    public clientId: string\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    constructor(isSignedIn?: boolean) {\n        this.isSignedIn = isSignedIn\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\n            \"https://www.googleapis.com/auth/spreadsheets\",\n        ].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    get token(): string | undefined {\n        if (!this.user) return\n        let auth = this.user.getAuthResponse()\n        return auth.access_token\n    }\n}\n","import { EntryModel, TagModel } from \".\"\nimport { entryFactory } from \"../factories\"\nimport { ShelfModel } from \"./ShelfModel\"\n\nexport class JournalModel {\n    public id: number\n    public title: string\n    public shelf: ShelfModel\n    public entryCounter: number\n    public tags: Map<string, TagModel>\n    public entries: { id: number, entry: EntryModel }[]\n\n    constructor(shelf: ShelfModel, journalId: number, journalTitle: string) {\n        this.id = journalId\n        this.entries = []\n        this.title = journalTitle\n        this.tags = new Map()\n        this.entryCounter = 0\n        this.shelf = shelf\n    }\n\n    public addEntry(idx: number, content: string) {\n        let id = this.entryCounter += 1\n        let entry = entryFactory.createEntry(this.shelf, this, id, idx, content)\n        this.entries.splice(idx, 0, { id, entry })\n    }\n\n    public updateEntry(idx: number, content: string) {\n        this.entries[idx].entry.saved = content\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)[0]\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        let entry = this.entries.splice(fromIdx, 1)[0]\n        this.entries.splice(toIdx, 0, entry)\n    }\n\n}\n","import { ShelfModel } from \".\"\n\nexport class LibraryModel {\n    public shelves: Map<string, ShelfModel | undefined>\n\n    constructor() {\n        this.shelves = new Map()\n        this.shelfIds.forEach(id => this.shelves.set(id, undefined))\n    }\n\n    set shelfIds(ids: string[]) {\n        localStorage.setItem(\"spreadsheetIds\", ids.join(\",\"))\n    }\n    get shelfIds(): string[] {\n        let ids = localStorage.getItem(\"spreadsheetIds\")\n        return (ids === null) ? [] : ids.split(\",\")\n    }\n\n}\n","import { FriendlyError } from \"../errors\"\n\nexport class ServiceWorkerModel {\n    constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            throw new FriendlyError(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n}\n","import m from \"mithril\"\n\nexport class FriendlyError extends Error {\n    constructor(errorMsg: string, public friendlyMsg: string) {\n        super(errorMsg)\n        console.warn(errorMsg)\n        // journal.errors.push(friendlyMsg) // TODO reassign\n        m.redraw()\n    }\n}\n","import { ShelfModel, JournalModel } from \"../models\"\n\nexport const shelfFactory = {\n    createShelf: createShelf,\n}\n\nfunction createShelf(spreadsheetId: string, spreadsheet?: gapi.client.sheets.Spreadsheet, error?: string): ShelfModel {\n    if (\n        spreadsheet !== undefined &&\n        spreadsheet.spreadsheetId !== undefined &&\n        spreadsheet.properties !== undefined &&\n        spreadsheet.properties.title !== undefined &&\n        spreadsheet.sheets !== undefined\n    ) {\n        let shelf = new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title)\n        getJournals(shelf, spreadsheet.sheets).forEach(journal => shelf.journals.set(journal.id, journal))\n        return shelf\n    }\n    return new ShelfModel(spreadsheetId, undefined, error)\n}\n\nfunction getJournals(shelf: ShelfModel, sheets: gapi.client.sheets.Sheet[]): JournalModel[] {\n    let journals: JournalModel[] = []\n    sheets.forEach(sheet => {\n        if (\n            sheet.properties !== undefined &&\n            sheet.properties.title !== undefined &&\n            sheet.properties.sheetId !== undefined\n        ) {\n            let journal = new JournalModel(\n                shelf, sheet.properties.sheetId, sheet.properties.title\n            )\n            if (journal === undefined) return\n            journals.push(journal)\n        }\n    })\n    return journals\n}\n","import { entryController } from \"../controllers\"\nimport { EntryModel, ShelfModel, JournalModel } from \"../models\"\n\nexport const entryFactory = {\n    createEntry: createEntry\n}\n\nfunction createEntry(shelf: ShelfModel, journal: JournalModel, entryId: number, entryIdx: number, content: string) {\n    let entry = new EntryModel(shelf, journal, entryId)\n    entryController.update(entry, content)\n    entryController.save(entry, entryIdx, content, false, true)\n    return entry\n}\n","export const caretController = {\n    getCaretPosition: getCaretPosition,\n    setCaretPosition: setCaretPosition,\n}\n\nfunction node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nfunction getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nfunction setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { googleModel, urlModel } from \"..\"\r\nimport { syncerController, libraryController } from \"../controllers\"\r\n\r\nexport const googleController = {\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    initGapi: initGapi,\r\n}\r\n\r\nfunction signOut() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\r\n}\r\n\r\nfunction signIn() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\r\n}\r\n\r\nfunction initGapi() {\r\n    let gapi_ = (urlModel.testMode === TestMode.OFF) ? gapi : new MockGapi()\r\n    googleModel.gapi_ = gapi_\r\n    googleModel.gapi_.load('auth2', () => {\r\n        googleModel.gapi_!.auth2.init({\r\n            scope: googleModel.scope, client_id: googleModel.clientId\r\n        }).then(() => {\r\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\r\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\r\n        })\r\n    })\r\n}\r\n\r\nasync function isSignedIn(signedIn: boolean) {\r\n    googleModel.isSignedIn = signedIn\r\n    if (googleModel.isSignedIn) {\r\n        googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\r\n        syncerController.updateAuth(googleModel.token)\r\n        libraryController.loadShelves()\r\n    } else {\r\n        libraryController.removeShelves()\r\n    }\r\n    m.redraw()\r\n\r\n    // if (getTestMode() === TestMode.DEMO) {\r\n    //     journal.isSignedIn = true\r\n    //     journal.load(\"https://docs.google.com/spreadsheets/d/demo/edit\")\r\n    //     return []\r\n    // }\r\n}\r\n","export * from \"./Gapi\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { FriendlyError } from \"../errors\"\nimport { shelfFactory } from \"../factories\"\nimport { syncerController } from \"../controllers\"\nimport { urlController } from \"./urlController\"\nimport { journalController } from \"./journalController\"\n\nconst spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n\nexport const libraryController = {\n    addShelves: addShelves,\n    loadShelves: loadShelves,\n    removeShelves: removeShelves,\n    getSpreadsheetIdsFromUrls: getSpreadsheetIdsFromUrls,\n}\n\nfunction addShelves(urls: string) {\n    let ids = getSpreadsheetIdsFromUrls(urls)\n    ids = ids.filter(id => !libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.set(id, undefined))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n    loadShelves(false, ids)\n}\n\nfunction removeShelves(ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    ids = ids.filter(id => libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.delete(id))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n}\n\nfunction loadShelves(reloadLoaded?: boolean, ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    if (reloadLoaded) {\n        ids.forEach(id => libraryModel.shelves.set(id, undefined))\n        m.redraw()\n    }\n    ids.filter(id => !libraryModel.shelves.get(id))\n        .forEach(id => syncerController.getSpreadsheet(id)\n        .then(payload => {\n            let shelf = shelfFactory.createShelf(id, payload.spreadsheet)\n            libraryModel.shelves.set(shelf.id, shelf)\n            let journal = urlController.getActiveJournal()\n            if (journal && journal.shelf === shelf) {\n                journalController.loadEntries(journal)\n            }\n        })\n        .catch((error: ErrorPayload) => {\n            new FriendlyError(error.error.message, error.friendlyMsg)\n            let shelf = shelfFactory.createShelf(id, undefined, error.friendlyMsg)\n            libraryModel.shelves.set(id, shelf)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n    )\n}\n\nfunction getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n    let ids: string[] = []\n    if (urls) {\n        Array.from(urls.matchAll(spreadsheetIdPattern)).forEach(m => ids.push(m[1]))\n    }\n    return ids\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { JournalModel, EntryModel } from \"../models\"\nimport { caretController, urlController, entryController, journalController } from \"../controllers\"\n\nexport function entriesComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        let shelf = urlController.getActiveShelf()\n        let journal = urlController.getActiveJournal()\n        if (!shelf || !journal) return null\n\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesList(journal),\n        ])\n    }\n\n    function entriesList(journal: JournalModel) {\n        return journal.entries.map(({ entry }, entryIdx) => entryVnode(entry, entryIdx))\n    }\n\n    function entryVnode(entry: EntryModel, entryIdx: number): m.Vnode {\n        return m(\".entryWrap\", { id: `entry-${entry.id}` }, [\n            entryContent(entry, entryIdx),\n            deleteEntryButton(entry, entryIdx),\n        ])\n    }\n\n    function deleteEntryButton(entry: EntryModel, entryIdx: number) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: async () => journalController.deleteEntry(entry.journal, entryIdx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: EntryModel, entryIdx: number) {\n        return m(\"div\", entryContentSettings(entry, entryIdx), m.trust(entry.rendered))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: EntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    async function onEntryBlur(event: any, entry: EntryModel, entryIdx: number) {\n        event.redraw = false\n        entryController.save(entry, entryIdx, event.target.innerText, true)\n            \n    }\n\n    function entryContentSettings(entry: EntryModel, entryIdx: number) {\n        return {\n            id: `entry-${entryIdx}-content`,\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, entryIdx),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ShelfModel } from \"../models\"\nimport { libraryController } from \"../controllers\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        let shelves = Array.from(libraryModel.shelves.entries())\n        return m(\"#shelvesList\", shelves.map(([id, shelf]) => shelfNode(id, shelf)))\n    }\n\n    function delShelfButton(id: string) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: () => libraryController.removeShelves([id])\n        }, \"del\")\n    }\n\n    function retryShelfLoadButton(id: string) {\n        return m(\"button\", {\n            onclick: () => libraryController.loadShelves(true, [id])\n        }, \"retry\")\n    }\n\n    function shelfNode(id: string, shelf: ShelfModel | undefined) {\n        if (shelf === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", id)\n            ])\n        } else if (shelf.error !== undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", `${id} ${shelf.error}`),\n                retryShelfLoadButton(id)\n            ])\n        } else {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"a\", { href: `#/library/${id}` }, shelf.title)\n            ])\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}","import m from \"mithril\"\nimport { urlController } from \"../controllers\"\n\nexport function journalsComponent() {\n\n    function view() {\n        return m(\"#journals\", journalList())\n    }\n\n    function journalList() {\n        let shelf = urlController.getActiveShelf()\n        if (shelf === undefined) {\n            urlController.redirect(\"/library\")\n            return\n        }\n        return Array.from(shelf.journals.values()).map(journal => {\n            let link = `#/library/${journal.shelf.id}/${journal.id}`\n            return m(\"li\", m(\"a\", { href: link }, journal.title))\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}","import m from \"mithril\"\nimport { syncerModel } from \"..\"\nimport { SyncerState } from \"../types\"\nimport { syncerController } from \"../controllers\"\n\nexport function syncStateComponent() {\n\n    function view() {\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncerModel.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive...\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused.\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"Cloud synced.\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive...\"\n                break\n            case SyncerState.INITIALIZING:\n                txt = \"Initializing...\"\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncerModel.state)\n    }\n\n    function unpauseSync() {\n        if (syncerModel.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncerController.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncerModel.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { libraryController } from \"../controllers\"\r\n\r\nexport function addShelvesComponent() {\r\n\r\n    let newShelfUrls = \"\"\r\n    let addingShelves = false\r\n\r\n    function view() {\r\n        return m(\"#addShelves\", [\r\n            addShelvesButton(),\r\n            addShelvesTextbox(),\r\n        ])\r\n    }\r\n\r\n    function addShelvesButton() {\r\n        return m(\"button\", {\r\n            id: \"addShelvesButton\",\r\n            onclick: async () => {\r\n                if (addingShelves) libraryController.addShelves(newShelfUrls)\r\n                newShelfUrls = \"\"\r\n                addingShelves = !addingShelves\r\n            }\r\n        }, (addingShelves) ? \" ✓ \" : \"+/-\")\r\n    }\r\n\r\n    function addShelvesTextbox() {\r\n        if (!addingShelves) return null\r\n        return m(\"textarea\", {\r\n            id: \"addShelvesText\",\r\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n            oninput: (event: any) => newShelfUrls = event.target.value\r\n        })\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n    }\r\n\r\n}","import m from \"mithril\"\nimport { urlController } from \"../controllers\"\n\nexport function breadcrumbComponent() {\n\n    function view() {\n        return m(\"#breadcrumb\", urlController.getBreadcrumbTrail())\n    }\n\n    return {\n        view: view,\n    }\n\n}","import m from \"mithril\"\r\nimport { googleModel } from \"..\"\r\nimport { googleComponent } from \"../components\"\r\n\r\nexport function signinView() {\r\n\r\n    function view() {\r\n        return m(\"#auth\", [\r\n            m(googleComponent),\r\n        ])\r\n    }\r\n\r\n    function onupdate() {\r\n        if (googleModel.isSignedIn) {\r\n            window.location.hash = \"/library\" // TODO: redirect to correct place\r\n        }\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n\r\n}","import m from \"mithril\"\nimport { \n    googleComponent, shelvesComponent, syncStateComponent, addShelvesComponent\n} from \"../components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(syncStateComponent),\n            m(addShelvesComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}","import m from \"mithril\"\nimport { urlController, journalController } from \"../controllers\"\nimport { googleComponent, breadcrumbComponent, entriesComponent, syncStateComponent } from \"../components\"\n\nexport function journalView() {\n\n    function oninit() {\n        let journal = urlController.getActiveJournal()\n        if (!journal) return\n        journalController.loadEntries(journal)\n    }\n\n    function view() {\n        let shelf = urlController.getActiveShelf()\n        let journal = urlController.getActiveJournal()\n\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(\"span\", `Shelf: ${shelf?.title}, Journal: ${journal?.title}`),\n            m(entriesComponent)\n        ])\n    }\n\n    return {\n        view: view,\n        oninit: oninit,\n    }\n\n}\n","import { TagModel } from \"../models\"\n\nexport class SearchModel {\n    public simpleRefines: Map<string, TagModel> = new Map()\n    public complexRefines: Map<string, TagModel[]> = new Map()\n\n    constructor() { }\n}\n"],"sourceRoot":""}