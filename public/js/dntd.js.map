{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"m\"","webpack:///./src/types/index.ts","webpack:///./src/controllers/index.ts","webpack:///./src/index.ts","webpack:///./src/factories/index.ts","webpack:///./src/components/index.ts","webpack:///./src/errors/index.ts","webpack:///./src/models/index.ts","webpack:///./src/types/errors.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncer.ts","webpack:///./src/controllers/urlController.ts","webpack:///./src/controllers/syncerController.ts","webpack:///./src/controllers/entryController.ts","webpack:///./src/models/SearchModel.ts","webpack:///./src/controllers/journalController.ts","webpack:///./src/views/index.ts","webpack:///./src/components/testModeComponent.ts","webpack:///./src/errors/FriendlyError.ts","webpack:///./src/controllers/textController.ts","webpack:///./src/factories/tagFactory.ts","webpack:///./src/models/UrlModel.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/models/ServiceWorkerModel.ts","webpack:///./src/factories/shelfFactory.ts","webpack:///./src/factories/entryFactory.ts","webpack:///./src/controllers/caretController.ts","webpack:///./src/controllers/searchController.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/controllers/libraryController.ts","webpack:///./src/components/googleComponent.ts","webpack:///./src/components/composeComponent.ts","webpack:///./src/components/entriesComponent.ts","webpack:///./src/components/shelvesComponent.ts","webpack:///./src/components/refinesComponent.ts","webpack:///./src/components/journalsComponent.ts","webpack:///./src/components/syncStateComponent.ts","webpack:///./src/components/searchbarComponent.ts","webpack:///./src/components/addShelvesComponent.ts","webpack:///./src/components/breadcrumbComponent.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts","webpack:///./src/models/AppStateModel.ts","webpack:///./src/controllers/appStateController.ts","webpack:///./src/views/testModeView.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","appStateModel","AppStateModel","serviceWorkerModel","ServiceWorkerModel","googleModel","GoogleModel","syncerModel","SyncerModel","libraryModel","LibraryModel","urlModel","UrlModel","searchModel","SearchModel","root","document","getElementById","route","signinView","testModeView","libraryView","shelfView","journalView","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","pause","super","this","payload","undefined","error","type","SyncerPayloadType","ERROR","SearchType","TestMode","str","values","includes","SyncerResponseType","SyncerState","getActiveShelf","id","shelfId","shelves","urlController","redirect","hash","getActiveJournal","journalId","shelf","journals","getBreadcrumbTrail","breadcrumb","split","filter","crumb","length","trail","slice","join","title","parseInt","push","href","worker","Worker","updateAuth","token","pushSyncerTask","AUTH_UPDATE","onmessage","msg","data","requests","has","delete","FriendlyError","SYNC_STATE","state","redraw","message","TOKEN_REQUEST","onMessage","syncerController","unpause","UNPAUSE","getRows","journalTitle","GET_ROWS","spreadsheetId","sheetTitle","sheetId","rows","deleteRow","idx","DELETE_ROW","updateRow","content","UPDATE_ROW","updateTestMode","testMode","TEST_MODE_UPDATE","getSpreadsheet","GET_SPREADSHEET","spreadsheet","tagPattern","entryController","save","entry","entryIdx","sync","force","saved","savedClean","textController","clean","tags","tagMatches","Map","tag","frq","set","getTags","journal","update","raw","safe","escape","tokens","text","trim","matchesIter","matchAll","match","tagFactory","createTag","sort","a","b","index","getTagMatches","rendered","chars","splice","render","searchType","NONE","simpleRefines","complexRefines","barQuery","entryFactory","createBaseEntry","refinesQuery","keys","Set","vals","simpleKeys","Array","from","addEntry","createJournalEntry","buildTags","entries","reverse","flag","separator","val","searchController","buildRefines","journalController","moveEntry","fromIdx","toIdx","deleteEntry","loadEntries","keepJournal","forEach","loaded","unloadEntries","then","catch","finally","stopDemoButton","DEMO","onclick","OFF","class","view","console","warn","unsafe","replace","toLowerCase","cleanTagString","endsWith","substring","cleanKey","cleanVal","renderedKey","renderedVal","TagModel","window","location","hash_","URL","url","searchParams","param","BaseEntryModel","entryId","requestsCounter","INITIALIZING","Promise","resolve","reject","postMessage","isSignedIn","src","scope","clientId","user","getAuthResponse","access_token","shelfIds","ids","localStorage","removeItem","setItem","getItem","navigator","addEventListener","serviceWorker","register","shelfFactory","createShelf","properties","sheets","ShelfModel","sheet","JournalModel","getJournals","entryCounter","JournalEntryModel","caretController","getCaretPosition","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","search","query","sourceEntries","filteredEntries","AND","every","OR","some","startsWith","reset","cleanRefines","map","updateSearchbar","signedIn","gapi_","auth2","getAuthInstance","currentUser","libraryController","loadShelves","removeShelves","googleController","signIn","signOut","initGapi","gapi","MockGapi","load","init","client_id","listen","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","MockIsSignedIn","spreadsheetIdPattern","reloadLoaded","getSpreadsheetIdsFromUrls","urls","addShelves","async","defer","onload","caret","composePrefixEntry","composeContentEntry","composeSuffixEntry","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","extraSettings","baseSettings","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","composeKeydown","oninput","target","composeInput","onupdate","assign","trust","entriesList","entryContent","deleteEntryButton","entryVnode","blur","onEntryKeydown","onEntryInput","onEntryUpdate","onblur","onEntryBlur","entryContentSettings","delShelfButton","retryShelfLoadButton","shelfNode","expanded","simpleRefinesVnodes","size","refineKeyVnode","refineValVnode","count","metaKey","ctrlKey","add","refineTagKeyOnClick","tagRefineKeySettings","checked","tagRefineValSettings","tagClass","hideClass","refineTagValOnClick","link","journalList","syncStateText","txt","class_","stateColorClass","DOWNLOADING","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","placeholder","onSearchInput","onSearchKeydown","newShelfUrls","addingShelves","addShelvesMessage","addShelvesButton","addShelvesTextbox","googleComponent","testModeComponent","syncStateComponent","breadcrumbComponent","journalsComponent","addShelvesComponent","shelvesComponent","searchbarComponent","refinesComponent","entriesComponent","composeComponent","oninit","appStateController","instanceOfTestMode","getParam"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = m;","export * from \"./caret\"\nexport * from \"./errors\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncer\"\n","export * from \"./urlController\"\r\nexport * from \"./textController\"\r\nexport * from \"./entryController\"\r\nexport * from \"./caretController\"\r\nexport * from \"./searchController\"\r\nexport * from \"./googleController\"\r\nexport * from \"./syncerController\"\r\nexport * from \"./libraryController\"\r\nexport * from \"./journalController\"\r\nexport * from \"./appStateController\"\r\n","import m from \"mithril\"\nimport { signinView, libraryView, shelfView, journalView, testModeView } from \"./views\"\nimport {\n    ServiceWorkerModel, SyncerModel, LibraryModel, GoogleModel, UrlModel, SearchModel, AppStateModel\n} from \"./models\"\n\nexport const appStateModel = new AppStateModel()\nexport const serviceWorkerModel = new ServiceWorkerModel()\nexport const googleModel = new GoogleModel()\nexport const syncerModel = new SyncerModel()\nexport const libraryModel = new LibraryModel()\nexport const urlModel = new UrlModel()\nexport const searchModel = new SearchModel()\n\nconst root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,        // TODO switch to be about page\n        \"/demo\": testModeView,\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/setTestMode/:testMode\": testModeView,\n        \"/library/:shelfId/:journalId\": journalView,\n    })\n}\n","export * from \"./tagFactory\"\nexport * from \"./shelfFactory\"\nexport * from \"./entryFactory\"\n","export * from \"./googleComponent\"\nexport * from \"./composeComponent\"\nexport * from \"./entriesComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./refinesComponent\"\nexport * from \"./testModeComponent\"\nexport * from \"./journalsComponent\"\nexport * from \"./syncStateComponent\"\nexport * from \"./searchbarComponent\"\nexport * from \"./addShelvesComponent\"\nexport * from \"./breadcrumbComponent\"","export * from \"./FriendlyError\"\n","export * from \"./UrlModel\"\r\nexport * from \"./TagModel\"\r\nexport * from \"./EntryModel\"\r\nexport * from \"./ShelfModel\"\r\nexport * from \"./SyncerModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./GoogleModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./JournalModel\"\r\nexport * from \"./LibraryModel\"\r\nexport * from \"./AppStateModel\"\r\nexport * from \"./ServiceWorkerModel\"\r\n","import { ErrorPayload, SyncerPayloadType } from \".\"\n\nexport interface GapiErrorResponseBody {\n    code: number,\n    message: string,\n    status: string\n}\n\nexport interface GapiErrorResponse {\n    error: GapiErrorResponseBody\n}\n\nexport class SyncerError extends Error { // TODO: see if this can be moved to src/errors/\n    public payload: ErrorPayload\n\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean, pause?: boolean) {\n        super(errorMsg)\n        this.payload = {\n            pause: (pause !== undefined) ? pause : true,\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: SyncerPayloadType.ERROR,\n        }\n    }\n}\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"demomode\"\n}\n\nexport function instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload | AuthUpdatePayload |\n    UnpausePayload | SyncStatePayload | ErrorPayload | TokenRequestPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n}\n","import m from \"mithril\"\nimport { libraryModel, urlModel } from \"..\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport const urlController = {\n    redirect: redirect,\n    getActiveShelf: getActiveShelf,\n    getActiveJournal: getActiveJournal,\n    getBreadcrumbTrail: getBreadcrumbTrail,\n}\n\nfunction redirect(hash: string) {\n    urlModel.hash = hash\n}\n\nfunction getActiveShelf(): ShelfModel | undefined {\n    let id = urlModel.shelfId\n    if (id === undefined) return undefined\n    return libraryModel.shelves.get(id)\n}\n\nfunction getActiveJournal(): JournalModel | undefined {\n    let id = urlModel.journalId\n    let shelf = getActiveShelf()\n    if (id === undefined || shelf === undefined) return undefined\n    return shelf.journals.get(id)\n}\n\nfunction getBreadcrumbTrail() {\n    let breadcrumb: m.Vnode[] = []\n    let hash = urlModel.hash.split(\"?\")[0].split(\"/\").filter(crumb => crumb !== \"#\" && crumb !== \"\")\n    let shelfId: string | undefined = undefined\n    for (let i = 0; i < hash.length; i++) {\n        let crumb = hash[i]\n        let trail = \"#/\" + hash.slice(0, i + 1).join(\"/\")\n        if (i === 2) {\n            shelfId = crumb\n            crumb = libraryModel.shelves.get(crumb)?.title || crumb\n        } else if (i === 3 && shelfId !== undefined) {\n            crumb = libraryModel.shelves.get(shelfId)?.journals.get(parseInt(crumb))?.title || crumb\n        }\n        if (i !== 0) breadcrumb.push(m(\"span\", \" / \"))\n        if (i === hash.length - 1) {\n            breadcrumb.push(m(\"span\", `${crumb}`))\n        } else {\n            breadcrumb.push(m(\"a\", { href: trail }, `${crumb}`))\n        }\n    }\n    return breadcrumb\n}\n","import m from \"mithril\"\r\nimport { FriendlyError } from \"../errors\"\r\nimport { googleModel, syncerModel } from \"..\"\r\nimport { SyncerPayloadType, TestMode, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nconst worker = new Worker(\"./js/syncWebWorker.js\")\r\nworker.onmessage = (msg: MessageEvent) => onMessage(msg)\r\n\r\nexport const syncerController = {\r\n    unpause: unpause,\r\n    getRows: getRows,\r\n    deleteRow: deleteRow,\r\n    updateRow: updateRow,\r\n    updateAuth: updateAuth,\r\n    updateTestMode: updateTestMode,\r\n    getSpreadsheet: getSpreadsheet,\r\n}\r\n\r\nasync function updateTestMode(testMode: TestMode) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.TEST_MODE_UPDATE,\r\n        testMode: testMode,\r\n    }, worker)\r\n}\r\n\r\nfunction updateAuth(token: string | undefined) {\r\n    if (token === undefined) return\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.AUTH_UPDATE,\r\n        token: token,\r\n    }, worker)\r\n}\r\n\r\nfunction getSpreadsheet(spreadsheetId: string) {\r\n    let spreadsheet: gapi.client.sheets.Spreadsheet | undefined = undefined\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_SPREADSHEET,\r\n        spreadsheetId: spreadsheetId,\r\n        spreadsheet: spreadsheet\r\n    }, worker)\r\n}\r\n\r\nfunction getRows(shelfId: string, journalId: number, journalTitle: string) {\r\n    let rows: string[] = []\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_ROWS,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        rows: rows\r\n    }, worker)\r\n}\r\n\r\nasync function deleteRow(idx: number, spreadsheetId: string, sheetId: number) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.DELETE_ROW,\r\n        spreadsheetId: spreadsheetId,\r\n        sheetId: sheetId,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\nasync function updateRow(shelfId: string, journalId: number, journalTitle: string, idx: number, content: string) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UPDATE_ROW,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        content: content,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\n// TODO: createRow\r\n\r\n// TODO: moveRow\r\n\r\nasync function unpause() {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UNPAUSE\r\n    }, worker)\r\n}\r\n\r\nfunction onMessage(msg: MessageEvent) {\r\n    let { id, payload, error }: { id: string | null, payload: SyncerPayload, error: ErrorPayload } = msg.data\r\n    if (id !== null && syncerModel.requests.has(id)) {\r\n        syncerModel.requests.get(id)!({ payload, error })\r\n        syncerModel.requests.delete(id)\r\n    } else if (payload !== undefined) {\r\n        switch (payload.type) {\r\n            case SyncerPayloadType.SYNC_STATE:\r\n                syncerModel.state = payload.state\r\n                m.redraw()\r\n                break\r\n            case SyncerPayloadType.ERROR:\r\n                new FriendlyError(payload.error.message, payload.friendlyMsg)\r\n                break\r\n            case SyncerPayloadType.TOKEN_REQUEST:\r\n                updateAuth(googleModel.token)\r\n                break\r\n        }\r\n    } else {\r\n        throw new FriendlyError(\"undefined payload\", \"An unexpected error occurred.\")\r\n    }\r\n}\r\n","import { tagFactory } from \"../factories\"\nimport { JournalEntryModel, TagModel, BaseEntryModel } from \"../models\"\nimport { textController, syncerController } from \".\"\n\nconst tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\n\nexport const entryController = {\n    save: save,\n    update: update,\n}\n\nfunction save(entry: JournalEntryModel, entryIdx: number, content: string, sync?: boolean, force?: boolean) {\n    if (entry.saved !== content || force) {\n        entry.saved = content\n        entry.savedClean = textController.clean(entry.saved)\n        entry.tags = getTags(entry.tagMatches)\n        if (sync) {\n            syncerController.updateRow(entry.shelf.id, entry.journal.id, entry.journal.title, entryIdx, content)\n        }\n    }\n}\n\nfunction update(entry: BaseEntryModel | JournalEntryModel, content: string) {\n    entry.raw = content\n    entry.clean = textController.clean(content)\n    entry.safe = textController.escape(entry.raw)\n    entry.tokens = tokenize(entry.clean)\n    entry.tagMatches = getTagMatches(entry.safe)\n    entry.rendered = render(entry.safe, entry.tagMatches)\n}\n\nfunction render(text: string, tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): string {\n    for (let { tag, match } of tagMatches) {\n        let chars = text.split(\"\")\n        chars.splice(match.index!, match[0].length, tag.rendered)\n        text = chars.join(\"\")\n    }\n    return text\n}\n\nfunction getTags(tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): Map<string, TagModel> {\n    let tags: Map<string, TagModel> = new Map()\n    for (let { tag } of tagMatches) {\n        if (tags.has(tag.clean)) {\n            tags.get(tag.clean)!.frq += 1\n        } else {\n            tags.set(tag.clean, tag)\n        }\n    }\n    return tags\n}\n\nfunction getTagMatches(text: string): { tag: TagModel, match: RegExpMatchArray }[] {\n    let tagMatches = []\n    let matchesIter = text.matchAll(tagPattern)\n    for (let match of matchesIter) {\n        let tag = tagFactory.createTag(match[0], match[1], match[2], match[3], match[4])\n        tagMatches.push({ tag: tag, match: match })\n    }\n    tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n    return tagMatches\n}\n\nfunction tokenize(text: string): string[] {\n    let tokens = text.split(\" \")\n    return tokens.filter(token => {\n        return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n    })\n}\n","import { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { TagModel, BaseEntryModel } from \".\"\n\nexport class SearchModel {\n    public searchType: SearchType = SearchType.NONE\n    public simpleRefines: Map<string, TagModel> = new Map()\n    public complexRefines: Map<string, TagModel[]> = new Map()\n    public barQuery: BaseEntryModel = entryFactory.createBaseEntry()\n    public refinesQuery: {\n        keys: Set<string>,\n        vals: Map<string, TagModel>,\n        simpleKeys: Map<string, TagModel>\n    } = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    constructor() { }\n\n    get query(): BaseEntryModel {\n        return entryFactory.createBaseEntry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { FriendlyError } from \"../errors\"\nimport { JournalModel, TagModel } from \"../models\"\nimport { tagFactory, entryFactory } from \"../factories\"\nimport { syncerController, searchController, entryController } from \".\"\n\nexport const journalController = {\n    addEntry: addEntry,\n    moveEntry: moveEntry,\n    buildTags: buildTags,\n    deleteEntry: deleteEntry,\n    loadEntries: loadEntries,\n}\n\nfunction unloadOtherJournals(keepJournal: JournalModel) {\n    libraryModel.shelves.forEach(shelf => {\n        if (shelf === undefined) return\n        shelf.journals.forEach(journal => {\n            if (keepJournal.shelf.id !== journal.shelf.id || keepJournal.id !== journal.id) {\n                unloadEntries(journal)\n            }\n        })\n    })\n}\n\nfunction unloadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    journal.entries = []\n    journal.loaded = false\n}\n\nfunction loadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    unloadOtherJournals(journal)\n    syncerController.getRows(journal.shelf.id, journal.id, journal.title)\n        .then(payload => {\n            payload.rows.forEach((content, idx) => addEntry(journal, idx, content, false))\n            journal.loaded = true\n        })\n        .catch((error: ErrorPayload) => {\n            new FriendlyError(error.error.message, error.friendlyMsg)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n}\n\n// TODO: create entry\n\nfunction addEntry(journal: JournalModel, idx: number, content: string | undefined, sync?: boolean) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    entryController.save(entry, idx, content, sync)\n    journal.addEntry(idx, entry)\n    buildTags(journal)\n}\n\nfunction deleteEntry(journal: JournalModel, idx: number) {\n    journal.deleteEntry(idx)\n    buildTags(journal)\n}\n\nfunction moveEntry(journal: JournalModel, fromIdx: number, toIdx: number) {\n    if (fromIdx === toIdx) return\n    journal.moveEntry(fromIdx, toIdx)\n    buildTags(journal)\n}\n\nfunction buildTags(journal: JournalModel) {\n    let tags: Map<string, TagModel> = new Map()\n    let entries = Array.from(journal.entries.values())\n    for (let { entry } of entries.reverse()) {\n        for (let [key, tag] of entry.tags) {\n            if (tags.has(key)) {\n                tags.get(key)!.frq += tag.frq\n            } else {\n                tags.set(key, tagFactory.createTag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n            }\n        }\n    }\n    journal.tags = tags\n    searchController.buildRefines(journal)\n}\n","export * from \"./shelfView\"\r\nexport * from \"./signinView\"\r\nexport * from \"./libraryView\"\r\nexport * from \"./journalView\"\r\nexport * from \"./testModeView\"\r\n","import m from \"mithril\"\nimport { appStateModel } from \"..\"\nimport { TestMode } from \"../types\"\nimport { urlController } from \"../controllers\"\n\nexport function testModeComponent() {\n\n    function view() {\n        if (appStateModel.testMode !== TestMode.OFF) {\n            return m(\"#testMode\", [\n                m(\"span\", `${appStateModel.testMode} active `),\n                stopDemoButton()\n            ])\n        }\n        return\n    }\n\n    function stopDemoButton() {\n        if (appStateModel.testMode === TestMode.DEMO) {\n            return m(\"button\", { onclick: () => {\n                urlController.redirect(`/library/${TestMode.OFF}`)\n            }, class: \"stopDemo\" }, \"Start Now\")\n        }\n        return\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\n\nexport class FriendlyError extends Error {\n    constructor(errorMsg: string, public friendlyMsg: string) {\n        super(errorMsg)\n        console.warn(errorMsg)\n        // journal.errors.push(friendlyMsg) // TODO reassign\n        m.redraw()\n    }\n}\n","export const textController = {\n    escape: escape,\n    clean: clean,\n}\n\nfunction escape(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n\nfunction clean(content: string): string {\n    return content.toLowerCase()\n}\n","import { textController } from \"../controllers\"\r\nimport { TagModel } from \"../models\"\r\n\r\nexport const tagFactory = {\r\n    createTag: createTag\r\n}\r\n\r\nfunction createTag(raw: string, flag: string, key: string, separator?: string | null, val?: string | null) {\r\n    separator = (separator !== undefined) ? separator : null\r\n    val = (val !== undefined) ? val : null\r\n    let clean = cleanTagString(raw)\r\n    let cleanKey = cleanTagString(key)\r\n    let cleanVal = (val !== null) ? cleanTagString(val) : null\r\n\r\n    let renderedKey = \"<span onclick=\\\"tagOnClick(event, '\"\r\n        + flag\r\n        + cleanKey\r\n        + ((separator !== null) ? separator : \"\")\r\n        + \"')\\\" class=\\\"\"\r\n        + ((separator !== null) ? \"tagKey\" : (val === null) ? \"simpleTag\" : \"roundTagVal\")\r\n        + \"\\\">\"\r\n        + flag\r\n        + key\r\n        + \"</span>\"\r\n\r\n    let renderedVal = \"\"\r\n\r\n    if (separator !== undefined && separator !== null) {\r\n        renderedVal = \"<span onclick=\\\"tagOnClick(event, '\"\r\n            + flag\r\n            + cleanKey\r\n            + separator\r\n            + ((cleanVal !== null) ? cleanVal.replace(/'/, \"\\\\'\") : \"\")\r\n            + \"')\\\" class=\\\"tagVal\\\">\"\r\n            + separator\r\n            + ((val !== null) ? val : \"\")\r\n            + \"</span>\"\r\n    }\r\n\r\n    return new TagModel(raw, flag, key, separator, val, clean, cleanKey, cleanVal, renderedKey + renderedVal)\r\n\r\n}\r\n\r\nfunction cleanTagString(str: string) {\r\n    str = textController.escape(str)\r\n    str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\r\n    str = str.toLowerCase()\r\n    return str\r\n}\r\n","import m from \"mithril\"\n\nexport class UrlModel {\n\n    get hash(): string {\n        return window.location.hash\n    }\n    set hash(hash_: string) {\n        window.location.hash = hash_\n    }\n\n    get url(): URL {\n        return new URL(window.location.href)\n    }\n\n    public getParam(key: string): string | undefined {\n        let val = this.url.searchParams.get(key) || m.route.param(key)\n        if (val === \"\") return\n        return val\n    }\n\n    get shelfId(): string | undefined {\n        let id = m.route.param(\"shelfId\")\n        return (id === \"\") ? undefined : id\n    }\n    // TODO: set?\n\n    get journalId(): number | undefined {\n        let id = m.route.param(\"journalId\")\n        return (id === \"\") ? undefined : parseInt(id)\n    }\n    // TODO: set?\n}\n","export class TagModel {\n    public frq: number\n\n    constructor(\n        public raw: string,\n        public flag: string,\n        public key: string,\n        public separator: string | null,\n        public val: string | null,\n        public clean: string,\n        public cleanKey: string,\n        public cleanVal: string | null,\n        public rendered: string\n    ) { \n        this.frq = 1\n    }\n\n}\n","import { TagModel } from \".\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport class BaseEntryModel {\n    public raw: string = \"\"\n    public safe: string = \"\"\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public tags: Map<string, TagModel> = new Map()\n    public tagMatches: { tag: TagModel, match: RegExpMatchArray }[] = []\n}\n\nexport class JournalEntryModel extends BaseEntryModel {\n    readonly id: number\n    readonly shelf: ShelfModel\n    readonly journal: JournalModel\n\n    public saved: string = \"\"\n    public savedClean: string = \"\"\n\n    constructor(shelf: ShelfModel, journal: JournalModel, entryId: number) {\n        super()\n        this.id = entryId\n        this.shelf = shelf\n        this.journal = journal\n    }\n}\n","import { JournalModel } from \".\"\n\nexport class ShelfModel {\n    readonly id: string\n    readonly title: string | undefined\n\n    public error: string | undefined\n    public journals: Map<number, JournalModel> = new Map()\n\n    constructor(id: string, title?: string, error?: string) {\n        this.id = id\n        this.error = error\n        this.title = title\n    }\n\n}\n","import { SyncerState, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nexport class SyncerModel {\r\n    public requestsCounter: number\r\n    public requests: Map<string, Function>\r\n    public state: SyncerState\r\n\r\n    constructor() {\r\n        this.requestsCounter = 0\r\n        this.requests = new Map()\r\n        this.state = SyncerState.INITIALIZING\r\n    }\r\n\r\n    public pushSyncerTask<P extends SyncerPayload>(payload: P, worker: Worker): Promise<P> {\r\n        let id = `payload-${this.requestsCounter++}`\r\n        return new Promise((resolve, reject) => {\r\n            this.requests.set(id, ({ payload, error }: { payload: P, error: ErrorPayload }) => {\r\n                (error) ? reject(error) : resolve(payload)\r\n            })\r\n            worker.postMessage({ id, payload })\r\n        })\r\n    }\r\n\r\n}\r\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nexport class GoogleModel {\n    readonly src: string\n    readonly scope: string\n    readonly clientId: string\n\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    constructor(isSignedIn?: boolean) {\n        this.isSignedIn = isSignedIn\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\n            \"https://www.googleapis.com/auth/spreadsheets\",\n        ].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    get token(): string | undefined {\n        if (!this.user) return\n        let auth = this.user.getAuthResponse()\n        return auth.access_token\n    }\n}\n","import { ShelfModel } from \"./ShelfModel\"\nimport { JournalEntryModel, TagModel } from \".\"\n\nexport class JournalModel {\n    readonly id: number\n    readonly title: string\n    readonly shelf: ShelfModel\n\n    public loaded: boolean\n    public tags: Map<string, TagModel>\n    public entries: { id: number, entry: JournalEntryModel }[]\n\n    constructor(shelf: ShelfModel, journalId: number, journalTitle: string) {\n        this.entries = []\n        this.shelf = shelf\n        this.loaded = false\n        this.id = journalId\n        this.tags = new Map()\n        this.title = journalTitle\n    }\n\n    public addEntry(idx: number, entry: JournalEntryModel) {\n        this.entries.splice(idx, 0, { id: entry.id, entry })\n    }\n\n    public updateEntry(idx: number, entry: JournalEntryModel) {\n        this.entries[idx].entry = entry\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)[0]\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        let entry = this.entries.splice(fromIdx, 1)[0]\n        this.entries.splice(toIdx, 0, entry)\n    }\n\n}\n","import { ShelfModel } from \".\"\n\nexport class LibraryModel {\n    public shelves: Map<string, ShelfModel | undefined>\n\n    constructor() {\n        this.shelves = new Map()\n        this.shelfIds.forEach(id => this.shelves.set(id, undefined))\n    }\n\n    set shelfIds(ids: string[]) {\n        if (ids.length === 0) {\n            localStorage.removeItem(\"spreadsheetIds\")\n        } else {\n            localStorage.setItem(\"spreadsheetIds\", ids.join(\",\"))\n        }\n    }\n    get shelfIds(): string[] {\n        let ids = localStorage.getItem(\"spreadsheetIds\")\n        return (ids === null) ? [] : ids.split(\",\")\n    }\n\n}\n","import { FriendlyError } from \"../errors\"\n\nexport class ServiceWorkerModel {\n    constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            throw new FriendlyError(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n}\n","import { ShelfModel, JournalModel } from \"../models\"\n\nexport const shelfFactory = {\n    createShelf: createShelf,\n}\n\nfunction createShelf(spreadsheetId: string, spreadsheet?: gapi.client.sheets.Spreadsheet, error?: string): ShelfModel {\n    if (\n        spreadsheet !== undefined &&\n        spreadsheet.spreadsheetId !== undefined &&\n        spreadsheet.properties !== undefined &&\n        spreadsheet.properties.title !== undefined &&\n        spreadsheet.sheets !== undefined\n    ) {\n        let shelf = new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title)\n        getJournals(shelf, spreadsheet.sheets).forEach(journal => shelf.journals.set(journal.id, journal))\n        return shelf\n    }\n    return new ShelfModel(spreadsheetId, undefined, error)\n}\n\nfunction getJournals(shelf: ShelfModel, sheets: gapi.client.sheets.Sheet[]): JournalModel[] {\n    let journals: JournalModel[] = []\n    sheets.forEach(sheet => {\n        if (\n            sheet.properties !== undefined &&\n            sheet.properties.title !== undefined &&\n            sheet.properties.sheetId !== undefined\n        ) {\n            let journal = new JournalModel(\n                shelf, sheet.properties.sheetId, sheet.properties.title\n            )\n            if (journal === undefined) return\n            journals.push(journal)\n        }\n    })\n    return journals\n}\n","import { entryController } from \"../controllers\"\nimport { JournalEntryModel, ShelfModel, JournalModel, BaseEntryModel } from \"../models\"\n\nlet entryCounter = -1\n\nexport const entryFactory = {\n    createBaseEntry: createBaseEntry,\n    createJournalEntry: createJournalEntry\n}\n\nfunction createBaseEntry(content?: string) {\n    let entry = new BaseEntryModel()\n    entryController.update(entry, content || \"\")\n    return entry\n}\n\nfunction createJournalEntry(shelf: ShelfModel, journal: JournalModel, content: string) {\n    let entry = new JournalEntryModel(shelf, journal, entryCounter += 1)\n    entryController.update(entry, content)\n    return entry\n}\n","export const caretController = {\n    getCaretPosition: getCaretPosition,\n    setCaretPosition: setCaretPosition,\n}\n\nfunction node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nfunction getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nfunction setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","import { searchModel } from \"..\"\nimport { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { entryController } from \"./entryController\"\nimport { TagModel, JournalModel, JournalEntryModel } from \"../models\"\n\nexport const searchController = {\n    reset: reset,\n    buildRefines: buildRefines,\n    filteredEntries: filteredEntries,\n    updateSearchbar: updateSearchbar,\n}\n\nfunction updateSearchbar(content: string) {\n    entryController.update(searchModel.barQuery, content)\n}\n\nfunction reset() {\n    searchModel.searchType = SearchType.NONE\n    searchModel.barQuery = entryFactory.createBaseEntry()\n    searchModel.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n}\n\nfunction buildRefines(journal: JournalModel) {\n    let simpleRefines: Map<string, TagModel> = new Map()\n    let complexRefines: Map<string, TagModel[]> = new Map()\n\n    for (let tag of journal.tags.values()) {\n        if (tag.val === null) {\n            let key = `${tag.flag}${tag.cleanKey}`\n            if (!simpleRefines.has(key)) {\n                simpleRefines.set(key, tag)\n            }\n        } else {\n            let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n            if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n            complexRefines.get(key)!.push(tag)\n        }\n    }\n\n    searchModel.simpleRefines = new Map([...simpleRefines.entries()])\n    searchModel.complexRefines = new Map([...complexRefines.entries()].sort())\n\n    cleanRefines()\n}\n\nfunction cleanRefines() {\n    // Clean stale simple tag key (refine val) selections\n    for (let [key,] of searchModel.refinesQuery.simpleKeys) {\n        if (!searchModel.simpleRefines.has(key)) {\n            searchModel.refinesQuery.simpleKeys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag key selections\n    for (let key of searchModel.refinesQuery.keys) {\n        if (!searchModel.complexRefines.has(key)) {\n            searchModel.refinesQuery.keys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag val\n    for (let [key,] of searchModel.refinesQuery.vals) {\n        if (!Array.from(searchModel.complexRefines.values()).some(tags => tags.some(tag => tag.clean === key))) {\n            searchModel.refinesQuery.vals.delete(key)\n        }\n    }\n}\n\nfunction filteredEntries(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    if (searchModel.query.tokens.length === 0) {\n        searchModel.searchType = SearchType.NONE\n        filteredEntries = entries.map(({ entry }, idx) => { return { idx, entry } })\n    } else {\n        searchModel.searchType = SearchType.AND\n        filteredEntries = search(entries)\n        if (filteredEntries.length === 0) {\n            searchModel.searchType = SearchType.OR\n            filteredEntries = search(entries)\n        }\n    }\n    return filteredEntries\n}\n\nfunction search(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let query = searchModel.query\n    let sourceEntries = entries\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    for (let [idx, { entry }] of sourceEntries.entries()) {\n        switch (searchModel.searchType) {\n            case SearchType.AND:\n                if (query.tokens.every(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n            case SearchType.OR:\n                if (query.tokens.some(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n        }\n    }\n    return filteredEntries\n}\n\nfunction match(token: string, entry: JournalEntryModel) {\n\n    if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token.substring(1)) === undefined\n    } else if (token.startsWith(\"-\")) {\n        return !entry.savedClean.includes(token.substring(1))\n    } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token) !== undefined\n    } else {\n        return entry.savedClean.includes(token)\n    }\n}\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { googleModel, appStateModel } from \"..\"\r\nimport { syncerController, libraryController } from \"../controllers\"\r\nimport { urlController } from \"./urlController\"\r\n\r\nexport const googleController = {\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    initGapi: initGapi,\r\n}\r\n\r\nfunction signOut() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\r\n}\r\n\r\nfunction signIn() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\r\n}\r\n\r\nfunction initGapi() {\r\n    let gapi_ = (appStateModel.testMode === TestMode.OFF) ? gapi : new MockGapi()\r\n    googleModel.gapi_ = gapi_\r\n    googleModel.gapi_.load('auth2', () => {\r\n        googleModel.gapi_!.auth2.init({\r\n            scope: googleModel.scope, client_id: googleModel.clientId\r\n        }).then(() => {\r\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\r\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\r\n        })\r\n    })\r\n}\r\n\r\nasync function isSignedIn(signedIn: boolean) {\r\n    googleModel.isSignedIn = signedIn\r\n    if (googleModel.isSignedIn) {\r\n        googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\r\n        syncerController.updateAuth(googleModel.token)\r\n        libraryController.loadShelves()\r\n    } else {\r\n        libraryController.removeShelves()\r\n        urlController.redirect(\"/\")\r\n    }\r\n    m.redraw()\r\n}\r\n","export * from \"./Gapi\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { FriendlyError } from \"../errors\"\nimport { shelfFactory } from \"../factories\"\nimport { syncerController } from \"../controllers\"\nimport { urlController } from \"./urlController\"\nimport { journalController } from \"./journalController\"\n\nconst spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n\nexport const libraryController = {\n    addShelves: addShelves,\n    loadShelves: loadShelves,\n    removeShelves: removeShelves,\n    getSpreadsheetIdsFromUrls: getSpreadsheetIdsFromUrls,\n}\n\nfunction addShelves(urls: string) {\n    let ids = getSpreadsheetIdsFromUrls(urls)\n    ids = ids.filter(id => !libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.set(id, undefined))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n    loadShelves(false, ids)\n}\n\nfunction removeShelves(ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    ids = ids.filter(id => libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.delete(id))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n}\n\nfunction loadShelves(reloadLoaded?: boolean, ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    if (reloadLoaded) {\n        ids.forEach(id => libraryModel.shelves.set(id, undefined))\n        m.redraw()\n    }\n    ids.filter(id => !libraryModel.shelves.get(id))\n        .forEach(id => syncerController.getSpreadsheet(id)\n        .then(payload => {\n            let shelf = shelfFactory.createShelf(id, payload.spreadsheet)\n            libraryModel.shelves.set(shelf.id, shelf)\n            let journal = urlController.getActiveJournal()\n            if (journal && journal.shelf === shelf) {\n                journalController.loadEntries(journal)\n            }\n        })\n        .catch((error: ErrorPayload) => {\n            new FriendlyError(error.error.message, error.friendlyMsg)\n            let shelf = shelfFactory.createShelf(id, undefined, error.friendlyMsg)\n            libraryModel.shelves.set(id, shelf)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n    )\n}\n\nfunction getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n    let ids: string[] = []\n    if (urls) {\n        Array.from(urls.matchAll(spreadsheetIdPattern)).forEach(m => ids.push(m[1]))\n    }\n    return ids\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { googleController } from \"../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return {\n            async: true,\n            defer: true,\n            src: googleModel.src,\n            onload: () => {\n                if (!googleModel.isSignedIn) {\n                    googleController.initGapi()\n                }\n            }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { BaseEntryModel, JournalModel } from \"../models\"\nimport { urlController, journalController, caretController, entryController } from \"../controllers\"\n\nexport function composeComponent() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefixEntry = entryFactory.createBaseEntry()\n    const composeContentEntry = entryFactory.createBaseEntry()\n    const composeSuffixEntry = entryFactory.createBaseEntry()\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#compose\", [\n            m(\n                \"#prefix\",\n                composeNodeSettings(composePrefixEntry, journal, prefixSettings),\n                m.trust(composePrefixEntry.rendered)\n            ),\n            m(\n                \"#content\",\n                composeNodeSettings(composeContentEntry, journal, entrySettings),\n                m.trust(composeContentEntry.rendered)\n            ),\n            m(\n                \"#suffix\",\n                composeNodeSettings(composeSuffixEntry, journal, suffixSettings),\n                m.trust(composeSuffixEntry.rendered)\n            ),\n        ])\n    }\n\n    function getComposedContent() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: BaseEntryModel, journal: JournalModel, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event, journal),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any, journal: JournalModel) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let content = getComposedContent()\n            entryController.update(composeContentEntry, \"\")\n            let idx = journal.entries.length\n            journalController.addEntry(journal, idx, content, true)\n        }\n    }\n\n    function composeInput(event: any, entry: BaseEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function composeUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { JournalModel, JournalEntryModel } from \"../models\"\nimport {\n    caretController, urlController, entryController, journalController, searchController\n} from \"../controllers\"\n\nexport function entriesComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        let shelf = urlController.getActiveShelf()\n        const journal = urlController.getActiveJournal()\n        if (!shelf || !journal) return null\n\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesList(journal),\n        ])\n    }\n\n    function entriesList(journal: JournalModel) {\n        return searchController.filteredEntries(journal.entries)\n            .map(({ idx, entry }) => entryVnode(entry, idx))\n    }\n\n    function entryVnode(entry: JournalEntryModel, entryIdx: number): m.Vnode {\n        return m(\".entryWrap\", { id: `entry-${entry.id}` }, [\n            entryContent(entry, entryIdx),\n            deleteEntryButton(entry, entryIdx),\n        ])\n    }\n\n    function deleteEntryButton(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: async () => journalController.deleteEntry(entry.journal, entryIdx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"div\", entryContentSettings(entry, entryIdx), m.trust(entry.rendered))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: JournalEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    async function onEntryBlur(event: any, entry: JournalEntryModel, entryIdx: number) {\n        event.redraw = false\n        entryController.save(entry, entryIdx, event.target.innerText, true)\n        journalController.buildTags(entry.journal)\n    }\n\n    function entryContentSettings(entry: JournalEntryModel, entryIdx: number) {\n        return {\n            id: `entry-${entry.id}-content`,\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, entryIdx),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ShelfModel } from \"../models\"\nimport { libraryController } from \"../controllers\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        let shelves = Array.from(libraryModel.shelves.entries())\n        return m(\"#shelvesList\", shelves.map(([id, shelf]) => shelfNode(id, shelf)))\n    }\n\n    function delShelfButton(id: string) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: () => libraryController.removeShelves([id])\n        }, \"del\")\n    }\n\n    function retryShelfLoadButton(id: string) {\n        return m(\"button\", {\n            onclick: () => libraryController.loadShelves(true, [id])\n        }, \"retry\")\n    }\n\n    function shelfNode(id: string, shelf: ShelfModel | undefined) {\n        if (shelf === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", id)\n            ])\n        } else if (shelf.error !== undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", `${id} ${shelf.error}`),\n                retryShelfLoadButton(id)\n            ])\n        } else {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"a\", { href: `#/library/${id}` }, shelf.title)\n            ])\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport function refinesComponent() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes() {\n        if (searchModel.simpleRefines.size === 0) return\n        return m(\".tagRefineWrap\", [\n            refineKeyVnode(simpleTagsHeader, searchModel.simpleRefines.size),\n            Array.from(searchModel.simpleRefines, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(searchModel.complexRefines, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: searchModel.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: TagModel) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", {\n                    type: \"checkbox\", checked: (tag.val === null)\n                        ? searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                        : searchModel.refinesQuery.vals.has(tag.clean)\n                }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: TagModel) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            searchModel.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            searchModel.refinesQuery.keys.has(key)\n                ? searchModel.refinesQuery.keys.delete(key)\n                : searchModel.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: TagModel) {\n        if (tag.val === null) {\n            searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                ? searchModel.refinesQuery.simpleKeys.delete(tag.clean)\n                : searchModel.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            searchModel.refinesQuery.vals.has(tag.clean)\n                ? searchModel.refinesQuery.vals.delete(tag.clean)\n                : searchModel.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { urlController } from \"../controllers\"\n\nexport function journalsComponent() {\n\n    function view() {\n        return m(\"#journals\", journalList())\n    }\n\n    function journalList() {\n        let shelf = urlController.getActiveShelf()\n        if (shelf === undefined) {\n            urlController.redirect(\"/library\")\n            return\n        }\n        return Array.from(shelf.journals.values()).map(journal => {\n            let link = `#/library/${journal.shelf.id}/${journal.id}`\n            return m(\"li\", m(\"a\", { href: link }, journal.title))\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { SyncerState } from \"../types\"\nimport { syncerController } from \"../controllers\"\nimport { syncerModel, googleModel, libraryModel } from \"..\"\n\nexport function syncStateComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn || libraryModel.shelves.size === 0) return\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncerModel.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive...\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused.\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"Cloud synced.\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive...\"\n                break\n            case SyncerState.INITIALIZING:\n                txt = \"Initializing...\"\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncerModel.state)\n    }\n\n    function unpauseSync() {\n        if (syncerModel.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncerController.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncerModel.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { Caret } from \"../types\"\nimport { caretController, textController, searchController, urlController } from \"../controllers\"\n\n\nexport function searchbarComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(searchModel.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\")\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onSearchInput(event),\n            onupdate: () => onSearchUpdate(),\n            onkeydown: (event: any) => onSearchKeydown(event)\n        }\n    }\n\n    function onSearchInput(event: any) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        searchController.updateSearchbar(textController.escape(event.target.innerText))\n    }\n\n    function onSearchUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    function onSearchKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => searchController.updateSearchbar(\"\")\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { libraryController } from \"../controllers\"\r\nimport { libraryModel } from \"..\"\r\n\r\nexport function addShelvesComponent() {\r\n\r\n    let newShelfUrls = \"\"\r\n    let addingShelves = false\r\n\r\n    function view() {\r\n        return m(\"#addShelves\", [\r\n            addShelvesMessage(),\r\n            addShelvesButton(),\r\n            addShelvesTextbox(),\r\n        ])\r\n    }\r\n\r\n    function addShelvesMessage() {\r\n        if (libraryModel.shelves.size !== 0) return\r\n        return m(\"span\", \"Add Google Spreadsheet URLs here to get started. \")\r\n    }\r\n\r\n    function addShelvesButton() {\r\n        return m(\"button\", {\r\n            id: \"addShelvesButton\",\r\n            onclick: async () => {\r\n                if (addingShelves) libraryController.addShelves(newShelfUrls)\r\n                newShelfUrls = \"\"\r\n                addingShelves = !addingShelves\r\n            }\r\n        }, (addingShelves) ? \" ✓ \" : \"+/-\")\r\n    }\r\n\r\n    function addShelvesTextbox() {\r\n        if (!addingShelves) return null\r\n        return m(\"textarea\", {\r\n            id: \"addShelvesText\",\r\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n            oninput: (event: any) => newShelfUrls = event.target.value\r\n        })\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n    }\r\n\r\n}\r\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\n\nexport function breadcrumbComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn) return\n        return m(\"#breadcrumb\", urlController.getBreadcrumbTrail())\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport {\n    googleComponent, journalsComponent, syncStateComponent, breadcrumbComponent,\n    testModeComponent,\n} from \"../components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\r\nimport { googleModel } from \"..\"\r\nimport { urlController } from \"../controllers\"\r\nimport { googleComponent } from \"../components\"\r\n\r\nexport function signinView() {\r\n\r\n    function view() {\r\n        return m(\"#auth\", [\r\n            m(googleComponent),\r\n        ])\r\n    }\r\n\r\n    function onupdate() {\r\n        if (googleModel.isSignedIn) {\r\n            urlController.redirect(\"/library\")\r\n        }\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n\r\n}\r\n","import m from \"mithril\"\nimport { \n    googleComponent, shelvesComponent, syncStateComponent, addShelvesComponent,\n    testModeComponent,\n} from \"../components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(addShelvesComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { urlController, journalController } from \"../controllers\"\nimport {\n    googleComponent, breadcrumbComponent, entriesComponent, syncStateComponent,\n    searchbarComponent, refinesComponent, composeComponent, testModeComponent,\n} from \"../components\"\n\nexport function journalView() {\n\n    function oninit() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded) return\n        journalController.loadEntries(journal)\n    }\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(searchbarComponent),\n            m(refinesComponent),\n            m(\"#entriesWrap\", [\n                m(entriesComponent),\n                m(composeComponent),\n            ])\n        ])\n    }\n\n    return {\n        view: view,\n        oninit: oninit,\n    }\n\n}\n","import { TestMode } from \"../types\"\n\nexport class AppStateModel {\n    public testMode: TestMode\n\n    constructor() {\n        this.testMode = TestMode.OFF\n    }\n}\n","import { appStateModel } from \"..\"\nimport { syncerController } from \"./syncerController\"\nimport { TestMode, instanceOfTestMode } from \"../types\"\n\nexport const appStateController = {\n    updateTestMode: updateTestMode,\n}\n\nfunction updateTestMode(mode: TestMode | string | undefined) {\n    if (mode !== undefined && instanceOfTestMode(mode) && mode !== appStateModel.testMode) {\n        appStateModel.testMode = mode\n        syncerController.updateTestMode(mode)\n    }\n}\n","\nimport { urlModel } from \"..\"\nimport { urlController, appStateController } from \"../controllers\"\nimport { TestMode } from \"../types\"\n\nexport function testModeView() {\n\n    function view() {\n        if (urlModel.hash.startsWith(\"#/demo\")) {\n            appStateController.updateTestMode(TestMode.DEMO)\n            urlController.redirect(\"/library\")\n        }\n\n        if (urlModel.hash.startsWith(\"#/setTestMode\")) {\n            appStateController.updateTestMode(urlModel.getParam(\"testMode\"))\n            urlController.redirect(\"/\")\n        }\n    }\n\n    return {\n        view: view\n    }\n\n}\n"],"sourceRoot":""}