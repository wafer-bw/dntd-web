{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"m\"","webpack:///./src/types/index.ts","webpack:///./src/controllers/index.ts","webpack:///./src/index.ts","webpack:///./src/factories/index.ts","webpack:///./src/components/index.ts","webpack:///./src/models/index.ts","webpack:///./src/errors/index.ts","webpack:///./src/controllers/urlController.ts","webpack:///./src/types/errors.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncer.ts","webpack:///./src/controllers/entryController.ts","webpack:///./src/models/SearchModel.ts","webpack:///./src/controllers/journalController.ts","webpack:///./src/views/index.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/components/googleComponent.ts","webpack:///./src/controllers/textController.ts","webpack:///./src/factories/tagFactory.ts","webpack:///./src/models/UrlModel.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/models/ServiceWorkerModel.ts","webpack:///./src/errors/FriendlyError.ts","webpack:///./src/factories/shelfFactory.ts","webpack:///./src/factories/entryFactory.ts","webpack:///./src/controllers/caretController.ts","webpack:///./src/controllers/searchController.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/controllers/syncerController.ts","webpack:///./src/controllers/libraryController.ts","webpack:///./src/components/composeComponent.ts","webpack:///./src/components/entriesComponent.ts","webpack:///./src/components/shelvesComponent.ts","webpack:///./src/components/refinesComponent.ts","webpack:///./src/components/journalsComponent.ts","webpack:///./src/components/syncStateComponent.ts","webpack:///./src/components/searchbarComponent.ts","webpack:///./src/components/addShelvesComponent.ts","webpack:///./src/components/breadcrumbComponent.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","serviceWorkerModel","ServiceWorkerModel","googleModel","GoogleModel","syncerModel","SyncerModel","libraryModel","LibraryModel","urlModel","UrlModel","searchModel","SearchModel","root","document","getElementById","route","signinView","libraryView","shelfView","journalView","getActiveShelf","id","shelfId","undefined","shelves","urlController","redirect","hash","getActiveJournal","journalId","shelf","journals","getBreadcrumbTrail","breadcrumb","split","filter","crumb","length","trail","slice","join","title","parseInt","push","href","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","pause","super","this","payload","error","type","SyncerPayloadType","ERROR","SearchType","TestMode","SyncerResponseType","SyncerState","tagPattern","entryController","save","entry","entryIdx","content","sync","force","saved","savedClean","textController","clean","tags","tagMatches","Map","tag","has","frq","set","getTags","syncerController","updateRow","journal","update","raw","safe","escape","tokens","text","token","trim","matchesIter","matchAll","match","tagFactory","createTag","sort","a","b","index","getTagMatches","rendered","chars","splice","render","searchType","NONE","simpleRefines","complexRefines","barQuery","entryFactory","createBaseEntry","refinesQuery","keys","Set","vals","simpleKeys","Array","from","values","addEntry","idx","createJournalEntry","buildTags","entries","reverse","flag","separator","val","searchController","buildRefines","journalController","moveEntry","fromIdx","toIdx","deleteEntry","loadEntries","keepJournal","forEach","loaded","unloadEntries","getRows","then","rows","catch","FriendlyError","message","finally","redraw","view","googleComponent","syncStateComponent","breadcrumbComponent","journalsComponent","isSignedIn","onclick","googleController","signOut","class","signIn","async","defer","src","onload","initGapi","unsafe","replace","toLowerCase","cleanTagString","str","endsWith","substring","cleanKey","cleanVal","renderedKey","renderedVal","TagModel","URL","window","location","hash_","DEMO","test","param","instanceOfTestMode","OFF","includes","BaseEntryModel","entryId","requestsCounter","requests","state","INITIALIZING","worker","Promise","resolve","reject","postMessage","scope","clientId","user","getAuthResponse","access_token","journalTitle","shelfIds","ids","localStorage","removeItem","setItem","getItem","navigator","addEventListener","serviceWorker","register","console","warn","shelfFactory","createShelf","spreadsheetId","spreadsheet","properties","sheets","ShelfModel","sheet","sheetId","JournalModel","getJournals","entryCounter","JournalEntryModel","caretController","getCaretPosition","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","search","query","sourceEntries","filteredEntries","AND","every","OR","some","startsWith","reset","delete","cleanRefines","map","updateSearchbar","signedIn","gapi_","auth2","getAuthInstance","currentUser","updateAuth","libraryController","loadShelves","removeShelves","testMode","gapi","MockGapi","load","init","client_id","listen","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","MockIsSignedIn","Worker","pushSyncerTask","AUTH_UPDATE","onmessage","msg","data","SYNC_STATE","TOKEN_REQUEST","onMessage","unpause","UNPAUSE","GET_ROWS","sheetTitle","deleteRow","DELETE_ROW","UPDATE_ROW","getSheets","GET_SHEETS","updateTestMode","TEST_MODE_UPDATE","getSpreadsheet","GET_SPREADSHEET","spreadsheetIdPattern","reloadLoaded","getSpreadsheetIdsFromUrls","urls","addShelves","caret","composePrefixEntry","composeContentEntry","composeSuffixEntry","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","extraSettings","baseSettings","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","composeKeydown","oninput","target","composeInput","onupdate","assign","trust","entriesList","entryContent","deleteEntryButton","entryVnode","blur","onEntryKeydown","onEntryInput","onEntryUpdate","onblur","onEntryBlur","entryContentSettings","delShelfButton","retryShelfLoadButton","shelfNode","expanded","simpleRefinesVnodes","size","refineKeyVnode","refineValVnode","count","metaKey","ctrlKey","add","refineTagKeyOnClick","tagRefineKeySettings","checked","tagRefineValSettings","tagClass","hideClass","refineTagValOnClick","link","journalList","syncStateText","txt","class_","stateColorClass","DOWNLOADING","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","placeholder","onSearchInput","onSearchKeydown","newShelfUrls","addingShelves","addShelvesMessage","addShelvesButton","addShelvesTextbox","addShelvesComponent","shelvesComponent","searchbarComponent","refinesComponent","entriesComponent","composeComponent","oninit"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = m;","export * from \"./caret\"\nexport * from \"./errors\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncer\"\n","export * from \"./urlController\"\r\nexport * from \"./textController\"\r\nexport * from \"./entryController\"\r\nexport * from \"./caretController\"\r\nexport * from \"./searchController\"\r\nexport * from \"./googleController\"\r\nexport * from \"./syncerController\"\r\nexport * from \"./libraryController\"\r\nexport * from \"./journalController\"\r\n","import m from \"mithril\"\nimport { signinView, libraryView, shelfView, journalView } from \"./views\"\nimport {\n    ServiceWorkerModel, SyncerModel, LibraryModel, GoogleModel, UrlModel, SearchModel\n} from \"./models\"\n\nexport const serviceWorkerModel = new ServiceWorkerModel()\nexport const googleModel = new GoogleModel()\nexport const syncerModel = new SyncerModel()\nexport const libraryModel = new LibraryModel()\nexport const urlModel = new UrlModel()\nexport const searchModel = new SearchModel()\n\nconst root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,                                   // TODO switch to be about page\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/library/:shelfId/:journalId\": journalView,\n        // \"/demo\" : app,                                   // TODO\n    })\n}\n","export * from \"./tagFactory\"\nexport * from \"./shelfFactory\"\nexport * from \"./entryFactory\"\n","export * from \"./googleComponent\"\nexport * from \"./composeComponent\"\nexport * from \"./entriesComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./refinesComponent\"\nexport * from \"./journalsComponent\"\nexport * from \"./syncStateComponent\"\nexport * from \"./searchbarComponent\"\nexport * from \"./addShelvesComponent\"\nexport * from \"./breadcrumbComponent\"\n","export * from \"./UrlModel\"\r\nexport * from \"./TagModel\"\r\nexport * from \"./EntryModel\"\r\nexport * from \"./ShelfModel\"\r\nexport * from \"./SyncerModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./GoogleModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./JournalModel\"\r\nexport * from \"./LibraryModel\"\r\nexport * from \"./ServiceWorkerModel\"\r\n","export * from \"./FriendlyError\"\n","import m from \"mithril\"\nimport { libraryModel, urlModel } from \"..\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport const urlController = {\n    redirect: redirect,\n    getActiveShelf: getActiveShelf,\n    getActiveJournal: getActiveJournal,\n    getBreadcrumbTrail: getBreadcrumbTrail,\n}\n\nfunction redirect(hash: string) {\n    urlModel.hash = hash\n}\n\nfunction getActiveShelf(): ShelfModel | undefined {\n    let id = urlModel.shelfId\n    if (id === undefined) return undefined\n    return libraryModel.shelves.get(id)\n}\n\nfunction getActiveJournal(): JournalModel | undefined {\n    let id = urlModel.journalId\n    let shelf =  getActiveShelf()\n    if (id === undefined || shelf === undefined) return undefined\n    return shelf.journals.get(id)\n}\n\nfunction getBreadcrumbTrail() {\n    // TODO: add dropdowns on each shelf and journal crumb\n    let breadcrumb: m.Vnode[] = []\n    let hash = urlModel.hash.split(\"?\")[0].split(\"/\").filter(crumb => crumb !== \"#\" && crumb !== \"\")\n    let shelfId: string | undefined = undefined\n    for (let i = 0; i < hash.length; i++) {\n        let crumb = hash[i]\n        let trail = \"#/\" + hash.slice(0, i + 1).join(\"/\")\n        if (i === 1) {\n            shelfId = crumb\n            crumb = libraryModel.shelves.get(crumb)?.title || crumb\n        } else if (i === 2 && shelfId !== undefined) {\n            crumb = libraryModel.shelves.get(shelfId)?.journals.get(parseInt(crumb))?.title || crumb\n        }\n        if (i !== 0) breadcrumb.push(m(\"span\", \" / \"))\n        if (i === hash.length - 1) {\n            breadcrumb.push(m(\"span\", `${crumb}`))\n        } else {\n            breadcrumb.push(m(\"a\", { href: trail }, `${crumb}`))\n        }\n    }\n    return breadcrumb\n}\n","import { ErrorPayload, SyncerPayloadType } from \".\"\n\nexport interface GapiErrorResponseBody {\n    code: number,\n    message: string,\n    status: string\n}\n\nexport interface GapiErrorResponse {\n    error: GapiErrorResponseBody\n}\n\nexport class SyncerError extends Error { // TODO: see if this can be moved to src/errors/\n    public payload: ErrorPayload\n\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean, pause?: boolean) {\n        super(errorMsg)\n        this.payload = {\n            pause: (pause !== undefined) ? pause : true,\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: SyncerPayloadType.ERROR,\n        }\n    }\n}\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"7\"\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSheetsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload | AuthUpdatePayload |\n    UnpausePayload | SyncStatePayload | ErrorPayload | TokenRequestPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    GET_SHEETS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n}\n\nexport interface GetSheetsPayload {\n    type: SyncerPayloadType.GET_SHEETS\n    spreadsheetId: string\n    sheets: gapi.client.sheets.Sheet[]\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n}\n","import { tagFactory } from \"../factories\"\nimport { JournalEntryModel, TagModel, BaseEntryModel } from \"../models\"\nimport { textController, syncerController } from \".\"\n\nconst tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\n\nexport const entryController = {\n    save: save,\n    update: update,\n}\n\nfunction save(entry: JournalEntryModel, entryIdx: number, content: string, sync?: boolean, force?: boolean) {\n    if (entry.saved !== content || force) {\n        entry.saved = content\n        entry.savedClean = textController.clean(entry.saved)\n        entry.tags = getTags(entry.tagMatches)\n        if (sync) {\n            syncerController.updateRow(entry.shelf.id, entry.journal.id, entry.journal.title, entryIdx, content)\n        }\n    }\n}\n\nfunction update(entry: BaseEntryModel | JournalEntryModel, content: string) {\n    entry.raw = content\n    entry.clean = textController.clean(content)\n    entry.safe = textController.escape(entry.raw)\n    entry.tokens = tokenize(entry.clean)\n    entry.tagMatches = getTagMatches(entry.safe)\n    entry.rendered = render(entry.safe, entry.tagMatches)\n}\n\nfunction render(text: string, tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): string {\n    for (let { tag, match } of tagMatches) {\n        let chars = text.split(\"\")\n        chars.splice(match.index!, match[0].length, tag.rendered)\n        text = chars.join(\"\")\n    }\n    return text\n}\n\nfunction getTags(tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): Map<string, TagModel> {\n    let tags: Map<string, TagModel> = new Map()\n    for (let { tag } of tagMatches) {\n        if (tags.has(tag.clean)) {\n            tags.get(tag.clean)!.frq += 1\n        } else {\n            tags.set(tag.clean, tag)\n        }\n    }\n    return tags\n}\n\nfunction getTagMatches(text: string): { tag: TagModel, match: RegExpMatchArray }[] {\n    let tagMatches = []\n    let matchesIter = text.matchAll(tagPattern)\n    for (let match of matchesIter) {\n        let tag = tagFactory.createTag(match[0], match[1], match[2], match[3], match[4])\n        tagMatches.push({ tag: tag, match: match })\n    }\n    tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n    return tagMatches\n}\n\nfunction tokenize(text: string): string[] {\n    let tokens = text.split(\" \")\n    return tokens.filter(token => {\n        return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n    })\n}\n","import { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { TagModel, BaseEntryModel } from \".\"\n\nexport class SearchModel {\n    public searchType: SearchType = SearchType.NONE\n    public simpleRefines: Map<string, TagModel> = new Map()\n    public complexRefines: Map<string, TagModel[]> = new Map()\n    public barQuery: BaseEntryModel = entryFactory.createBaseEntry()\n    public refinesQuery: {\n        keys: Set<string>,\n        vals: Map<string, TagModel>,\n        simpleKeys: Map<string, TagModel>\n    } = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    constructor() { }\n\n    get query(): BaseEntryModel {\n        return entryFactory.createBaseEntry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { FriendlyError } from \"../errors\"\nimport { JournalModel, TagModel } from \"../models\"\nimport { tagFactory, entryFactory } from \"../factories\"\nimport { syncerController, searchController, entryController } from \".\"\n\nexport const journalController = {\n    addEntry: addEntry,\n    moveEntry: moveEntry,\n    buildTags: buildTags,\n    deleteEntry: deleteEntry,\n    loadEntries: loadEntries,\n}\n\nfunction unloadOtherJournals(keepJournal: JournalModel) {\n    libraryModel.shelves.forEach(shelf => {\n        if (shelf === undefined) return\n        shelf.journals.forEach(journal => {\n            if (keepJournal.shelf.id !== journal.shelf.id || keepJournal.id !== journal.id) {\n                unloadEntries(journal)\n            }\n        })\n    })\n}\n\nfunction unloadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    journal.entries = []\n    journal.loaded = false\n}\n\nfunction loadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    unloadOtherJournals(journal)\n    syncerController.getRows(journal.shelf.id, journal.id, journal.title)\n        .then(payload => {\n            payload.rows.forEach((content, idx) => addEntry(journal, idx, content, false))\n            journal.loaded = true\n        })\n        .catch((error: ErrorPayload) => {\n            new FriendlyError(error.error.message, error.friendlyMsg)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n}\n\nfunction addEntry(journal: JournalModel, idx: number, content: string, sync?: boolean) {\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    entryController.save(entry, idx, content, sync)\n    journal.addEntry(idx, entry)\n    buildTags(journal)\n}\n\nfunction deleteEntry(journal: JournalModel, idx: number) {\n    journal.deleteEntry(idx)\n    buildTags(journal)\n}\n\nfunction moveEntry(journal: JournalModel, fromIdx: number, toIdx: number) {\n    if (fromIdx === toIdx) return\n    journal.moveEntry(fromIdx, toIdx)\n    buildTags(journal)\n}\n\nfunction buildTags(journal: JournalModel) {\n    let tags: Map<string, TagModel> = new Map()\n    let entries = Array.from(journal.entries.values())\n    for (let { entry } of entries.reverse()) {\n        for (let [key, tag] of entry.tags) {\n            if (tags.has(key)) {\n                tags.get(key)!.frq += tag.frq\n            } else {\n                tags.set(key, tagFactory.createTag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n            }\n        }\n    }\n    journal.tags = tags\n    searchController.buildRefines(journal)\n}\n","export * from \"./shelfView\"\r\nexport * from \"./signinView\"\r\nexport * from \"./libraryView\"\r\nexport * from \"./journalView\"\r\n","import m from \"mithril\"\nimport { googleComponent, journalsComponent, syncStateComponent, breadcrumbComponent } from \"../components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { googleController } from \"../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return {\n            async: true,\n            defer: true,\n            src: googleModel.src,\n            onload: () => {\n                if (!googleModel.isSignedIn) {\n                    googleController.initGapi()\n                }\n            }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n","export const textController = {\n    escape: escape,\n    clean: clean,\n}\n\nfunction escape(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n\nfunction clean(content: string): string {\n    return content.toLowerCase()\n}\n","import { textController } from \"../controllers\"\r\nimport { TagModel } from \"../models\"\r\n\r\nexport const tagFactory = {\r\n    createTag: createTag\r\n}\r\n\r\nfunction createTag(raw: string, flag: string, key: string, separator?: string | null, val?: string | null) {\r\n    separator = (separator !== undefined) ? separator : null\r\n    val = (val !== undefined) ? val : null\r\n    let clean = cleanTagString(raw)\r\n    let cleanKey = cleanTagString(key)\r\n    let cleanVal = (val !== null) ? cleanTagString(val) : null\r\n\r\n    let renderedKey = \"<span onclick=\\\"tagOnClick(event, '\"\r\n        + flag\r\n        + cleanKey\r\n        + ((separator !== null) ? separator : \"\")\r\n        + \"')\\\" class=\\\"\"\r\n        + ((separator !== null) ? \"tagKey\" : (val === null) ? \"simpleTag\" : \"roundTagVal\")\r\n        + \"\\\">\"\r\n        + flag\r\n        + key\r\n        + \"</span>\"\r\n\r\n    let renderedVal = \"\"\r\n\r\n    if (separator !== undefined && separator !== null) {\r\n        renderedVal = \"<span onclick=\\\"tagOnClick(event, '\"\r\n            + flag\r\n            + cleanKey\r\n            + separator\r\n            + ((cleanVal !== null) ? cleanVal.replace(/'/, \"\\\\'\") : \"\")\r\n            + \"')\\\" class=\\\"tagVal\\\">\"\r\n            + separator\r\n            + ((val !== null) ? val : \"\")\r\n            + \"</span>\"\r\n    }\r\n\r\n    return new TagModel(raw, flag, key, separator, val, clean, cleanKey, cleanVal, renderedKey + renderedVal)\r\n\r\n}\r\n\r\nfunction cleanTagString(str: string) {\r\n    str = textController.escape(str)\r\n    str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\r\n    str = str.toLowerCase()\r\n    return str\r\n}\r\n","import m from \"mithril\"\nimport { TestMode } from \"../types\"\n\nexport class UrlModel {\n\n    get hash(): string {\n        let url = new URL(window.location.href)\n        return url.hash\n    }\n    set hash(hash_: string) {\n        window.location.hash = hash_\n    }\n\n    get testMode(): TestMode {\n        if (this.hash === \"#!demo\") return TestMode.DEMO\n        let test = m.route.param(\"test\")\n        return (test !== null && this.instanceOfTestMode(test)) ? test : TestMode.OFF\n    }\n\n    private instanceOfTestMode(str: string): str is TestMode {\n        return ((<any>Object).values(TestMode).includes(str))\n    }\n\n    get shelfId(): string | undefined {\n        let id = m.route.param(\"shelfId\")\n        return (id === \"\") ? undefined : id\n    }\n    // TODO: set?\n\n    get journalId(): number | undefined {\n        let id = m.route.param(\"journalId\")\n        return (id === \"\") ? undefined : parseInt(id)\n    }\n    // TODO: set?\n}\n","export class TagModel {\n    public frq: number\n\n    constructor(\n        public raw: string,\n        public flag: string,\n        public key: string,\n        public separator: string | null,\n        public val: string | null,\n        public clean: string,\n        public cleanKey: string,\n        public cleanVal: string | null,\n        public rendered: string\n    ) { \n        this.frq = 1\n    }\n\n}\n","import { TagModel } from \".\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport class BaseEntryModel {\n    public raw: string = \"\"\n    public safe: string = \"\"\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public tags: Map<string, TagModel> = new Map()\n    public tagMatches: { tag: TagModel, match: RegExpMatchArray }[] = []\n}\n\nexport class JournalEntryModel extends BaseEntryModel {\n    readonly id: number\n    readonly shelf: ShelfModel\n    readonly journal: JournalModel\n\n    public saved: string = \"\"\n    public savedClean: string = \"\"\n\n    constructor(shelf: ShelfModel, journal: JournalModel, entryId: number) {\n        super()\n        this.id = entryId\n        this.shelf = shelf\n        this.journal = journal\n    }\n}\n","import { JournalModel } from \".\"\n\nexport class ShelfModel {\n    readonly id: string\n    readonly title: string | undefined\n\n    public error: string | undefined\n    public journals: Map<number, JournalModel> = new Map()\n\n    constructor(id: string, title?: string, error?: string) {\n        this.id = id\n        this.error = error\n        this.title = title\n    }\n\n}\n","import { SyncerState, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nexport class SyncerModel {\r\n    public requestsCounter: number\r\n    public requests: Map<string, Function>\r\n    public state: SyncerState\r\n\r\n    constructor() {\r\n        this.requestsCounter = 0\r\n        this.requests = new Map()\r\n        this.state = SyncerState.INITIALIZING\r\n    }\r\n\r\n    public pushSyncerTask<P extends SyncerPayload>(payload: P, worker: Worker): Promise<P> {\r\n        let id = `payload-${this.requestsCounter++}`\r\n        return new Promise((resolve, reject) => {\r\n            this.requests.set(id, ({ payload, error }: { payload: P, error: ErrorPayload }) => {\r\n                (error) ? reject(error) : resolve(payload)\r\n            })\r\n            worker.postMessage({ id, payload })\r\n        })\r\n    }\r\n\r\n}\r\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nexport class GoogleModel {\n    readonly src: string\n    readonly scope: string\n    readonly clientId: string\n\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    constructor(isSignedIn?: boolean) {\n        this.isSignedIn = isSignedIn\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\n            \"https://www.googleapis.com/auth/spreadsheets\",\n        ].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    get token(): string | undefined {\n        if (!this.user) return\n        let auth = this.user.getAuthResponse()\n        return auth.access_token\n    }\n}\n","import { ShelfModel } from \"./ShelfModel\"\nimport { JournalEntryModel, TagModel } from \".\"\n\nexport class JournalModel {\n    readonly id: number\n    readonly title: string\n    readonly shelf: ShelfModel\n\n    public loaded: boolean\n    public tags: Map<string, TagModel>\n    public entries: { id: number, entry: JournalEntryModel }[]\n\n    constructor(shelf: ShelfModel, journalId: number, journalTitle: string) {\n        this.entries = []\n        this.shelf = shelf\n        this.loaded = false\n        this.id = journalId\n        this.tags = new Map()\n        this.title = journalTitle\n    }\n\n    public addEntry(idx: number, entry: JournalEntryModel) {\n        this.entries.splice(idx, 0, { id: entry.id, entry })\n    }\n\n    public updateEntry(idx: number, entry: JournalEntryModel) {\n        this.entries[idx].entry = entry\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)[0]\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        let entry = this.entries.splice(fromIdx, 1)[0]\n        this.entries.splice(toIdx, 0, entry)\n    }\n\n}\n","import { ShelfModel } from \".\"\n\nexport class LibraryModel {\n    public shelves: Map<string, ShelfModel | undefined>\n\n    constructor() {\n        this.shelves = new Map()\n        this.shelfIds.forEach(id => this.shelves.set(id, undefined))\n    }\n\n    set shelfIds(ids: string[]) {\n        if (ids.length === 0) {\n            localStorage.removeItem(\"spreadsheetIds\")\n        } else {\n            localStorage.setItem(\"spreadsheetIds\", ids.join(\",\"))\n        }\n    }\n    get shelfIds(): string[] {\n        let ids = localStorage.getItem(\"spreadsheetIds\")\n        return (ids === null) ? [] : ids.split(\",\")\n    }\n\n}\n","import { FriendlyError } from \"../errors\"\n\nexport class ServiceWorkerModel {\n    constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            throw new FriendlyError(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n}\n","import m from \"mithril\"\n\nexport class FriendlyError extends Error {\n    constructor(errorMsg: string, public friendlyMsg: string) {\n        super(errorMsg)\n        console.warn(errorMsg)\n        // journal.errors.push(friendlyMsg) // TODO reassign\n        m.redraw()\n    }\n}\n","import { ShelfModel, JournalModel } from \"../models\"\n\nexport const shelfFactory = {\n    createShelf: createShelf,\n}\n\nfunction createShelf(spreadsheetId: string, spreadsheet?: gapi.client.sheets.Spreadsheet, error?: string): ShelfModel {\n    if (\n        spreadsheet !== undefined &&\n        spreadsheet.spreadsheetId !== undefined &&\n        spreadsheet.properties !== undefined &&\n        spreadsheet.properties.title !== undefined &&\n        spreadsheet.sheets !== undefined\n    ) {\n        let shelf = new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title)\n        getJournals(shelf, spreadsheet.sheets).forEach(journal => shelf.journals.set(journal.id, journal))\n        return shelf\n    }\n    return new ShelfModel(spreadsheetId, undefined, error)\n}\n\nfunction getJournals(shelf: ShelfModel, sheets: gapi.client.sheets.Sheet[]): JournalModel[] {\n    let journals: JournalModel[] = []\n    sheets.forEach(sheet => {\n        if (\n            sheet.properties !== undefined &&\n            sheet.properties.title !== undefined &&\n            sheet.properties.sheetId !== undefined\n        ) {\n            let journal = new JournalModel(\n                shelf, sheet.properties.sheetId, sheet.properties.title\n            )\n            if (journal === undefined) return\n            journals.push(journal)\n        }\n    })\n    return journals\n}\n","import { entryController } from \"../controllers\"\nimport { JournalEntryModel, ShelfModel, JournalModel, BaseEntryModel } from \"../models\"\n\nlet entryCounter = -1\n\nexport const entryFactory = {\n    createBaseEntry: createBaseEntry,\n    createJournalEntry: createJournalEntry\n}\n\nfunction createBaseEntry(content?: string) {\n    let entry = new BaseEntryModel()\n    entryController.update(entry, content || \"\")\n    return entry\n}\n\nfunction createJournalEntry(shelf: ShelfModel, journal: JournalModel, content: string) {\n    let entry = new JournalEntryModel(shelf, journal, entryCounter += 1)\n    entryController.update(entry, content)\n    return entry\n}\n","export const caretController = {\n    getCaretPosition: getCaretPosition,\n    setCaretPosition: setCaretPosition,\n}\n\nfunction node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nfunction getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nfunction setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","import { searchModel } from \"..\"\nimport { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { entryController } from \"./entryController\"\nimport { TagModel, JournalModel, JournalEntryModel } from \"../models\"\n\nexport const searchController = {\n    reset: reset,\n    buildRefines: buildRefines,\n    filteredEntries: filteredEntries,\n    updateSearchbar: updateSearchbar,\n}\n\nfunction updateSearchbar(content: string) {\n    entryController.update(searchModel.barQuery, content)\n}\n\nfunction reset() {\n    searchModel.searchType = SearchType.NONE\n    searchModel.barQuery = entryFactory.createBaseEntry()\n    searchModel.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n}\n\nfunction buildRefines(journal: JournalModel) {\n    let simpleRefines: Map<string, TagModel> = new Map()\n    let complexRefines: Map<string, TagModel[]> = new Map()\n\n    for (let tag of journal.tags.values()) {\n        if (tag.val === null) {\n            let key = `${tag.flag}${tag.cleanKey}`\n            if (!simpleRefines.has(key)) {\n                simpleRefines.set(key, tag)\n            }\n        } else {\n            let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n            if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n            complexRefines.get(key)!.push(tag)\n        }\n    }\n\n    searchModel.simpleRefines = new Map([...simpleRefines.entries()])\n    searchModel.complexRefines = new Map([...complexRefines.entries()].sort())\n\n    cleanRefines()\n}\n\nfunction cleanRefines() {\n    // Clean stale simple tag key (refine val) selections\n    for (let [key,] of searchModel.refinesQuery.simpleKeys) {\n        if (!searchModel.simpleRefines.has(key)) {\n            searchModel.refinesQuery.simpleKeys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag key selections\n    for (let key of searchModel.refinesQuery.keys) {\n        if (!searchModel.complexRefines.has(key)) {\n            searchModel.refinesQuery.keys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag val\n    for (let [key,] of searchModel.refinesQuery.vals) {\n        if (!Array.from(searchModel.complexRefines.values()).some(tags => tags.some(tag => tag.clean === key))) {\n            searchModel.refinesQuery.vals.delete(key)\n        }\n    }\n}\n\nfunction filteredEntries(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    if (searchModel.query.tokens.length === 0) {\n        searchModel.searchType = SearchType.NONE\n        filteredEntries = entries.map(({ entry }, idx) => { return { idx, entry } })\n    } else {\n        searchModel.searchType = SearchType.AND\n        filteredEntries = search(entries)\n        if (filteredEntries.length === 0) {\n            searchModel.searchType = SearchType.OR\n            filteredEntries = search(entries)\n        }\n    }\n    return filteredEntries\n}\n\nfunction search(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let query = searchModel.query\n    let sourceEntries = entries\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    for (let [idx, { entry }] of sourceEntries.entries()) {\n        switch (searchModel.searchType) {\n            case SearchType.AND:\n                if (query.tokens.every(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n            case SearchType.OR:\n                if (query.tokens.some(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n        }\n    }\n    return filteredEntries\n}\n\nfunction match(token: string, entry: JournalEntryModel) {\n\n    if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token.substring(1)) === undefined\n    } else if (token.startsWith(\"-\")) {\n        return !entry.savedClean.includes(token.substring(1))\n    } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token) !== undefined\n    } else {\n        return entry.savedClean.includes(token)\n    }\n}\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { googleModel, urlModel } from \"..\"\r\nimport { syncerController, libraryController } from \"../controllers\"\r\nimport { urlController } from \"./urlController\"\r\n\r\nexport const googleController = {\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    initGapi: initGapi,\r\n}\r\n\r\nfunction signOut() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\r\n}\r\n\r\nfunction signIn() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\r\n}\r\n\r\nfunction initGapi() {\r\n    let gapi_ = (urlModel.testMode === TestMode.OFF) ? gapi : new MockGapi()\r\n    googleModel.gapi_ = gapi_\r\n    googleModel.gapi_.load('auth2', () => {\r\n        googleModel.gapi_!.auth2.init({\r\n            scope: googleModel.scope, client_id: googleModel.clientId\r\n        }).then(() => {\r\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\r\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\r\n        })\r\n    })\r\n}\r\n\r\nasync function isSignedIn(signedIn: boolean) {\r\n    googleModel.isSignedIn = signedIn\r\n    if (googleModel.isSignedIn) {\r\n        googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\r\n        syncerController.updateAuth(googleModel.token)\r\n        libraryController.loadShelves()\r\n    } else {\r\n        libraryController.removeShelves()\r\n        urlController.redirect(\"/\")\r\n    }\r\n    m.redraw()\r\n}\r\n","export * from \"./Gapi\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import m from \"mithril\"\r\nimport { FriendlyError } from \"../errors\"\r\nimport { googleModel, syncerModel } from \"..\"\r\nimport { SyncerPayloadType, TestMode, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nconst worker = new Worker(\"./js/syncWebWorker.js\")\r\nworker.onmessage = (msg: MessageEvent) => onMessage(msg)\r\n\r\nexport const syncerController = {\r\n    unpause: unpause,\r\n    getRows: getRows,\r\n    deleteRow: deleteRow,\r\n    updateRow: updateRow,\r\n    getSheets: getSheets,\r\n    updateAuth: updateAuth,\r\n    updateTestMode: updateTestMode,\r\n    getSpreadsheet: getSpreadsheet,\r\n}\r\n\r\nasync function updateTestMode(testMode: TestMode) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.TEST_MODE_UPDATE,\r\n        testMode: testMode,\r\n    }, worker)\r\n}\r\n\r\nfunction updateAuth(token: string | undefined) {\r\n    if (token === undefined) return\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.AUTH_UPDATE,\r\n        token: token,\r\n    }, worker)\r\n}\r\n\r\nfunction getSpreadsheet(spreadsheetId: string) {\r\n    let spreadsheet: gapi.client.sheets.Spreadsheet | undefined = undefined\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_SPREADSHEET,\r\n        spreadsheetId: spreadsheetId,\r\n        spreadsheet: spreadsheet\r\n    }, worker)\r\n}\r\n\r\nfunction getSheets(spreadsheetId: string) {\r\n    let sheets: gapi.client.sheets.Sheet[] = []\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_SHEETS,\r\n        spreadsheetId: spreadsheetId,\r\n        sheets: sheets\r\n    }, worker)\r\n}\r\n\r\nfunction getRows(shelfId: string, journalId: number, journalTitle: string) {\r\n    let rows: string[] = []\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_ROWS,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        rows: rows\r\n    }, worker)\r\n}\r\n\r\nasync function deleteRow(idx: number, spreadsheetId: string, sheetId: number) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.DELETE_ROW,\r\n        spreadsheetId: spreadsheetId,\r\n        sheetId: sheetId,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\nasync function updateRow(shelfId: string, journalId: number, journalTitle: string, idx: number, content: string) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UPDATE_ROW,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        content: content,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\n// TODO: moveRow\r\n\r\nasync function unpause() {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UNPAUSE\r\n    }, worker)\r\n}\r\n\r\nfunction onMessage(msg: MessageEvent) {\r\n    let { id, payload, error }: { id: string | null, payload: SyncerPayload, error: ErrorPayload } = msg.data\r\n    if (id !== null && syncerModel.requests.has(id)) {\r\n        syncerModel.requests.get(id)!({ payload, error })\r\n        syncerModel.requests.delete(id)\r\n    } else {\r\n        switch (payload.type) {\r\n            case SyncerPayloadType.SYNC_STATE:\r\n                syncerModel.state = payload.state\r\n                m.redraw()\r\n                break\r\n            case SyncerPayloadType.ERROR:\r\n                new FriendlyError(payload.error.message, payload.friendlyMsg)\r\n                break\r\n            case SyncerPayloadType.TOKEN_REQUEST:\r\n                updateAuth(googleModel.token)\r\n                break\r\n        }\r\n    }\r\n}\r\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { FriendlyError } from \"../errors\"\nimport { shelfFactory } from \"../factories\"\nimport { syncerController } from \"../controllers\"\nimport { urlController } from \"./urlController\"\nimport { journalController } from \"./journalController\"\n\nconst spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n\nexport const libraryController = {\n    addShelves: addShelves,\n    loadShelves: loadShelves,\n    removeShelves: removeShelves,\n    getSpreadsheetIdsFromUrls: getSpreadsheetIdsFromUrls,\n}\n\nfunction addShelves(urls: string) {\n    let ids = getSpreadsheetIdsFromUrls(urls)\n    ids = ids.filter(id => !libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.set(id, undefined))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n    loadShelves(false, ids)\n}\n\nfunction removeShelves(ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    ids = ids.filter(id => libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.delete(id))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n}\n\nfunction loadShelves(reloadLoaded?: boolean, ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    if (reloadLoaded) {\n        ids.forEach(id => libraryModel.shelves.set(id, undefined))\n        m.redraw()\n    }\n    ids.filter(id => !libraryModel.shelves.get(id))\n        .forEach(id => syncerController.getSpreadsheet(id)\n        .then(payload => {\n            let shelf = shelfFactory.createShelf(id, payload.spreadsheet)\n            libraryModel.shelves.set(shelf.id, shelf)\n            let journal = urlController.getActiveJournal()\n            if (journal && journal.shelf === shelf) {\n                journalController.loadEntries(journal)\n            }\n        })\n        .catch((error: ErrorPayload) => {\n            new FriendlyError(error.error.message, error.friendlyMsg)\n            let shelf = shelfFactory.createShelf(id, undefined, error.friendlyMsg)\n            libraryModel.shelves.set(id, shelf)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n    )\n}\n\nfunction getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n    let ids: string[] = []\n    if (urls) {\n        Array.from(urls.matchAll(spreadsheetIdPattern)).forEach(m => ids.push(m[1]))\n    }\n    return ids\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { BaseEntryModel, JournalModel } from \"../models\"\nimport { urlController, journalController, caretController, entryController } from \"../controllers\"\n\nexport function composeComponent() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefixEntry = entryFactory.createBaseEntry()\n    const composeContentEntry = entryFactory.createBaseEntry()\n    const composeSuffixEntry = entryFactory.createBaseEntry()\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#compose\", [\n            m(\n                \"#prefix\",\n                composeNodeSettings(composePrefixEntry, journal, prefixSettings),\n                m.trust(composePrefixEntry.rendered)\n            ),\n            m(\n                \"#content\",\n                composeNodeSettings(composeContentEntry, journal, entrySettings),\n                m.trust(composeContentEntry.rendered)\n            ),\n            m(\n                \"#suffix\",\n                composeNodeSettings(composeSuffixEntry, journal, suffixSettings),\n                m.trust(composeSuffixEntry.rendered)\n            ),\n        ])\n    }\n\n    function getComposedContent() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: BaseEntryModel, journal: JournalModel, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event, journal),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any, journal: JournalModel) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let content = getComposedContent()\n            entryController.update(composeContentEntry, \"\")\n            let idx = journal.entries.length\n            journalController.addEntry(journal, idx, content, true)\n        }\n    }\n\n    function composeInput(event: any, entry: BaseEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function composeUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { JournalModel, JournalEntryModel } from \"../models\"\nimport {\n    caretController, urlController, entryController, journalController, searchController\n} from \"../controllers\"\n\nexport function entriesComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        let shelf = urlController.getActiveShelf()\n        const journal = urlController.getActiveJournal()\n        if (!shelf || !journal) return null\n\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesList(journal),\n        ])\n    }\n\n    function entriesList(journal: JournalModel) {\n        return searchController.filteredEntries(journal.entries)\n            .map(({ idx, entry }) => entryVnode(entry, idx))\n    }\n\n    function entryVnode(entry: JournalEntryModel, entryIdx: number): m.Vnode {\n        return m(\".entryWrap\", { id: `entry-${entry.id}` }, [\n            entryContent(entry, entryIdx),\n            deleteEntryButton(entry, entryIdx),\n        ])\n    }\n\n    function deleteEntryButton(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: async () => journalController.deleteEntry(entry.journal, entryIdx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"div\", entryContentSettings(entry, entryIdx), m.trust(entry.rendered))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: JournalEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    async function onEntryBlur(event: any, entry: JournalEntryModel, entryIdx: number) {\n        event.redraw = false\n        entryController.save(entry, entryIdx, event.target.innerText, true)\n        journalController.buildTags(entry.journal)\n    }\n\n    function entryContentSettings(entry: JournalEntryModel, entryIdx: number) {\n        return {\n            id: `entry-${entry.id}-content`,\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, entryIdx),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ShelfModel } from \"../models\"\nimport { libraryController } from \"../controllers\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        let shelves = Array.from(libraryModel.shelves.entries())\n        return m(\"#shelvesList\", shelves.map(([id, shelf]) => shelfNode(id, shelf)))\n    }\n\n    function delShelfButton(id: string) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: () => libraryController.removeShelves([id])\n        }, \"del\")\n    }\n\n    function retryShelfLoadButton(id: string) {\n        return m(\"button\", {\n            onclick: () => libraryController.loadShelves(true, [id])\n        }, \"retry\")\n    }\n\n    function shelfNode(id: string, shelf: ShelfModel | undefined) {\n        if (shelf === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", id)\n            ])\n        } else if (shelf.error !== undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", `${id} ${shelf.error}`),\n                retryShelfLoadButton(id)\n            ])\n        } else {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"a\", { href: `#/library/${id}` }, shelf.title)\n            ])\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport function refinesComponent() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes() {\n        if (searchModel.simpleRefines.size === 0) return\n        return m(\".tagRefineWrap\", [\n            refineKeyVnode(simpleTagsHeader, searchModel.simpleRefines.size),\n            Array.from(searchModel.simpleRefines, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(searchModel.complexRefines, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: searchModel.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: TagModel) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", {\n                    type: \"checkbox\", checked: (tag.val === null)\n                        ? searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                        : searchModel.refinesQuery.vals.has(tag.clean)\n                }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: TagModel) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            searchModel.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            searchModel.refinesQuery.keys.has(key)\n                ? searchModel.refinesQuery.keys.delete(key)\n                : searchModel.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: TagModel) {\n        if (tag.val === null) {\n            searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                ? searchModel.refinesQuery.simpleKeys.delete(tag.clean)\n                : searchModel.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            searchModel.refinesQuery.vals.has(tag.clean)\n                ? searchModel.refinesQuery.vals.delete(tag.clean)\n                : searchModel.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { urlController } from \"../controllers\"\n\nexport function journalsComponent() {\n\n    function view() {\n        return m(\"#journals\", journalList())\n    }\n\n    function journalList() {\n        let shelf = urlController.getActiveShelf()\n        if (shelf === undefined) {\n            urlController.redirect(\"/library\")\n            return\n        }\n        return Array.from(shelf.journals.values()).map(journal => {\n            let link = `#/library/${journal.shelf.id}/${journal.id}`\n            return m(\"li\", m(\"a\", { href: link }, journal.title))\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { syncerModel, googleModel, libraryModel } from \"..\"\nimport { SyncerState } from \"../types\"\nimport { syncerController } from \"../controllers\"\n\nexport function syncStateComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn || libraryModel.shelves.size === 0) return\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncerModel.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive...\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused.\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"Cloud synced.\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive...\"\n                break\n            case SyncerState.INITIALIZING:\n                txt = \"Initializing...\"\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncerModel.state)\n    }\n\n    function unpauseSync() {\n        if (syncerModel.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncerController.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncerModel.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { Caret } from \"../types\"\nimport { caretController, textController, searchController, urlController } from \"../controllers\"\n\n\nexport function searchbarComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(searchModel.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\")\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onSearchInput(event),\n            onupdate: () => onSearchUpdate(),\n            onkeydown: (event: any) => onSearchKeydown(event)\n        }\n    }\n\n    function onSearchInput(event: any) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        searchController.updateSearchbar(textController.escape(event.target.innerText))\n    }\n\n    function onSearchUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    function onSearchKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => searchController.updateSearchbar(\"\")\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { libraryController } from \"../controllers\"\r\nimport { libraryModel } from \"..\"\r\n\r\nexport function addShelvesComponent() {\r\n\r\n    let newShelfUrls = \"\"\r\n    let addingShelves = false\r\n\r\n    function view() {\r\n        return m(\"#addShelves\", [\r\n            addShelvesMessage(),\r\n            addShelvesButton(),\r\n            addShelvesTextbox(),\r\n        ])\r\n    }\r\n\r\n    function addShelvesMessage() {\r\n        if (libraryModel.shelves.size !== 0) return\r\n        return m(\"span\", \"Add Google Spreadsheet URLs here to get started. \")\r\n    }\r\n\r\n    function addShelvesButton() {\r\n        return m(\"button\", {\r\n            id: \"addShelvesButton\",\r\n            onclick: async () => {\r\n                if (addingShelves) libraryController.addShelves(newShelfUrls)\r\n                newShelfUrls = \"\"\r\n                addingShelves = !addingShelves\r\n            }\r\n        }, (addingShelves) ? \" ✓ \" : \"+/-\")\r\n    }\r\n\r\n    function addShelvesTextbox() {\r\n        if (!addingShelves) return null\r\n        return m(\"textarea\", {\r\n            id: \"addShelvesText\",\r\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n            oninput: (event: any) => newShelfUrls = event.target.value\r\n        })\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n    }\r\n\r\n}\r\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\n\nexport function breadcrumbComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn) return\n        return m(\"#breadcrumb\", urlController.getBreadcrumbTrail())\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\r\nimport { googleModel } from \"..\"\r\nimport { googleComponent } from \"../components\"\r\n\r\nexport function signinView() {\r\n\r\n    function view() {\r\n        return m(\"#auth\", [\r\n            m(googleComponent),\r\n        ])\r\n    }\r\n\r\n    function onupdate() {\r\n        if (googleModel.isSignedIn) {\r\n            window.location.hash = \"/library\" // TODO: redirect to correct place\r\n        }\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n\r\n}\r\n","import m from \"mithril\"\nimport { \n    googleComponent, shelvesComponent, syncStateComponent, addShelvesComponent\n} from \"../components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(syncStateComponent),\n            m(addShelvesComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { urlController, journalController } from \"../controllers\"\nimport {\n    googleComponent, breadcrumbComponent, entriesComponent, syncStateComponent,\n    searchbarComponent, refinesComponent, composeComponent\n} from \"../components\"\n\nexport function journalView() {\n\n    function oninit() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded) return\n        journalController.loadEntries(journal)\n    }\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(searchbarComponent),\n            m(refinesComponent),\n            m(\"#entriesWrap\", [\n                m(entriesComponent),\n                m(composeComponent),\n            ])\n        ])\n    }\n\n    return {\n        view: view,\n        oninit: oninit,\n    }\n\n}\n"],"sourceRoot":""}