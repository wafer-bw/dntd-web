{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"m\"","webpack:///./src/types/index.ts","webpack:///./src/controllers/index.ts","webpack:///./src/index.ts","webpack:///./src/factories/index.ts","webpack:///./src/components/index.ts","webpack:///./src/errors/index.ts","webpack:///./src/models/index.ts","webpack:///./src/controllers/urlController.ts","webpack:///./src/types/errors.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncer.ts","webpack:///./src/controllers/syncerController.ts","webpack:///./src/controllers/entryController.ts","webpack:///./src/models/SearchModel.ts","webpack:///./src/controllers/journalController.ts","webpack:///./src/views/index.ts","webpack:///./src/views/shelfView.ts","webpack:///./src/components/googleComponent.ts","webpack:///./src/errors/FriendlyError.ts","webpack:///./src/controllers/textController.ts","webpack:///./src/factories/tagFactory.ts","webpack:///./src/models/UrlModel.ts","webpack:///./src/models/TagModel.ts","webpack:///./src/models/EntryModel.ts","webpack:///./src/models/ShelfModel.ts","webpack:///./src/models/SyncerModel.ts","webpack:///./src/models/GoogleModel.ts","webpack:///./src/models/JournalModel.ts","webpack:///./src/models/LibraryModel.ts","webpack:///./src/models/ServiceWorkerModel.ts","webpack:///./src/factories/shelfFactory.ts","webpack:///./src/factories/entryFactory.ts","webpack:///./src/controllers/caretController.ts","webpack:///./src/controllers/searchController.ts","webpack:///./src/controllers/googleController.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/controllers/libraryController.ts","webpack:///./src/components/composeComponent.ts","webpack:///./src/components/entriesComponent.ts","webpack:///./src/components/shelvesComponent.ts","webpack:///./src/components/refinesComponent.ts","webpack:///./src/components/testModeComponent.ts","webpack:///./src/components/journalsComponent.ts","webpack:///./src/components/syncStateComponent.ts","webpack:///./src/components/searchbarComponent.ts","webpack:///./src/components/addShelvesComponent.ts","webpack:///./src/components/breadcrumbComponent.ts","webpack:///./src/views/signinView.ts","webpack:///./src/views/libraryView.ts","webpack:///./src/views/journalView.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","serviceWorkerModel","ServiceWorkerModel","googleModel","GoogleModel","syncerModel","SyncerModel","libraryModel","LibraryModel","urlModel","UrlModel","searchModel","SearchModel","root","document","getElementById","route","signinView","journalView","libraryView","shelfView","getActiveShelf","id","shelfId","undefined","shelves","urlController","redirect","hash","getTestMode","forceUpdate","newMode","startsWith","TestMode","DEMO","paramMode","getParam","instanceOfTestMode","currentMode","testMode","console","log","syncerController","updateTestMode","OFF","getActiveJournal","journalId","shelf","journals","getBreadcrumbTrail","breadcrumb","split","filter","crumb","length","trail","slice","join","title","parseInt","push","href","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","pause","super","this","payload","error","type","SyncerPayloadType","ERROR","SearchType","SyncerResponseType","SyncerState","worker","Worker","updateAuth","token","pushSyncerTask","AUTH_UPDATE","onmessage","msg","data","requests","has","delete","FriendlyError","SYNC_STATE","state","redraw","message","TOKEN_REQUEST","onMessage","unpause","UNPAUSE","getRows","journalTitle","GET_ROWS","spreadsheetId","sheetTitle","sheetId","rows","deleteRow","idx","DELETE_ROW","updateRow","content","UPDATE_ROW","TEST_MODE_UPDATE","getSpreadsheet","GET_SPREADSHEET","spreadsheet","tagPattern","entryController","save","entry","entryIdx","sync","force","saved","savedClean","textController","clean","tags","tagMatches","Map","tag","frq","set","getTags","journal","update","raw","safe","escape","tokens","text","trim","matchesIter","matchAll","match","tagFactory","createTag","sort","a","b","index","getTagMatches","rendered","chars","splice","render","searchType","NONE","simpleRefines","complexRefines","barQuery","entryFactory","createBaseEntry","refinesQuery","keys","Set","vals","simpleKeys","Array","from","values","addEntry","createJournalEntry","buildTags","entries","reverse","flag","separator","val","searchController","buildRefines","journalController","moveEntry","fromIdx","toIdx","deleteEntry","loadEntries","keepJournal","forEach","loaded","unloadEntries","then","catch","finally","view","googleComponent","testModeComponent","syncStateComponent","breadcrumbComponent","journalsComponent","isSignedIn","onclick","googleController","signOut","class","signIn","async","defer","src","onload","initGapi","warn","unsafe","replace","toLowerCase","cleanTagString","str","endsWith","substring","cleanKey","cleanVal","renderedKey","renderedVal","TagModel","window","location","hash_","URL","localStorage","getItem","setItem","includes","url","searchParams","param","BaseEntryModel","entryId","requestsCounter","INITIALIZING","Promise","resolve","reject","postMessage","scope","clientId","user","getAuthResponse","access_token","shelfIds","ids","removeItem","navigator","addEventListener","serviceWorker","register","shelfFactory","createShelf","properties","sheets","ShelfModel","sheet","JournalModel","getJournals","entryCounter","JournalEntryModel","caretController","getCaretPosition","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","search","query","sourceEntries","filteredEntries","AND","every","OR","some","reset","cleanRefines","map","updateSearchbar","signedIn","gapi_","auth2","getAuthInstance","currentUser","libraryController","loadShelves","removeShelves","gapi","MockGapi","load","init","client_id","listen","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","MockIsSignedIn","spreadsheetIdPattern","reloadLoaded","getSpreadsheetIdsFromUrls","urls","addShelves","caret","composePrefixEntry","composeContentEntry","composeSuffixEntry","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","extraSettings","baseSettings","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","composeKeydown","oninput","target","composeInput","onupdate","assign","trust","entriesList","entryContent","deleteEntryButton","entryVnode","blur","onEntryKeydown","onEntryInput","onEntryUpdate","onblur","onEntryBlur","entryContentSettings","delShelfButton","retryShelfLoadButton","shelfNode","expanded","simpleRefinesVnodes","size","refineKeyVnode","refineValVnode","count","metaKey","ctrlKey","add","refineTagKeyOnClick","tagRefineKeySettings","checked","tagRefineValSettings","tagClass","hideClass","refineTagValOnClick","link","journalList","syncStateText","txt","class_","stateColorClass","DOWNLOADING","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","placeholder","onSearchInput","onSearchKeydown","newShelfUrls","addingShelves","addShelvesMessage","addShelvesButton","addShelvesTextbox","addShelvesComponent","shelvesComponent","searchbarComponent","refinesComponent","entriesComponent","composeComponent","oninit"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = m;","export * from \"./caret\"\nexport * from \"./errors\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncer\"\n","export * from \"./urlController\"\r\nexport * from \"./textController\"\r\nexport * from \"./entryController\"\r\nexport * from \"./caretController\"\r\nexport * from \"./searchController\"\r\nexport * from \"./googleController\"\r\nexport * from \"./syncerController\"\r\nexport * from \"./libraryController\"\r\nexport * from \"./journalController\"\r\n","import m from \"mithril\"\nimport { signinView, libraryView, shelfView, journalView } from \"./views\"\nimport {\n    ServiceWorkerModel, SyncerModel, LibraryModel, GoogleModel, UrlModel, SearchModel\n} from \"./models\"\n\nexport const serviceWorkerModel = new ServiceWorkerModel()\nexport const googleModel = new GoogleModel()\nexport const syncerModel = new SyncerModel()\nexport const libraryModel = new LibraryModel()\nexport const urlModel = new UrlModel()\nexport const searchModel = new SearchModel()\n\nconst root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": signinView,        // TODO switch to be about page\n        \"/demo\" : journalView,  // TODO get working\n        \"/signin\": signinView,\n        \"/library\": libraryView,\n        \"/library/:shelfId\": shelfView,\n        \"/library/:shelfId/:journalId\": journalView,\n    })\n}\n","export * from \"./tagFactory\"\nexport * from \"./shelfFactory\"\nexport * from \"./entryFactory\"\n","export * from \"./googleComponent\"\nexport * from \"./composeComponent\"\nexport * from \"./entriesComponent\"\nexport * from \"./shelvesComponent\"\nexport * from \"./refinesComponent\"\nexport * from \"./testModeComponent\"\nexport * from \"./journalsComponent\"\nexport * from \"./syncStateComponent\"\nexport * from \"./searchbarComponent\"\nexport * from \"./addShelvesComponent\"\nexport * from \"./breadcrumbComponent\"","export * from \"./FriendlyError\"\n","export * from \"./UrlModel\"\r\nexport * from \"./TagModel\"\r\nexport * from \"./EntryModel\"\r\nexport * from \"./ShelfModel\"\r\nexport * from \"./SyncerModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./GoogleModel\"\r\nexport * from \"./SearchModel\"\r\nexport * from \"./JournalModel\"\r\nexport * from \"./LibraryModel\"\r\nexport * from \"./ServiceWorkerModel\"\r\n","import m from \"mithril\"\nimport { libraryModel, urlModel } from \"..\"\nimport { ShelfModel, JournalModel } from \"../models\"\nimport { TestMode } from \"../types\"\nimport { syncerController } from \"./syncerController\"\n\nexport const urlController = {\n    redirect: redirect,\n    getTestMode: getTestMode,\n    getActiveShelf: getActiveShelf,\n    getActiveJournal: getActiveJournal,\n    getBreadcrumbTrail: getBreadcrumbTrail,\n}\n\nfunction redirect(hash: string) {\n    urlModel.hash = hash\n}\n\nfunction getTestMode(forceUpdate?: boolean): TestMode {\n    let newMode: TestMode | undefined = undefined\n\n    if (urlModel.hash.startsWith(\"#/demo\")) {\n        newMode = TestMode.DEMO\n    }\n\n    let paramMode = urlModel.getParam(\"test\")\n    if (paramMode !== undefined && urlModel.instanceOfTestMode(paramMode)) {\n        newMode = paramMode\n    }\n\n    let currentMode = urlModel.testMode\n    if (newMode !== currentMode || forceUpdate) {\n        console.log(`current: ${currentMode}`)\n        console.log(`new: ${newMode}`)\n        urlModel.testMode = newMode\n        if (newMode !== undefined && urlModel.testMode !== undefined) {\n            syncerController.updateTestMode(urlModel.testMode)\n        }\n    }\n\n    let mode = urlModel.testMode\n    if (mode === undefined) return TestMode.OFF\n    return mode\n}\n\nfunction getActiveShelf(): ShelfModel | undefined {\n    let id = urlModel.shelfId\n    if (id === undefined) return undefined\n    return libraryModel.shelves.get(id)\n}\n\nfunction getActiveJournal(): JournalModel | undefined {\n    let id = urlModel.journalId\n    let shelf = getActiveShelf()\n    if (id === undefined || shelf === undefined) return undefined\n    return shelf.journals.get(id)\n}\n\nfunction getBreadcrumbTrail() {\n    let breadcrumb: m.Vnode[] = []\n    let hash = urlModel.hash.split(\"?\")[0].split(\"/\").filter(crumb => crumb !== \"#\" && crumb !== \"\")\n    let shelfId: string | undefined = undefined\n    for (let i = 0; i < hash.length; i++) {\n        let crumb = hash[i]\n        let trail = \"#/\" + hash.slice(0, i + 1).join(\"/\")\n        if (i === 1) {\n            shelfId = crumb\n            crumb = libraryModel.shelves.get(crumb)?.title || crumb\n        } else if (i === 2 && shelfId !== undefined) {\n            crumb = libraryModel.shelves.get(shelfId)?.journals.get(parseInt(crumb))?.title || crumb\n        }\n        if (i !== 0) breadcrumb.push(m(\"span\", \" / \"))\n        if (i === hash.length - 1) {\n            breadcrumb.push(m(\"span\", `${crumb}`))\n        } else {\n            breadcrumb.push(m(\"a\", { href: trail }, `${crumb}`))\n        }\n    }\n    return breadcrumb\n}\n","import { ErrorPayload, SyncerPayloadType } from \".\"\n\nexport interface GapiErrorResponseBody {\n    code: number,\n    message: string,\n    status: string\n}\n\nexport interface GapiErrorResponse {\n    error: GapiErrorResponseBody\n}\n\nexport class SyncerError extends Error { // TODO: see if this can be moved to src/errors/\n    public payload: ErrorPayload\n\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean, pause?: boolean) {\n        super(errorMsg)\n        this.payload = {\n            pause: (pause !== undefined) ? pause : true,\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: SyncerPayloadType.ERROR,\n        }\n    }\n}\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"DEMO-MODE\"\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload | AuthUpdatePayload |\n    UnpausePayload | SyncStatePayload | ErrorPayload | TokenRequestPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n}\n","import m from \"mithril\"\r\nimport { FriendlyError } from \"../errors\"\r\nimport { googleModel, syncerModel } from \"..\"\r\nimport { SyncerPayloadType, TestMode, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nconst worker = new Worker(\"./js/syncWebWorker.js\")\r\nworker.onmessage = (msg: MessageEvent) => onMessage(msg)\r\n\r\nexport const syncerController = {\r\n    unpause: unpause,\r\n    getRows: getRows,\r\n    deleteRow: deleteRow,\r\n    updateRow: updateRow,\r\n    updateAuth: updateAuth,\r\n    updateTestMode: updateTestMode,\r\n    getSpreadsheet: getSpreadsheet,\r\n}\r\n\r\nasync function updateTestMode(testMode: TestMode) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.TEST_MODE_UPDATE,\r\n        testMode: testMode,\r\n    }, worker)\r\n}\r\n\r\nfunction updateAuth(token: string | undefined) {\r\n    if (token === undefined) return\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.AUTH_UPDATE,\r\n        token: token,\r\n    }, worker)\r\n}\r\n\r\nfunction getSpreadsheet(spreadsheetId: string) {\r\n    let spreadsheet: gapi.client.sheets.Spreadsheet | undefined = undefined\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_SPREADSHEET,\r\n        spreadsheetId: spreadsheetId,\r\n        spreadsheet: spreadsheet\r\n    }, worker)\r\n}\r\n\r\nfunction getRows(shelfId: string, journalId: number, journalTitle: string) {\r\n    let rows: string[] = []\r\n    return syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.GET_ROWS,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        rows: rows\r\n    }, worker)\r\n}\r\n\r\nasync function deleteRow(idx: number, spreadsheetId: string, sheetId: number) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.DELETE_ROW,\r\n        spreadsheetId: spreadsheetId,\r\n        sheetId: sheetId,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\nasync function updateRow(shelfId: string, journalId: number, journalTitle: string, idx: number, content: string) {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UPDATE_ROW,\r\n        spreadsheetId: shelfId,\r\n        sheetTitle: journalTitle,\r\n        sheetId: journalId,\r\n        content: content,\r\n        idx: idx,\r\n    }, worker)\r\n}\r\n\r\n// TODO: moveRow\r\n\r\nasync function unpause() {\r\n    return await syncerModel.pushSyncerTask({\r\n        type: SyncerPayloadType.UNPAUSE\r\n    }, worker)\r\n}\r\n\r\nfunction onMessage(msg: MessageEvent) {\r\n    let { id, payload, error }: { id: string | null, payload: SyncerPayload, error: ErrorPayload } = msg.data\r\n    if (id !== null && syncerModel.requests.has(id)) {\r\n        syncerModel.requests.get(id)!({ payload, error })\r\n        syncerModel.requests.delete(id)\r\n    } else if (payload !== undefined) {\r\n        switch (payload.type) {\r\n            case SyncerPayloadType.SYNC_STATE:\r\n                syncerModel.state = payload.state\r\n                m.redraw()\r\n                break\r\n            case SyncerPayloadType.ERROR:\r\n                new FriendlyError(payload.error.message, payload.friendlyMsg)\r\n                break\r\n            case SyncerPayloadType.TOKEN_REQUEST:\r\n                updateAuth(googleModel.token)\r\n                break\r\n        }\r\n    } else {\r\n        throw new FriendlyError(\"undefined payload\", \"An unexpected error occurred.\")\r\n    }\r\n}\r\n","import { tagFactory } from \"../factories\"\nimport { JournalEntryModel, TagModel, BaseEntryModel } from \"../models\"\nimport { textController, syncerController } from \".\"\n\nconst tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\n\nexport const entryController = {\n    save: save,\n    update: update,\n}\n\nfunction save(entry: JournalEntryModel, entryIdx: number, content: string, sync?: boolean, force?: boolean) {\n    if (entry.saved !== content || force) {\n        entry.saved = content\n        entry.savedClean = textController.clean(entry.saved)\n        entry.tags = getTags(entry.tagMatches)\n        if (sync) {\n            syncerController.updateRow(entry.shelf.id, entry.journal.id, entry.journal.title, entryIdx, content)\n        }\n    }\n}\n\nfunction update(entry: BaseEntryModel | JournalEntryModel, content: string) {\n    entry.raw = content\n    entry.clean = textController.clean(content)\n    entry.safe = textController.escape(entry.raw)\n    entry.tokens = tokenize(entry.clean)\n    entry.tagMatches = getTagMatches(entry.safe)\n    entry.rendered = render(entry.safe, entry.tagMatches)\n}\n\nfunction render(text: string, tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): string {\n    for (let { tag, match } of tagMatches) {\n        let chars = text.split(\"\")\n        chars.splice(match.index!, match[0].length, tag.rendered)\n        text = chars.join(\"\")\n    }\n    return text\n}\n\nfunction getTags(tagMatches: { tag: TagModel, match: RegExpMatchArray }[]): Map<string, TagModel> {\n    let tags: Map<string, TagModel> = new Map()\n    for (let { tag } of tagMatches) {\n        if (tags.has(tag.clean)) {\n            tags.get(tag.clean)!.frq += 1\n        } else {\n            tags.set(tag.clean, tag)\n        }\n    }\n    return tags\n}\n\nfunction getTagMatches(text: string): { tag: TagModel, match: RegExpMatchArray }[] {\n    let tagMatches = []\n    let matchesIter = text.matchAll(tagPattern)\n    for (let match of matchesIter) {\n        let tag = tagFactory.createTag(match[0], match[1], match[2], match[3], match[4])\n        tagMatches.push({ tag: tag, match: match })\n    }\n    tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n    return tagMatches\n}\n\nfunction tokenize(text: string): string[] {\n    let tokens = text.split(\" \")\n    return tokens.filter(token => {\n        return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n    })\n}\n","import { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { TagModel, BaseEntryModel } from \".\"\n\nexport class SearchModel {\n    public searchType: SearchType = SearchType.NONE\n    public simpleRefines: Map<string, TagModel> = new Map()\n    public complexRefines: Map<string, TagModel[]> = new Map()\n    public barQuery: BaseEntryModel = entryFactory.createBaseEntry()\n    public refinesQuery: {\n        keys: Set<string>,\n        vals: Map<string, TagModel>,\n        simpleKeys: Map<string, TagModel>\n    } = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    constructor() { }\n\n    get query(): BaseEntryModel {\n        return entryFactory.createBaseEntry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { FriendlyError } from \"../errors\"\nimport { JournalModel, TagModel } from \"../models\"\nimport { tagFactory, entryFactory } from \"../factories\"\nimport { syncerController, searchController, entryController } from \".\"\n\nexport const journalController = {\n    addEntry: addEntry,\n    moveEntry: moveEntry,\n    buildTags: buildTags,\n    deleteEntry: deleteEntry,\n    loadEntries: loadEntries,\n}\n\nfunction unloadOtherJournals(keepJournal: JournalModel) {\n    libraryModel.shelves.forEach(shelf => {\n        if (shelf === undefined) return\n        shelf.journals.forEach(journal => {\n            if (keepJournal.shelf.id !== journal.shelf.id || keepJournal.id !== journal.id) {\n                unloadEntries(journal)\n            }\n        })\n    })\n}\n\nfunction unloadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    journal.entries = []\n    journal.loaded = false\n}\n\nfunction loadEntries(journal: JournalModel | undefined) {\n    if (journal === undefined) return\n    unloadOtherJournals(journal)\n    syncerController.getRows(journal.shelf.id, journal.id, journal.title)\n        .then(payload => {\n            payload.rows.forEach((content, idx) => addEntry(journal, idx, content, false))\n            journal.loaded = true\n        })\n        .catch((error: ErrorPayload) => {\n            new FriendlyError(error.error.message, error.friendlyMsg)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n}\n\nfunction addEntry(journal: JournalModel, idx: number, content: string | undefined, sync?: boolean) {\n    content = (content === undefined) ? \"\" : content\n    let entry = entryFactory.createJournalEntry(journal.shelf, journal, content)\n    entryController.save(entry, idx, content, sync)\n    journal.addEntry(idx, entry)\n    buildTags(journal)\n}\n\nfunction deleteEntry(journal: JournalModel, idx: number) {\n    journal.deleteEntry(idx)\n    buildTags(journal)\n}\n\nfunction moveEntry(journal: JournalModel, fromIdx: number, toIdx: number) {\n    if (fromIdx === toIdx) return\n    journal.moveEntry(fromIdx, toIdx)\n    buildTags(journal)\n}\n\nfunction buildTags(journal: JournalModel) {\n    let tags: Map<string, TagModel> = new Map()\n    let entries = Array.from(journal.entries.values())\n    for (let { entry } of entries.reverse()) {\n        for (let [key, tag] of entry.tags) {\n            if (tags.has(key)) {\n                tags.get(key)!.frq += tag.frq\n            } else {\n                tags.set(key, tagFactory.createTag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n            }\n        }\n    }\n    journal.tags = tags\n    searchController.buildRefines(journal)\n}\n","export * from \"./shelfView\"\r\nexport * from \"./signinView\"\r\nexport * from \"./libraryView\"\r\nexport * from \"./journalView\"\r\n","import m from \"mithril\"\nimport {\n    googleComponent, journalsComponent, syncStateComponent, breadcrumbComponent,\n    testModeComponent,\n} from \"../components\"\n\nexport function shelfView() {\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(journalsComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { googleController } from \"../controllers\"\n\nexport function googleComponent() {\n\n    function view() {\n        return m(\"#googleApi\", [\n            preambleMessage(),\n            signInOutButton(),\n            m(\"script\", gapiScriptSettings()),\n        ])\n    }\n\n    function gapiScriptSettings() {\n        return {\n            async: true,\n            defer: true,\n            src: googleModel.src,\n            onload: () => {\n                if (!googleModel.isSignedIn) {\n                    googleController.initGapi()\n                }\n            }\n        }\n    }\n\n    function signInOutButton() {\n        return (googleModel.isSignedIn)\n            ? m(\"button\", { onclick: () => googleController.signOut(), class: \"authButton\" }, \"Sign Out\")\n            : m(\"button\", { onclick: () => googleController.signIn(), class: \"authButton\" }, \"Sign In\")\n    }\n\n    function preambleMessage() {\n        return (googleModel.isSignedIn !== undefined && !googleModel.isSignedIn)\n            ? m(\".preamble\", \"PREAMBLE MSG\") // TODO: fill out\n            : null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\n\nexport class FriendlyError extends Error {\n    constructor(errorMsg: string, public friendlyMsg: string) {\n        super(errorMsg)\n        console.warn(errorMsg)\n        // journal.errors.push(friendlyMsg) // TODO reassign\n        m.redraw()\n    }\n}\n","export const textController = {\n    escape: escape,\n    clean: clean,\n}\n\nfunction escape(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n\nfunction clean(content: string): string {\n    return content.toLowerCase()\n}\n","import { textController } from \"../controllers\"\r\nimport { TagModel } from \"../models\"\r\n\r\nexport const tagFactory = {\r\n    createTag: createTag\r\n}\r\n\r\nfunction createTag(raw: string, flag: string, key: string, separator?: string | null, val?: string | null) {\r\n    separator = (separator !== undefined) ? separator : null\r\n    val = (val !== undefined) ? val : null\r\n    let clean = cleanTagString(raw)\r\n    let cleanKey = cleanTagString(key)\r\n    let cleanVal = (val !== null) ? cleanTagString(val) : null\r\n\r\n    let renderedKey = \"<span onclick=\\\"tagOnClick(event, '\"\r\n        + flag\r\n        + cleanKey\r\n        + ((separator !== null) ? separator : \"\")\r\n        + \"')\\\" class=\\\"\"\r\n        + ((separator !== null) ? \"tagKey\" : (val === null) ? \"simpleTag\" : \"roundTagVal\")\r\n        + \"\\\">\"\r\n        + flag\r\n        + key\r\n        + \"</span>\"\r\n\r\n    let renderedVal = \"\"\r\n\r\n    if (separator !== undefined && separator !== null) {\r\n        renderedVal = \"<span onclick=\\\"tagOnClick(event, '\"\r\n            + flag\r\n            + cleanKey\r\n            + separator\r\n            + ((cleanVal !== null) ? cleanVal.replace(/'/, \"\\\\'\") : \"\")\r\n            + \"')\\\" class=\\\"tagVal\\\">\"\r\n            + separator\r\n            + ((val !== null) ? val : \"\")\r\n            + \"</span>\"\r\n    }\r\n\r\n    return new TagModel(raw, flag, key, separator, val, clean, cleanKey, cleanVal, renderedKey + renderedVal)\r\n\r\n}\r\n\r\nfunction cleanTagString(str: string) {\r\n    str = textController.escape(str)\r\n    str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\r\n    str = str.toLowerCase()\r\n    return str\r\n}\r\n","import m from \"mithril\"\nimport { TestMode } from \"../types\"\n\nexport class UrlModel {\n\n    get hash(): string {\n        return window.location.hash\n    }\n    set hash(hash_: string) {\n        window.location.hash = hash_\n    }\n\n    get url(): URL {\n        return new URL(window.location.href)\n    }\n\n    get testMode(): TestMode | undefined {\n        let mode = localStorage.getItem(\"testMode\")\n        if (mode !== null && this.instanceOfTestMode(mode)) return mode\n        return\n    }\n    set testMode(mode: TestMode | undefined) {\n        if (mode === undefined) return\n        localStorage.setItem(\"testMode\", mode)\n    }\n\n    public instanceOfTestMode(str: string): str is TestMode {\n        return ((<any>Object).values(TestMode).includes(str))\n    }\n\n    public getParam(key: string): string | undefined {\n        let val = this.url.searchParams.get(key) || m.route.param(key)\n        if (val === \"\") return\n        return val\n    }\n\n    get shelfId(): string | undefined {\n        let id = m.route.param(\"shelfId\")\n        return (id === \"\") ? undefined : id\n    }\n    // TODO: set?\n\n    get journalId(): number | undefined {\n        let id = m.route.param(\"journalId\")\n        return (id === \"\") ? undefined : parseInt(id)\n    }\n    // TODO: set?\n}\n","export class TagModel {\n    public frq: number\n\n    constructor(\n        public raw: string,\n        public flag: string,\n        public key: string,\n        public separator: string | null,\n        public val: string | null,\n        public clean: string,\n        public cleanKey: string,\n        public cleanVal: string | null,\n        public rendered: string\n    ) { \n        this.frq = 1\n    }\n\n}\n","import { TagModel } from \".\"\nimport { ShelfModel, JournalModel } from \"../models\"\n\nexport class BaseEntryModel {\n    public raw: string = \"\"\n    public safe: string = \"\"\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public tags: Map<string, TagModel> = new Map()\n    public tagMatches: { tag: TagModel, match: RegExpMatchArray }[] = []\n}\n\nexport class JournalEntryModel extends BaseEntryModel {\n    readonly id: number\n    readonly shelf: ShelfModel\n    readonly journal: JournalModel\n\n    public saved: string = \"\"\n    public savedClean: string = \"\"\n\n    constructor(shelf: ShelfModel, journal: JournalModel, entryId: number) {\n        super()\n        this.id = entryId\n        this.shelf = shelf\n        this.journal = journal\n    }\n}\n","import { JournalModel } from \".\"\n\nexport class ShelfModel {\n    readonly id: string\n    readonly title: string | undefined\n\n    public error: string | undefined\n    public journals: Map<number, JournalModel> = new Map()\n\n    constructor(id: string, title?: string, error?: string) {\n        this.id = id\n        this.error = error\n        this.title = title\n    }\n\n}\n","import { SyncerState, SyncerPayload, ErrorPayload } from \"../types\"\r\n\r\nexport class SyncerModel {\r\n    public requestsCounter: number\r\n    public requests: Map<string, Function>\r\n    public state: SyncerState\r\n\r\n    constructor() {\r\n        this.requestsCounter = 0\r\n        this.requests = new Map()\r\n        this.state = SyncerState.INITIALIZING\r\n    }\r\n\r\n    public pushSyncerTask<P extends SyncerPayload>(payload: P, worker: Worker): Promise<P> {\r\n        let id = `payload-${this.requestsCounter++}`\r\n        return new Promise((resolve, reject) => {\r\n            this.requests.set(id, ({ payload, error }: { payload: P, error: ErrorPayload }) => {\r\n                (error) ? reject(error) : resolve(payload)\r\n            })\r\n            worker.postMessage({ id, payload })\r\n        })\r\n    }\r\n\r\n}\r\n","import { MockGapi, MockGoogleUser } from \"../mocks\"\n\nexport class GoogleModel {\n    readonly src: string\n    readonly scope: string\n    readonly clientId: string\n\n    public isSignedIn: boolean | undefined\n    public gapi_: MockGapi | typeof gapi | undefined\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | undefined\n\n    constructor(isSignedIn?: boolean) {\n        this.isSignedIn = isSignedIn\n        this.src = \"https://apis.google.com/js/api.js\"\n        this.scope = [\n            \"https://www.googleapis.com/auth/spreadsheets\",\n        ].join(\" \")\n        this.clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\n    }\n\n    get token(): string | undefined {\n        if (!this.user) return\n        let auth = this.user.getAuthResponse()\n        return auth.access_token\n    }\n}\n","import { ShelfModel } from \"./ShelfModel\"\nimport { JournalEntryModel, TagModel } from \".\"\n\nexport class JournalModel {\n    readonly id: number\n    readonly title: string\n    readonly shelf: ShelfModel\n\n    public loaded: boolean\n    public tags: Map<string, TagModel>\n    public entries: { id: number, entry: JournalEntryModel }[]\n\n    constructor(shelf: ShelfModel, journalId: number, journalTitle: string) {\n        this.entries = []\n        this.shelf = shelf\n        this.loaded = false\n        this.id = journalId\n        this.tags = new Map()\n        this.title = journalTitle\n    }\n\n    public addEntry(idx: number, entry: JournalEntryModel) {\n        this.entries.splice(idx, 0, { id: entry.id, entry })\n    }\n\n    public updateEntry(idx: number, entry: JournalEntryModel) {\n        this.entries[idx].entry = entry\n    }\n\n    public deleteEntry(idx: number) {\n        this.entries.splice(idx, 1)[0]\n    }\n\n    public moveEntry(fromIdx: number, toIdx: number) {\n        let entry = this.entries.splice(fromIdx, 1)[0]\n        this.entries.splice(toIdx, 0, entry)\n    }\n\n}\n","import { ShelfModel } from \".\"\n\nexport class LibraryModel {\n    public shelves: Map<string, ShelfModel | undefined>\n\n    constructor() {\n        this.shelves = new Map()\n        this.shelfIds.forEach(id => this.shelves.set(id, undefined))\n    }\n\n    set shelfIds(ids: string[]) {\n        if (ids.length === 0) {\n            localStorage.removeItem(\"spreadsheetIds\")\n        } else {\n            localStorage.setItem(\"spreadsheetIds\", ids.join(\",\"))\n        }\n    }\n    get shelfIds(): string[] {\n        let ids = localStorage.getItem(\"spreadsheetIds\")\n        return (ids === null) ? [] : ids.split(\",\")\n    }\n\n}\n","import { FriendlyError } from \"../errors\"\n\nexport class ServiceWorkerModel {\n    constructor() {\n        if (\"serviceWorker\" in navigator) {\n            window.addEventListener(\"load\", async () => {\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\n            })\n        } else {\n            throw new FriendlyError(\"serviceWorker not supported\", \"Your browser is not supported.\")\n        }\n    }\n}\n","import { ShelfModel, JournalModel } from \"../models\"\n\nexport const shelfFactory = {\n    createShelf: createShelf,\n}\n\nfunction createShelf(spreadsheetId: string, spreadsheet?: gapi.client.sheets.Spreadsheet, error?: string): ShelfModel {\n    if (\n        spreadsheet !== undefined &&\n        spreadsheet.spreadsheetId !== undefined &&\n        spreadsheet.properties !== undefined &&\n        spreadsheet.properties.title !== undefined &&\n        spreadsheet.sheets !== undefined\n    ) {\n        let shelf = new ShelfModel(spreadsheet.spreadsheetId, spreadsheet.properties.title)\n        getJournals(shelf, spreadsheet.sheets).forEach(journal => shelf.journals.set(journal.id, journal))\n        return shelf\n    }\n    return new ShelfModel(spreadsheetId, undefined, error)\n}\n\nfunction getJournals(shelf: ShelfModel, sheets: gapi.client.sheets.Sheet[]): JournalModel[] {\n    let journals: JournalModel[] = []\n    sheets.forEach(sheet => {\n        if (\n            sheet.properties !== undefined &&\n            sheet.properties.title !== undefined &&\n            sheet.properties.sheetId !== undefined\n        ) {\n            let journal = new JournalModel(\n                shelf, sheet.properties.sheetId, sheet.properties.title\n            )\n            if (journal === undefined) return\n            journals.push(journal)\n        }\n    })\n    return journals\n}\n","import { entryController } from \"../controllers\"\nimport { JournalEntryModel, ShelfModel, JournalModel, BaseEntryModel } from \"../models\"\n\nlet entryCounter = -1\n\nexport const entryFactory = {\n    createBaseEntry: createBaseEntry,\n    createJournalEntry: createJournalEntry\n}\n\nfunction createBaseEntry(content?: string) {\n    let entry = new BaseEntryModel()\n    entryController.update(entry, content || \"\")\n    return entry\n}\n\nfunction createJournalEntry(shelf: ShelfModel, journal: JournalModel, content: string) {\n    let entry = new JournalEntryModel(shelf, journal, entryCounter += 1)\n    entryController.update(entry, content)\n    return entry\n}\n","export const caretController = {\n    getCaretPosition: getCaretPosition,\n    setCaretPosition: setCaretPosition,\n}\n\nfunction node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nfunction getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nfunction setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","import { searchModel } from \"..\"\nimport { SearchType } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { entryController } from \"./entryController\"\nimport { TagModel, JournalModel, JournalEntryModel } from \"../models\"\n\nexport const searchController = {\n    reset: reset,\n    buildRefines: buildRefines,\n    filteredEntries: filteredEntries,\n    updateSearchbar: updateSearchbar,\n}\n\nfunction updateSearchbar(content: string) {\n    entryController.update(searchModel.barQuery, content)\n}\n\nfunction reset() {\n    searchModel.searchType = SearchType.NONE\n    searchModel.barQuery = entryFactory.createBaseEntry()\n    searchModel.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n}\n\nfunction buildRefines(journal: JournalModel) {\n    let simpleRefines: Map<string, TagModel> = new Map()\n    let complexRefines: Map<string, TagModel[]> = new Map()\n\n    for (let tag of journal.tags.values()) {\n        if (tag.val === null) {\n            let key = `${tag.flag}${tag.cleanKey}`\n            if (!simpleRefines.has(key)) {\n                simpleRefines.set(key, tag)\n            }\n        } else {\n            let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n            if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n            complexRefines.get(key)!.push(tag)\n        }\n    }\n\n    searchModel.simpleRefines = new Map([...simpleRefines.entries()])\n    searchModel.complexRefines = new Map([...complexRefines.entries()].sort())\n\n    cleanRefines()\n}\n\nfunction cleanRefines() {\n    // Clean stale simple tag key (refine val) selections\n    for (let [key,] of searchModel.refinesQuery.simpleKeys) {\n        if (!searchModel.simpleRefines.has(key)) {\n            searchModel.refinesQuery.simpleKeys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag key selections\n    for (let key of searchModel.refinesQuery.keys) {\n        if (!searchModel.complexRefines.has(key)) {\n            searchModel.refinesQuery.keys.delete(key)\n        }\n    }\n\n    // Clean stale complex tag val\n    for (let [key,] of searchModel.refinesQuery.vals) {\n        if (!Array.from(searchModel.complexRefines.values()).some(tags => tags.some(tag => tag.clean === key))) {\n            searchModel.refinesQuery.vals.delete(key)\n        }\n    }\n}\n\nfunction filteredEntries(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    if (searchModel.query.tokens.length === 0) {\n        searchModel.searchType = SearchType.NONE\n        filteredEntries = entries.map(({ entry }, idx) => { return { idx, entry } })\n    } else {\n        searchModel.searchType = SearchType.AND\n        filteredEntries = search(entries)\n        if (filteredEntries.length === 0) {\n            searchModel.searchType = SearchType.OR\n            filteredEntries = search(entries)\n        }\n    }\n    return filteredEntries\n}\n\nfunction search(entries: { id: number, entry: JournalEntryModel }[]): { idx: number, entry: JournalEntryModel }[] {\n    let query = searchModel.query\n    let sourceEntries = entries\n    let filteredEntries: { idx: number, entry: JournalEntryModel }[] = []\n    for (let [idx, { entry }] of sourceEntries.entries()) {\n        switch (searchModel.searchType) {\n            case SearchType.AND:\n                if (query.tokens.every(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n            case SearchType.OR:\n                if (query.tokens.some(token => match(token, entry))) {\n                    filteredEntries.push({ idx, entry })\n                }\n                break\n        }\n    }\n    return filteredEntries\n}\n\nfunction match(token: string, entry: JournalEntryModel) {\n\n    if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token.substring(1)) === undefined\n    } else if (token.startsWith(\"-\")) {\n        return !entry.savedClean.includes(token.substring(1))\n    } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n        return entry.tags.get(token) !== undefined\n    } else {\n        return entry.savedClean.includes(token)\n    }\n}\n","import m from \"mithril\"\r\nimport { googleModel } from \"..\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { syncerController, libraryController } from \"../controllers\"\r\nimport { urlController } from \"./urlController\"\r\n\r\nexport const googleController = {\r\n    signIn: signIn,\r\n    signOut: signOut,\r\n    initGapi: initGapi,\r\n}\r\n\r\nfunction signOut() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signOut()\r\n}\r\n\r\nfunction signIn() {\r\n    googleModel.gapi_!.auth2.getAuthInstance().signIn()\r\n}\r\n\r\nfunction initGapi() {\r\n    console.log(\"here\")\r\n    let gapi_ = (urlController.getTestMode(true) === TestMode.OFF) ? gapi : new MockGapi()\r\n    googleModel.gapi_ = gapi_\r\n    googleModel.gapi_.load('auth2', () => {\r\n        googleModel.gapi_!.auth2.init({\r\n            scope: googleModel.scope, client_id: googleModel.clientId\r\n        }).then(() => {\r\n            googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.listen(isSignedIn)\r\n            isSignedIn((googleModel.gapi_!.auth2.getAuthInstance().isSignedIn.get()))\r\n        })\r\n    })\r\n}\r\n\r\nasync function isSignedIn(signedIn: boolean) {\r\n    googleModel.isSignedIn = signedIn\r\n    if (googleModel.isSignedIn) {\r\n        googleModel.user = googleModel.gapi_!.auth2.getAuthInstance().currentUser.get()\r\n        syncerController.updateAuth(googleModel.token)\r\n        libraryController.loadShelves()\r\n    } else {\r\n        libraryController.removeShelves()\r\n        urlController.redirect(\"/\")\r\n    }\r\n    m.redraw()\r\n}\r\n","export * from \"./Gapi\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ErrorPayload } from \"../types\"\nimport { FriendlyError } from \"../errors\"\nimport { shelfFactory } from \"../factories\"\nimport { syncerController } from \"../controllers\"\nimport { urlController } from \"./urlController\"\nimport { journalController } from \"./journalController\"\n\nconst spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n\nexport const libraryController = {\n    addShelves: addShelves,\n    loadShelves: loadShelves,\n    removeShelves: removeShelves,\n    getSpreadsheetIdsFromUrls: getSpreadsheetIdsFromUrls,\n}\n\nfunction addShelves(urls: string) {\n    let ids = getSpreadsheetIdsFromUrls(urls)\n    ids = ids.filter(id => !libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.set(id, undefined))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n    loadShelves(false, ids)\n}\n\nfunction removeShelves(ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    ids = ids.filter(id => libraryModel.shelves.has(id))\n    ids.forEach(id => libraryModel.shelves.delete(id))\n    libraryModel.shelfIds = Array.from(libraryModel.shelves.keys())\n}\n\nfunction loadShelves(reloadLoaded?: boolean, ids?: string[]) {\n    if (ids === undefined) ids = Array.from(libraryModel.shelves.keys())\n    if (reloadLoaded) {\n        ids.forEach(id => libraryModel.shelves.set(id, undefined))\n        m.redraw()\n    }\n    ids.filter(id => !libraryModel.shelves.get(id))\n        .forEach(id => syncerController.getSpreadsheet(id)\n        .then(payload => {\n            let shelf = shelfFactory.createShelf(id, payload.spreadsheet)\n            libraryModel.shelves.set(shelf.id, shelf)\n            let journal = urlController.getActiveJournal()\n            if (journal && journal.shelf === shelf) {\n                journalController.loadEntries(journal)\n            }\n        })\n        .catch((error: ErrorPayload) => {\n            new FriendlyError(error.error.message, error.friendlyMsg)\n            let shelf = shelfFactory.createShelf(id, undefined, error.friendlyMsg)\n            libraryModel.shelves.set(id, shelf)\n        })\n        .finally(() => {\n            m.redraw()\n        })\n    )\n}\n\nfunction getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n    let ids: string[] = []\n    if (urls) {\n        Array.from(urls.matchAll(spreadsheetIdPattern)).forEach(m => ids.push(m[1]))\n    }\n    return ids\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { entryFactory } from \"../factories\"\nimport { BaseEntryModel, JournalModel } from \"../models\"\nimport { urlController, journalController, caretController, entryController } from \"../controllers\"\n\nexport function composeComponent() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefixEntry = entryFactory.createBaseEntry()\n    const composeContentEntry = entryFactory.createBaseEntry()\n    const composeSuffixEntry = entryFactory.createBaseEntry()\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#compose\", [\n            m(\n                \"#prefix\",\n                composeNodeSettings(composePrefixEntry, journal, prefixSettings),\n                m.trust(composePrefixEntry.rendered)\n            ),\n            m(\n                \"#content\",\n                composeNodeSettings(composeContentEntry, journal, entrySettings),\n                m.trust(composeContentEntry.rendered)\n            ),\n            m(\n                \"#suffix\",\n                composeNodeSettings(composeSuffixEntry, journal, suffixSettings),\n                m.trust(composeSuffixEntry.rendered)\n            ),\n        ])\n    }\n\n    function getComposedContent() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: BaseEntryModel, journal: JournalModel, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event, journal),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any, journal: JournalModel) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let content = getComposedContent()\n            entryController.update(composeContentEntry, \"\")\n            let idx = journal.entries.length\n            journalController.addEntry(journal, idx, content, true)\n        }\n    }\n\n    function composeInput(event: any, entry: BaseEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function composeUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { Caret } from \"../types\"\nimport { JournalModel, JournalEntryModel } from \"../models\"\nimport {\n    caretController, urlController, entryController, journalController, searchController\n} from \"../controllers\"\n\nexport function entriesComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        let shelf = urlController.getActiveShelf()\n        const journal = urlController.getActiveJournal()\n        if (!shelf || !journal) return null\n\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesList(journal),\n        ])\n    }\n\n    function entriesList(journal: JournalModel) {\n        return searchController.filteredEntries(journal.entries)\n            .map(({ idx, entry }) => entryVnode(entry, idx))\n    }\n\n    function entryVnode(entry: JournalEntryModel, entryIdx: number): m.Vnode {\n        return m(\".entryWrap\", { id: `entry-${entry.id}` }, [\n            entryContent(entry, entryIdx),\n            deleteEntryButton(entry, entryIdx),\n        ])\n    }\n\n    function deleteEntryButton(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: async () => journalController.deleteEntry(entry.journal, entryIdx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: JournalEntryModel, entryIdx: number) {\n        return m(\"div\", entryContentSettings(entry, entryIdx), m.trust(entry.rendered))\n    }\n\n    function onEntryKeydown(event: any) {\n        event.redraw = false\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: JournalEntryModel) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        entryController.update(entry, event.target.innerText)\n    }\n\n    function onEntryUpdate(event: any) {\n        event.redraw = false\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    async function onEntryBlur(event: any, entry: JournalEntryModel, entryIdx: number) {\n        event.redraw = false\n        entryController.save(entry, entryIdx, event.target.innerText, true)\n        journalController.buildTags(entry.journal)\n    }\n\n    function entryContentSettings(entry: JournalEntryModel, entryIdx: number) {\n        return {\n            id: `entry-${entry.id}-content`,\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: (event: any) => onEntryUpdate(event),\n            onblur: (event: any) => onEntryBlur(event, entry, entryIdx),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { libraryModel } from \"..\"\nimport { ShelfModel } from \"../models\"\nimport { libraryController } from \"../controllers\"\n\nexport function shelvesComponent() {\n\n    function view() {\n        let shelves = Array.from(libraryModel.shelves.entries())\n        return m(\"#shelvesList\", shelves.map(([id, shelf]) => shelfNode(id, shelf)))\n    }\n\n    function delShelfButton(id: string) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: () => libraryController.removeShelves([id])\n        }, \"del\")\n    }\n\n    function retryShelfLoadButton(id: string) {\n        return m(\"button\", {\n            onclick: () => libraryController.loadShelves(true, [id])\n        }, \"retry\")\n    }\n\n    function shelfNode(id: string, shelf: ShelfModel | undefined) {\n        if (shelf === undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", id)\n            ])\n        } else if (shelf.error !== undefined) {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"span\", `${id} ${shelf.error}`),\n                retryShelfLoadButton(id)\n            ])\n        } else {\n            return m(\"li\", [\n                delShelfButton(id),\n                m(\"a\", { href: `#/library/${id}` }, shelf.title)\n            ])\n        }\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { urlController } from \"../controllers\"\nimport { TagModel } from \"../models\"\n\nexport function refinesComponent() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes() {\n        if (searchModel.simpleRefines.size === 0) return\n        return m(\".tagRefineWrap\", [\n            refineKeyVnode(simpleTagsHeader, searchModel.simpleRefines.size),\n            Array.from(searchModel.simpleRefines, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(searchModel.complexRefines, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: searchModel.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: TagModel) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", {\n                    type: \"checkbox\", checked: (tag.val === null)\n                        ? searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                        : searchModel.refinesQuery.vals.has(tag.clean)\n                }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: TagModel) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            searchModel.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            searchModel.refinesQuery.keys.has(key)\n                ? searchModel.refinesQuery.keys.delete(key)\n                : searchModel.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: TagModel) {\n        if (tag.val === null) {\n            searchModel.refinesQuery.simpleKeys.has(tag.clean)\n                ? searchModel.refinesQuery.simpleKeys.delete(tag.clean)\n                : searchModel.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            searchModel.refinesQuery.vals.has(tag.clean)\n                ? searchModel.refinesQuery.vals.delete(tag.clean)\n                : searchModel.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { TestMode } from \"../types\"\nimport { urlController } from \"../controllers\"\n\nexport function testModeComponent() {\n\n    function view() {\n        let mode = urlController.getTestMode()\n        if (!googleModel.isSignedIn || mode === TestMode.OFF || mode === TestMode.DEMO) return\n        return m(\"#testMode\", m(\"span\", mode))\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { urlController } from \"../controllers\"\n\nexport function journalsComponent() {\n\n    function view() {\n        return m(\"#journals\", journalList())\n    }\n\n    function journalList() {\n        let shelf = urlController.getActiveShelf()\n        if (shelf === undefined) {\n            urlController.redirect(\"/library\")\n            return\n        }\n        return Array.from(shelf.journals.values()).map(journal => {\n            let link = `#/library/${journal.shelf.id}/${journal.id}`\n            return m(\"li\", m(\"a\", { href: link }, journal.title))\n        })\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\nimport { SyncerState } from \"../types\"\nimport { syncerController } from \"../controllers\"\nimport { syncerModel, googleModel, libraryModel } from \"..\"\n\nexport function syncStateComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn || libraryModel.shelves.size === 0) return\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n\n        switch (syncerModel.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive...\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused.\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"Cloud synced.\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive...\"\n                break\n            case SyncerState.INITIALIZING:\n                txt = \"Initializing...\"\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncerModel.state)\n    }\n\n    function unpauseSync() {\n        if (syncerModel.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncerController.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncerModel.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { searchModel } from \"..\"\nimport { Caret } from \"../types\"\nimport { caretController, textController, searchController, urlController } from \"../controllers\"\n\n\nexport function searchbarComponent() {\n    const caret: Caret = { pos: null, el: null }\n\n    function view() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded === false) return\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(searchModel.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\")\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onSearchInput(event),\n            onupdate: () => onSearchUpdate(),\n            onkeydown: (event: any) => onSearchKeydown(event)\n        }\n    }\n\n    function onSearchInput(event: any) {\n        let pos = caretController.getCaretPosition(event.target)\n        caret.pos = (pos) ? pos[1] : null\n        caret.el = event.target\n        searchController.updateSearchbar(textController.escape(event.target.innerText))\n    }\n\n    function onSearchUpdate() {\n        caretController.setCaretPosition(caret.el, caret.pos)\n        caret.pos = null\n        caret.el = null\n    }\n\n    function onSearchKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => searchController.updateSearchbar(\"\")\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { libraryController } from \"../controllers\"\r\nimport { libraryModel } from \"..\"\r\n\r\nexport function addShelvesComponent() {\r\n\r\n    let newShelfUrls = \"\"\r\n    let addingShelves = false\r\n\r\n    function view() {\r\n        return m(\"#addShelves\", [\r\n            addShelvesMessage(),\r\n            addShelvesButton(),\r\n            addShelvesTextbox(),\r\n        ])\r\n    }\r\n\r\n    function addShelvesMessage() {\r\n        if (libraryModel.shelves.size !== 0) return\r\n        return m(\"span\", \"Add Google Spreadsheet URLs here to get started. \")\r\n    }\r\n\r\n    function addShelvesButton() {\r\n        return m(\"button\", {\r\n            id: \"addShelvesButton\",\r\n            onclick: async () => {\r\n                if (addingShelves) libraryController.addShelves(newShelfUrls)\r\n                newShelfUrls = \"\"\r\n                addingShelves = !addingShelves\r\n            }\r\n        }, (addingShelves) ? \" ✓ \" : \"+/-\")\r\n    }\r\n\r\n    function addShelvesTextbox() {\r\n        if (!addingShelves) return null\r\n        return m(\"textarea\", {\r\n            id: \"addShelvesText\",\r\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n            oninput: (event: any) => newShelfUrls = event.target.value\r\n        })\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n    }\r\n\r\n}\r\n","import m from \"mithril\"\nimport { googleModel } from \"..\"\nimport { urlController } from \"../controllers\"\n\nexport function breadcrumbComponent() {\n\n    function view() {\n        if (!googleModel.isSignedIn) return\n        return m(\"#breadcrumb\", urlController.getBreadcrumbTrail())\n    }\n\n    return {\n        view: view,\n    }\n\n}\n","import m from \"mithril\"\r\nimport { googleModel } from \"..\"\r\nimport { urlController } from \"../controllers\"\r\nimport { googleComponent } from \"../components\"\r\n\r\nexport function signinView() {\r\n\r\n    function view() {\r\n        return m(\"#auth\", [\r\n            m(googleComponent),\r\n        ])\r\n    }\r\n\r\n    function onupdate() {\r\n        if (googleModel.isSignedIn) {\r\n            urlController.redirect(\"/library\")\r\n        }\r\n    }\r\n\r\n    return {\r\n        view: view,\r\n        onupdate: onupdate,\r\n    }\r\n\r\n}\r\n","import m from \"mithril\"\nimport { \n    googleComponent, shelvesComponent, syncStateComponent, addShelvesComponent,\n    testModeComponent,\n} from \"../components\"\n\nexport function libraryView() {\n\n    function view() {\n        return m(\"#library\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(addShelvesComponent),\n            m(shelvesComponent),\n        ])\n    }\n\n    return {\n        view: view\n    }\n\n}\n","import m from \"mithril\"\nimport { urlController, journalController } from \"../controllers\"\nimport {\n    googleComponent, breadcrumbComponent, entriesComponent, syncStateComponent,\n    searchbarComponent, refinesComponent, composeComponent, testModeComponent,\n} from \"../components\"\n\nexport function journalView() {\n\n    function oninit() {\n        const journal = urlController.getActiveJournal()\n        if (journal === undefined || journal.loaded) return\n        journalController.loadEntries(journal)\n    }\n\n    function view() {\n        return m(\"#shelf\", [\n            m(googleComponent),\n            m(testModeComponent),\n            m(syncStateComponent),\n            m(breadcrumbComponent),\n            m(searchbarComponent),\n            m(refinesComponent),\n            m(\"#entriesWrap\", [\n                m(entriesComponent),\n                m(composeComponent),\n            ])\n        ])\n    }\n\n    return {\n        view: view,\n        oninit: oninit,\n    }\n\n}\n"],"sourceRoot":""}