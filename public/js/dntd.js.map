{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///external \"m\"","webpack:///./src/helpers/index.ts","webpack:///./src/types/index.ts","webpack:///./src/classes/index.ts","webpack:///./src/components/index.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncerTasks.ts","webpack:///./src/types/syncerResponses.ts","webpack:///./src/mocks/index.ts","webpack:///./src/mocks/Gapi.ts","webpack:///./src/mocks/syncTasks.ts","webpack:///./src/classes/Tag.ts","webpack:///./src/components/app.ts","webpack:///./src/helpers/misc.ts","webpack:///./src/helpers/errors.ts","webpack:///./src/helpers/textOps.ts","webpack:///./src/helpers/caretOps.ts","webpack:///./src/helpers/patterns.ts","webpack:///./src/helpers/localStorageOps.ts","webpack:///./src/components/links.ts","webpack:///./src/components/about.ts","webpack:///./src/components/errors.ts","webpack:///./src/components/spinner.ts","webpack:///./src/components/compose.ts","webpack:///./src/classes/Entry.ts","webpack:///./src/classes/Sheet.ts","webpack:///./src/classes/Syncer.ts","webpack:///./src/classes/Search.ts","webpack:///./src/classes/Journal.ts","webpack:///./src/classes/Spreadsheet.ts","webpack:///./src/classes/ServiceWorker.ts","webpack:///./src/components/entries.ts","webpack:///./src/components/toggles.ts","webpack:///./src/components/searchbar.ts","webpack:///./src/components/googleAPI.ts","webpack:///./src/components/refinesPane.ts","webpack:///./src/classes/Refines.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","serviceWorker","ServiceWorker","syncer","Syncer","search","Search","refines","Refines","journal","Journal","root","document","getElementById","route","app","about","Tag","Entry","Sheet","Spreadsheet","SearchType","TestMode","SyncerTaskType","SyncerResponseType","SyncerState","auth2","MockAuth2","_api","_callback","MockGoogleAuth","_params","MockCurrentUser","MockGoogleUser","expires_in","access_token","isSignedIn","MockIsSignedIn","currentUser","listen","testMode","extendSheetLength","_token","_task","this","FAIL_GET_SPREADSHEET_SHEETS","Error","FAIL_GET_RANGE","RETURN_ROWS","FAIL_UPDATE_RANGE","FAIL_DELETE_ROW","raw","flag","separator","val","frq","undefined","clean","cleanTagString","cleanKey","cleanVal","hideKeys","replace","renderVal","renderKey","str","escapeHtml","endsWith","substring","length","toLowerCase","view","getHash","links","spinner","googleAPI","errors","searchbar","toggles","refinesPane","class","entries","compose","URL","window","location","href","hash","url","DEMO","test","searchParams","values","includes","OFF","FriendlyError","errorMsg","friendlyMsg","super","push","console","warn","redraw","unsafe","elem","sel","getSelection","cum_length","anchorNode","innerText","extentNode","nodes_to_find","contains","found","node_walk","node","func","result","firstChild","nextSibling","textContent","anchorOffset","extentOffset","setCaretPosition","el","pos","childNodes","nodeType","range","createRange","setStart","collapse","removeAllRanges","addRange","tagPattern","spreadsheetIdPattern","id","localStorage","setItem","getItem","urls","hide","spreadsheetId","sheetId","parseInt","toString","removeItem","linkList","onclick","updateTestMode","separatedLinks","idx","link","drawLinks","errorDismissButtonSettings","splice","map","error","syncStateText","txt","class_","stateColorClass","state","DOWNLOADING","PAUSED","SYNCED","UPLOADING","syncStateIcon","unpauseSync","unpause","caret","composePrefix","composeContent","composeSuffix","prefixSettings","entrySettings","suffixSettings","composeNodeSettings","entry","extraSettings","baseSettings","contenteditable","onkeydown","event","keyCode","shiftKey","preventDefault","join","newEntry","spreadsheet","sheet","saveEntry","composeKeydown","oninput","getCaretPosition","target","composeInput","onupdate","assign","trust","rendered","saved","tags","Map","hovered","focused","tokens","savedClean","tagMatches","readableRendered","rawText","savedText","getTags","safe","getTokens","getTagMatches","render","text","tag","match","chars","split","index","has","set","matchesIter","matchAll","sort","a","b","filter","token","trim","title","sheets","getRows","rows","row","switch","build","Array","from","reverse","user","worker","Worker","getTestMode","onmessage","msg","onMessage","pushSyncerTask","type","TEST_MODE_UPDATE","AUTH_UPDATE","GET_SHEETS","sheetTitle","GET_ROWS","DELETE_ROW","content","UPDATE_ROW","UNPAUSE","task","postMessage","response","data","SYNCER_STATE","SHEETS","spreadsheets","load","ROWS","ERROR","message","REAUTH","reloadAuthResponse","then","auth","updateAuth","catch","err","barQuery","searchType","NONE","refinesQuery","keys","Set","vals","simpleKeys","query","AND","OR","sourceEntries","every","some","startsWith","entryInFocus","hideTagRefines","hideEntriesKeys","showAddSpreadsheetTextbox","spreadsheetUrls","getStoredHideTagRefines","getStoredHideEntriesKeys","incomingSpreadsheetIds","getSpreadsheetIdsFromUrls","loadNewSpreadsheets","removeOldSpreadsheets","getStoredSpreadsheetId","getStoredSpreadsheetSheetId","reset","setStoredSpreadsheetId","setStoredSpreadsheetSheetId","spreadsheetIds","spreadsheet_id","delStoredSpreadsheetSheetId","delete","ids","matches","deleteRow","updateRow","getSheets","properties","navigator","addEventListener","register","entriesVnodes","searchEntries","entryVnode","entryContent","deleteEntryButton","deleteEntry","blur","onEntryKeydown","onEntryInput","onblur","onEntryBlur","onmouseover","onEntryMouseover","onmouseout","onEntryMouseout","onfocus","onEntryFocus","entryContentSettings","for","checked","disabled","setStoredHideEntriesKeys","setStoredHideTagRefines","placeholder","onSearchInput","onSearchKeydown","scope","gapi_","initClient","init","client_id","getAuthInstance","updateSigninStatus","signedIn","getAuthResponse","getStoredSpreadsheetUrls","initJournal","unload","addSpreadsheetButton","setStoredSpreadsheetUrls","onchange","selected","substr","isActive","signOut","signIn","async","defer","src","onload","gapi","MockGapi","expanded","refineKeyVnode","count","metaKey","ctrlKey","add","refineTagKeyOnClick","tagRefineKeySettings","refineValVnode","tagRefineValSettings","tagClass","hideClass","refineTagValOnClick","simple","size","complex","simpleRefines","complexRefines","cleanRefines"],"mappings":"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","file":"dntd.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import m from \"mithril\"\nimport { app, about } from \"./components\"\nimport { Refines } from \"./classes/Refines\"\nimport { Journal, Search, Syncer, ServiceWorker } from \"./classes\"\n\nexport const serviceWorker = new ServiceWorker()\nexport const syncer = new Syncer()\nexport const search = new Search()\nexport const refines = new Refines()\nexport const journal = new Journal()\n\nlet root = document.getElementById(\"root\")\n\nif (root !== null) {\n    m.route(root, \"/\", {\n        \"/\": app,\n        \"/demo\" : app,\n        \"/about\": about,\n    })\n}\n","module.exports = m;","export * from \"./misc\"\nexport * from \"./errors\"\nexport * from \"./textOps\"\nexport * from \"./caretOps\"\nexport * from \"./patterns\"\nexport * from \"./localStorageOps\"\n","export * from \"./caret\"\nexport * from \"./errors\"\nexport * from \"./search\"\nexport * from \"./testing\"\nexport * from \"./syncerTasks\"\nexport * from \"./syncerResponses\"\n","export { Tag } from \"./Tag\"\nexport { Entry } from \"./Entry\"\nexport { Sheet } from \"./Sheet\"\nexport { Syncer } from \"./Syncer\"\nexport { Search } from \"./Search\"\nexport { Journal } from \"./Journal\"\nexport { Spreadsheet } from \"./Spreadsheet\"\nexport { ServiceWorker } from \"./ServiceWorker\"\n","export * from \"./app\"\nexport * from \"./links\"\nexport * from \"./about\"\nexport * from \"./errors\"\nexport * from \"./spinner\"\nexport * from \"./compose\"\nexport * from \"./entries\"\nexport * from \"./toggles\"\nexport * from \"./searchbar\"\nexport * from \"./googleAPI\"\nexport * from \"./refinesPane\"\n","export enum SearchType {\n    NONE,\n    AND,\n    OR,\n}\n","export enum TestMode {\n    OFF = \"0\",\n    WORKING = \"1\",\n    FAIL_GET_SPREADSHEET_SHEETS = \"2\",\n    FAIL_GET_RANGE = \"3\",\n    FAIL_UPDATE_RANGE = \"4\",\n    FAIL_DELETE_ROW = \"5\",\n    RETURN_ROWS = \"6\",\n    DEMO = \"7\"\n}\n","import { TestMode } from \"./testing\"\n\nexport type SyncerTask = (\n    AuthUpdateTask | DeleteRowTask | UpdateRowTask | GetRowsTask |\n    GetSheetsTask | TestModeUpdateTask | UnpauseTask\n)\n\nexport enum SyncerTaskType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    GET_SHEETS,\n    TEST_MODE_UPDATE,\n    UNPAUSE\n}\n\nexport interface GetSheetsTask {\n    type: SyncerTaskType.GET_SHEETS\n    spreadsheetId: string\n}\n\nexport interface TestModeUpdateTask {\n    type: SyncerTaskType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdateTask {\n    type: SyncerTaskType.AUTH_UPDATE\n    token: string\n}\n\nexport interface DeleteRowTask {\n    type: SyncerTaskType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowTask {\n    type: SyncerTaskType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetRowsTask {\n    type: SyncerTaskType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n}\n\nexport interface UnpauseTask {\n    type: SyncerTaskType.UNPAUSE\n}\n","import { SyncerError } from \"../workers/sync\"\n\nexport type SyncerResponse = (\n    RowsResponse | SheetsResponse | QueueStateResponse | ErrorResponse | ReauthResponse\n)\n\nexport enum SyncerResponseType {\n    ROWS,\n    SHEETS,\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n}\n\nexport interface RowsResponse {\n    type: SyncerResponseType.ROWS\n    spreadsheetId: string\n    sheetId: number\n    rows: string[]\n}\n\nexport interface SheetsResponse {\n    type: SyncerResponseType.SHEETS\n    spreadsheetId: string\n    sheets: gapi.client.sheets.Sheet[]\n}\n\nexport interface QueueStateResponse {\n    type: SyncerResponseType.SYNCER_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorResponse {\n    type: SyncerResponseType.ERROR\n    error: SyncerError | Error\n    friendlyMsg: string\n}\n\nexport interface ReauthResponse {\n    type: SyncerResponseType.REAUTH\n}\n","export * from \"./Gapi\"\nexport * from \"./syncTasks\"\n","export class MockGapi {\n    public auth2 = new MockAuth2()\n    public load(_api: string, _callback: () => void) {\n        _callback()\n    }\n}\n\nclass MockAuth2 {\n    public getAuthInstance() {\n        return new MockGoogleAuth()\n    }\n    public async init(_params: any) { }\n}\n\nclass MockCurrentUser {\n    public get() { return new MockGoogleUser() }\n}\n\nexport class MockGoogleUser {\n    public getAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n    public async reloadAuthResponse() {\n        return {\n            expires_in: 9999,\n            access_token: \"faketoken\"\n        }\n    }\n}\n\nclass MockGoogleAuth {\n    public isSignedIn = new MockIsSignedIn()\n    public signOut() { }\n    public signIn() { }\n    public currentUser = new MockCurrentUser()\n}\n\nclass MockIsSignedIn {\n    public listen = (_callback: any) => { }\n    public get = () => { return true }\n}\n","import {\n    GetRowsTask, UpdateRowTask, DeleteRowTask, GetSheetsTask, TestMode\n} from \"../types\"\n\nexport class SyncerTasksMock {\n\n    public extendSheetLength = 100\n\n    constructor(private testMode: TestMode) { }\n\n    public async getSheets(_token: string, _task: GetSheetsTask) {\n        if (this.testMode === TestMode.FAIL_GET_SPREADSHEET_SHEETS) {\n            throw new Error(\"mock fail\")\n        }\n        return [{\n            \"properties\": {\n                \"sheetId\": 0,\n                \"title\": \"Sheet1\",\n                \"index\": 0,\n                \"sheetType\": \"GRID\",\n                \"gridProperties\": {\n                    \"rowCount\": 100,\n                    \"columnCount\": 26\n                }\n            }\n        },\n        {\n            \"properties\": {\n                \"sheetId\": 1,\n                \"title\": \"Sheet2\",\n                \"index\": 0,\n                \"sheetType\": \"GRID\",\n                \"gridProperties\": {\n                    \"rowCount\": 100,\n                    \"columnCount\": 26\n                }\n            }\n        }]\n    }\n\n    public async getRows(_token: string, _task: GetRowsTask) {\n        if (this.testMode === TestMode.FAIL_GET_RANGE) {\n            throw new Error(\"mock fail\")\n        } else if (this.testMode === TestMode.RETURN_ROWS) {\n            return [\"aaa\", \"bbb\", \"ccc\", \"@tag\", \"@key:value\"]\n        }\n        return []\n    }\n\n    public async updateRow(_token: string, _task: UpdateRowTask) {\n        if (this.testMode === TestMode.FAIL_UPDATE_RANGE) {\n            throw new Error(\"mock fail\")\n        }\n    }\n\n    public async deleteRow(_token: string, _task: DeleteRowTask) {\n        if (this.testMode === TestMode.FAIL_DELETE_ROW) {\n            throw new Error(\"mock fail\")\n        }\n    }\n\n}\n","import { escapeHtml } from \"../helpers\"\n\nexport class Tag {\n    public frq: number\n    public raw: string\n    public key: string\n    public flag: string\n    public clean: string\n    public cleanKey: string\n    public val: string | null\n    public cleanVal: string | null\n    public separator: string | null\n\n    constructor(raw: string, flag: string, key: string, separator: string | undefined | null, val: string | undefined | null) {\n        this.frq = 1\n        this.raw = raw\n        this.flag = flag\n        this.key = key\n        this.separator = (separator !== undefined) ? separator : null\n        this.val = (val !== undefined) ? val : null\n        this.clean = this.cleanTagString(this.raw)\n        this.cleanKey = this.cleanTagString(this.key)\n        this.cleanVal = (this.val !== null) ? this.cleanTagString(this.val) : null\n    }\n\n    public renderKey(): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + ((this.separator) ? this.separator : \"\")\n            + \"')\\\" class=\\\"\"\n            + ((this.separator) ? \"tagKey\" : (this.val === null) ? \"simpleTag\" : \"roundTagVal\")\n            + \"\\\">\"\n            + this.flag\n            + this.key\n            + \"</span>\"\n    }\n\n    public renderVal(hideKeys?: boolean): string {\n        return \"<span onclick=\\\"tagOnClick(event, '\"\n            + this.flag\n            + this.cleanKey\n            + this.separator\n            + this.cleanVal?.replace(/'/, \"\\\\'\")\n            + \"')\\\" class=\\\"\"\n            + ((hideKeys) ? \"roundTagVal\" : \"tagVal\")\n            + \"\\\">\"\n            + ((hideKeys) ? \"\" : this.separator)\n            + (this.val || \"\")\n            + \"</span>\"\n    }\n\n    public render(hideKeys?: boolean): string {\n        if (this.separator) {\n            return (hideKeys) ? this.renderVal(hideKeys) : this.renderKey() + this.renderVal(hideKeys)\n        } else {\n            return this.renderKey()\n        }\n    }\n\n    private cleanTagString(str: string) {\n        str = escapeHtml(str)\n        str = (str.endsWith(\"'s\")) ? str.substring(0, str.length - 2) : str\n        str = str.toLowerCase()\n        return str\n    }\n}\n","import m from \"mithril\"\nimport { journal } from \"..\"\nimport {\n    googleAPI, compose, entries, searchbar, toggles, spinner, refinesPane, errors, links\n} from \".\"\nimport { getHash } from \"../helpers\"\n\nexport function app() {\n\n    function view() {\n        return [\n            (getHash() === \"#!\") ? null : m(links),\n            m(spinner),\n            m(googleAPI),\n            m(\"#errorsWrap\", m(errors)),\n            (journal.isActive)\n                ? [\n                    m(\"#searchWrap\", [\n                        m(searchbar),\n                        m(toggles)\n                    ]),\n                    m(refinesPane),\n                    m(\"#entriesWrap\", entriesWrappSettings(), [\n                        m(entries),\n                        m(compose),\n                    ]),\n                ]\n                : [],\n        ]\n    }\n\n    function entriesWrappSettings() {\n        return { class: (journal.hideTagRefines) ? \"fullWidth\" : \"\" }\n    }\n\n    return { view: view }\n}","import { TestMode } from \"../types\"\n\nexport function getHash(): string {\n    let url = new URL(window.location.href)\n    return url.hash\n}\n\nexport function getTestMode(): TestMode {\n    let url = new URL(window.location.href)\n    if (url.hash === \"#!demo\") {\n        return TestMode.DEMO\n    }\n    let test = url.searchParams.get(\"test\")\n    return (test !== null && instanceOfTestMode(test)) ? test : TestMode.OFF\n\n}\n\nfunction instanceOfTestMode(str: string): str is TestMode {\n    return ((<any>Object).values(TestMode).includes(str))\n}\n","import m from \"mithril\"\nimport { journal } from \"..\"\n\nexport class FriendlyError extends Error {\n    constructor(errorMsg: string, public friendlyMsg: string) {\n        super(errorMsg)\n        journal.errors.push(friendlyMsg)\n        console.warn(errorMsg)\n        m.redraw()\n    }\n}\n","export function escapeHtml(unsafe: string): string {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n","function node_walk(node: any, func: any): void {\n    var result = func(node)\n    for (node = node.firstChild; result !== false && node; node = node.nextSibling)\n        result = node_walk(node, func)\n    return\n}\n\nexport function getCaretPosition(elem: any) {\n    var sel: any = window.getSelection()\n    var cum_length = [0, 0]\n\n    if (sel.anchorNode == elem) {\n        cum_length = [sel.anchorNode.innerText.length, sel.extentNode.innerText.length]\n    } else {\n        var nodes_to_find = [sel.anchorNode, sel.extentNode]\n        if (!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode)) {\n            return undefined\n        } else {\n            var found = [0, 0]\n            var i\n            node_walk(elem, function (node: any): void {\n                for (i = 0; i < 2; i++) {\n                    if (node == nodes_to_find[i]) {\n                        found[i] = 1\n                        if (found[i == 0 ? 1 : 0]) {\n                            return\n                        }\n                    }\n                }\n                if (node.textContent && !node.firstChild) {\n                    for (i = 0; i < 2; i++) {\n                        if (!found[i]) {\n                            cum_length[i] += node.textContent.length\n                        }\n                    }\n                }\n            })\n            cum_length[0] += sel.anchorOffset\n            cum_length[1] += sel.extentOffset\n        }\n    }\n    if (cum_length[0] <= cum_length[1]) {\n        return cum_length\n    }\n    return [cum_length[1], cum_length[0]]\n}\n\nexport function setCaretPosition(el: any, pos: any): any {\n    if (el !== null && pos !== null) {\n        for (var node of el.childNodes) {\n            if (node.nodeType == 3) {\n                if (node.length >= pos) {\n                    let range = document.createRange()\n                    let sel: any = window.getSelection()\n                    range.setStart(node, pos)\n                    range.collapse(true)\n                    sel.removeAllRanges()\n                    sel.addRange(range)\n                    return -1\n                } else {\n                    pos -= node.length\n                }\n            } else {\n                pos = setCaretPosition(node, pos)\n                if (pos == -1) {\n                    return -1\n                }\n            }\n        }\n        return pos\n    }\n}\n","export const tagPattern = /(\\@)([\\w-']+)+(:)?([\\w-'\\*]+)?/g\nexport const spreadsheetIdPattern = /\\/spreadsheets\\/d\\/([a-zA-Z0-9-_]+)/g\n","export function setStoredSpreadsheetId(id: string) {\n    localStorage.setItem(\"spreadsheetId\", id)\n}\nexport function getStoredSpreadsheetId(): string | undefined {\n    return localStorage.getItem(\"spreadsheetId\") || undefined\n}\n\nexport function setStoredSpreadsheetUrls(urls: string) {\n    localStorage.setItem(\"spreadsheetUrls\", urls)\n}\nexport function getStoredSpreadsheetUrls(): string | undefined {\n    return localStorage.getItem(\"spreadsheetUrls\") || undefined\n}\n\nexport function setStoredHideEntriesKeys(hide: boolean) {\n    localStorage.setItem(\"hideEntriesKeys\", (hide) ? \"1\": \"0\")\n}\nexport function getStoredHideEntriesKeys(): boolean {\n    return localStorage.getItem(\"hideEntriesKeys\") === \"1\"\n}\n\nexport function setStoredHideTagRefines(hide: boolean) {\n    localStorage.setItem(\"hideTagRefines\", (hide) ? \"1\": \"0\")\n}\nexport function getStoredHideTagRefines(): boolean {\n    return localStorage.getItem(\"hideTagRefines\") === \"1\"\n}\n\nexport function getStoredSpreadsheetSheetId(spreadsheetId: string | undefined): number | undefined {\n    let sheetId = localStorage.getItem(`${spreadsheetId}-sheetId`) || undefined\n    return (sheetId !== undefined) ? parseInt(sheetId) : undefined\n}\nexport function setStoredSpreadsheetSheetId(spreadsheetId: string, sheetId: number) {\n    localStorage.setItem(`${spreadsheetId}-sheetId`, sheetId.toString())\n}\nexport function delStoredSpreadsheetSheetId(spreadsheetId: string | undefined) {\n    localStorage.removeItem(`${spreadsheetId}-sheetId`)\n}\n","import m from \"mithril\"\nimport { syncer } from \"..\"\nimport { TestMode } from \"../types\"\nimport { getHash } from \"../helpers\"\n\nexport function links() {\n\n    function view() {\n        let hash = getHash()\n        let linkList: m.Vnode[] = []\n        if (hash !== \"#!about\") linkList.push(m(\"a\", { href: \"/#!about\" }, \"About\"))\n        if (hash !== \"#!demo\") linkList.push(m(\"a\", { href: \"/#!demo\", onclick: () => syncer.updateTestMode(TestMode.DEMO) }, \"Demo\"))\n        if (hash !== \"#!\" && hash !== \"\") linkList.push(m(\"a\", { href: \"/#!\", onclick: () => syncer.updateTestMode(TestMode.OFF) }, \"Start\"))\n        return m(\"#navLinks\", drawLinks(linkList))\n    }\n\n    function drawLinks(linkList: m.Vnode[]) {\n        let separatedLinks = []\n        for (let [idx, link] of linkList.entries()) {\n            separatedLinks.push(link)\n            if (idx !== linkList.length - 1) separatedLinks.push(\" | \")\n        }\n        return separatedLinks\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { links } from \".\"\n\nexport function about() {\n\n    function view() {\n        return m(\"#callToAction\", [\n            m(links),\n            m(\"#about\", \"About page will be filled when the visual overhaul is complete.\")\n        ])\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { journal } from \"..\"\n\nexport function errors() {\n\n    function view() {\n        if (journal.errors.length === 0) { return [] }\n        return m(\"#errors\", journal.errors.map((error, idx) => [\n            m(\".error\", [\n                m(\"span\", error),\n                m(\"button\", errorDismissButtonSettings(idx), \"dismiss\"),\n            ])\n        ]))\n    }\n\n    function errorDismissButtonSettings(idx: number) {\n        return {\n            class: \"dismissErrorButton\",\n            onclick: () => journal.errors.splice(idx, 1),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { syncer } from \"..\"\nimport { SyncerState } from \"../types\"\n\nexport function spinner() {\n\n    function view() {\n        return m(\"#status\", m(\"span\", syncState()))\n    }\n\n    function syncState() {\n        return m(\"span\", [\n            syncStateIcon(),\n            syncStateText(),\n            unpauseSync()\n        ])\n    }\n\n    function syncStateText() {\n        let txt = \"\"\n        let class_ = `syncState ${stateColorClass()}`\n        switch (syncer.state) {\n            case SyncerState.DOWNLOADING:\n                txt = \"Downloading journal data from drive...\"\n                break\n            case SyncerState.PAUSED:\n                txt = \"Warning! - Syncing is paused.\"\n                break\n            case SyncerState.SYNCED:\n                txt = \"All changes saved.\"\n                break\n            case SyncerState.UPLOADING:\n                txt = \"Uploading changes to drive...\"\n                break\n        }\n        return m(\"span\", { id: \"syncStateText\", class: class_ }, txt)\n    }\n\n    function syncStateIcon() {\n        let class_ = `material-icons material-icons-outlined syncState ${stateColorClass()}`\n        return m(\"i\", { id: \"syncStateIcon\", class: class_ }, syncer.state)\n    }\n\n    function unpauseSync() {\n        if (syncer.state === SyncerState.PAUSED) {\n            return m(\"button\", {\n                id: \"unpauseSync\",\n                class: \"syncState\",\n                onclick: () => syncer.unpause()\n            }, \"Unpause Syncing\")\n        }\n        return\n    }\n\n    function stateColorClass() {\n        switch (syncer.state) {\n            case SyncerState.PAUSED:\n                return \"error\"\n            case SyncerState.SYNCED:\n                return \"okay\"\n            default:\n                return \"warn\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\nimport { journal } from \"..\"\nimport { Caret } from \"../types\"\nimport { Entry } from \"../classes\"\nimport { getCaretPosition, setCaretPosition } from \"../helpers\"\n\nexport function compose() {\n    var caret: Caret = { el: null, pos: null }\n\n    const composePrefix = new Entry(\"\")\n    const composeContent = new Entry(\"\")\n    const composeSuffix = new Entry(\"\")\n\n    const prefixSettings = { \"placeholder\": \"Static Entry Prefix\" }\n    const entrySettings = { \"placeholder\": \"Entry Content\" }\n    const suffixSettings = { \"placeholder\": \"Static Entry Suffix\" }\n\n    function view() {\n        return m(\"#compose\", [\n            m(\"#prefix\", composeNodeSettings(composePrefix, prefixSettings), m.trust(composePrefix.rendered)),\n            m(\"#content\", composeNodeSettings(composeContent, entrySettings), m.trust(composeContent.rendered)),\n            m(\"#suffix\", composeNodeSettings(composeSuffix, suffixSettings), m.trust(composeSuffix.rendered)),\n        ])\n    }\n\n    function getComposedEntry() {\n        let els = [\n            document.getElementById(\"prefix\"),\n            document.getElementById(\"content\"),\n            document.getElementById(\"suffix\"),\n        ]\n        return els.map(el => el!.innerText).join(\"\")\n    }\n\n    function composeNodeSettings(entry: Entry, extraSettings: object) {\n        let baseSettings = {\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: async (event: any) => await composeKeydown(event),\n            oninput: (event: any) => composeInput(event, entry),\n            onupdate: () => composeUpdate(),\n        }\n        return Object.assign(baseSettings, extraSettings)\n    }\n\n    async function composeKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            let raw = getComposedEntry()\n            composeContent.raw = \"\"\n            let newEntry = new Entry(raw, \"\")\n            let idx = journal.spreadsheet!.sheet!.entries.length\n            journal.spreadsheet!.sheet!.entries.push(newEntry)\n            m.redraw()\n            await journal.saveEntry(idx)\n        }\n    }\n\n    function composeInput(event: any, entry: Entry) {\n        let pos = getCaretPosition(event.target)\n        caret = (pos)\n            ? { pos: pos[1], el: event.target }\n            : { pos: null, el: null }\n        entry.raw = event.target.innerText\n    }\n\n    function composeUpdate() {\n        setCaretPosition(caret.el, caret.pos)\n        caret = { el: null, pos: null }\n    }\n\n    return { view: view }\n}\n","import { Tag } from \"./Tag\"\nimport { tagPattern, escapeHtml } from \"../helpers\"\n\nexport type TagsMap = Map<string, Tag>\n\ninterface TagMatch {\n    tag: Tag,\n    match: RegExpMatchArray\n}\n\nexport interface IndexedEntry {\n    idx: number,\n    entry: Entry,\n}\n\nexport class Entry {\n    public tags: TagsMap = new Map()\n    public hovered: boolean = false\n    public focused: boolean = false\n    public clean: string = \"\"\n    public tokens: string[] = []\n    public rendered: string = \"\"\n    public savedClean: string = \"\"\n    private tagMatches: TagMatch[] = []\n    public readableRendered: string = \"\"\n    private rawText: string = \"\"\n    private savedText: string = \"\"\n\n    constructor(raw?: string | undefined, saved?: string | undefined) {\n        this.raw = (raw) ? raw : \"\"\n        this.saved = (saved !== undefined) ? saved : this.raw\n    }\n\n    public get saved(): string {\n        return this.savedText\n    }\n    public set saved(str: string) {\n        this.savedText = str\n        this.savedClean = str.toLowerCase()\n        this.tags = this.getTags(this.tagMatches)\n    }\n\n    public get raw(): string {\n        return this.rawText\n    }\n    public set raw(raw: string) {\n        this.rawText = raw\n        this.clean = this.raw.toLowerCase()\n        let safe = escapeHtml(this.rawText)\n        this.tokens = this.getTokens(this.clean)\n        this.tagMatches = this.getTagMatches(safe)\n        this.rendered = this.render(safe, this.tagMatches)\n        this.readableRendered = this.render(safe, this.tagMatches, true)\n    }\n\n    private render(text: string, tagMatches: TagMatch[], hideKeys?: boolean): string {\n        for (let { tag, match } of tagMatches) {\n            let chars = text.split(\"\")\n            chars.splice(match.index!, match[0].length, tag.render(hideKeys))\n            text = chars.join(\"\")\n        }\n        return text\n    }\n\n    private getTags(tagMatches: TagMatch[]): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let { tag } of tagMatches) {\n            if (tags.has(tag.clean)) {\n                tags.get(tag.clean)!.frq += 1\n            } else {\n                tags.set(tag.clean, tag)\n            }\n        }\n        return tags\n    }\n\n    private getTagMatches(text: string): TagMatch[] {\n        let tagMatches = []\n        let matchesIter = text.matchAll(tagPattern)\n        for (let match of matchesIter) {\n            let tag = new Tag(match[0], match[1], match[2], match[3], match[4])\n            tagMatches.push({ tag: tag, match: match })\n        }\n        tagMatches.sort((a, b) => (a.match.index! > b.match.index!) ? -1 : 1)\n        return tagMatches\n    }\n\n    private getTokens(text: string): string[] {\n        let tokens = text.split(\" \")\n        return tokens.filter(token => {\n            return token !== undefined && token.trim() !== \"\" && token !== \"-\"\n        })\n    }\n\n}\n","import { Entry, Tag } from \".\"\nimport { TagsMap } from \"../classes/Entry\"\nimport { Spreadsheet } from \"./Spreadsheet\"\nimport { syncer, journal, refines } from \"..\"\n\nexport class Sheet {\n    public id: number\n    public title: string\n    public spreadsheet: Spreadsheet\n    public entries: Entry[] = []\n\n    constructor(id: number, title: string, spreadsheet: Spreadsheet) {\n        this.id = id\n        this.title = title\n        this.spreadsheet = spreadsheet\n        spreadsheet.sheets.set(this.id, this)\n        syncer.getRows(this.spreadsheet.id, this.id, this.title)\n    }\n\n    public async load(rows: string[]) {\n        rows.map(row => this.entries.push(new Entry(row)))\n        journal.switch()\n        if (\n            journal.spreadsheet !== null &&\n            journal.spreadsheet.sheet !== null &&\n            journal.spreadsheet.sheet.id === this.id\n        ) {\n            refines.build()\n        }\n    }\n\n    get tags(): TagsMap {\n        let tags: TagsMap = new Map()\n        for (let entry of Array.from(this.entries.values()).reverse()) {\n            for (let [key, tag] of entry.tags) {\n                if (tags.has(key)) {\n                    tags.get(key)!.frq += tag.frq\n                } else {\n                    tags.set(key, new Tag(tag.raw, tag.flag, tag.key, tag.separator, tag.val))\n                }\n            }\n        }\n        return tags\n    }\n\n}\n","import m from \"mithril\"\nimport { journal, syncer } from \"..\"\nimport { MockGoogleUser } from \"../mocks\"\nimport { FriendlyError, getTestMode } from \"../helpers\"\nimport { SyncerTask, SyncerTaskType, SyncerResponse, SyncerResponseType, SyncerState, TestMode } from \"../types\"\n\nexport class Syncer {\n    public worker: Worker\n    public state: SyncerState = SyncerState.DOWNLOADING\n    public user: gapi.auth2.GoogleUser | MockGoogleUser | null = null\n\n    constructor() {\n        this.worker = new Worker(\"./js/syncWebWorker.js\")\n        this.updateTestMode(getTestMode())\n        this.worker.onmessage = (msg: MessageEvent) => this.onMessage(msg)\n    }\n\n    public updateTestMode(testMode: TestMode) {\n        this.pushSyncerTask({ testMode: testMode, type: SyncerTaskType.TEST_MODE_UPDATE })\n    }\n\n    public updateAuth(token: string) {\n        this.pushSyncerTask({ token: token, type: SyncerTaskType.AUTH_UPDATE })\n    }\n\n    public getSheets(spreadsheetId: string) {\n        this.pushSyncerTask({\n            spreadsheetId: spreadsheetId,\n            type: SyncerTaskType.GET_SHEETS\n        })\n    }\n\n    public getRows(spreadsheetId: string, sheetId: number, sheetTitle: string) {\n        this.pushSyncerTask({\n            spreadsheetId: spreadsheetId,\n            sheetId: sheetId,\n            sheetTitle: sheetTitle,\n            type: SyncerTaskType.GET_ROWS\n        })\n    }\n\n    public deleteRow(idx: number, spreadsheetId: string, sheetId: number) {\n        this.pushSyncerTask({\n            idx: idx,\n            spreadsheetId: spreadsheetId,\n            sheetId: sheetId,\n            type: SyncerTaskType.DELETE_ROW\n        })\n    }\n\n    public updateRow(idx: number, spreadsheetId: string, sheetId: number, sheetTitle: string, content: string) {\n        this.pushSyncerTask({\n            idx: idx,\n            spreadsheetId: spreadsheetId,\n            sheetId: sheetId,\n            sheetTitle: sheetTitle,\n            content: content,\n            type: SyncerTaskType.UPDATE_ROW\n        })\n    }\n\n    public unpause() {\n        this.pushSyncerTask({ type: SyncerTaskType.UNPAUSE })\n    }\n\n    private pushSyncerTask(task: SyncerTask) {\n        this.worker.postMessage(task)\n    }\n\n    private onMessage(msg: MessageEvent) {\n        let response: SyncerResponse = msg.data\n        switch (response.type) {\n            case SyncerResponseType.SYNCER_STATE:\n                if (response.state !== syncer.state) {\n                    syncer.state = response.state\n                    m.redraw()\n                }\n                break\n            case SyncerResponseType.SHEETS:\n                if (journal.spreadsheets.has(response.spreadsheetId)) {\n                    journal.spreadsheets.get(response.spreadsheetId)!.load(response.sheets)\n                }\n                break\n            case SyncerResponseType.ROWS:\n                if (\n                    journal.spreadsheets.has(response.spreadsheetId)\n                    && journal.spreadsheets.get(response.spreadsheetId)!.sheets.has(response.sheetId)\n                ) {\n                    journal.spreadsheets.get(response.spreadsheetId)!.sheets.get(response.sheetId)!.load(response.rows)\n                }\n                break\n            case SyncerResponseType.ERROR:\n                new FriendlyError(response.error.message, `Sync Error - ${response.friendlyMsg}`)\n                break\n            case SyncerResponseType.REAUTH:\n                if (syncer.user !== null) {\n                    syncer.user.reloadAuthResponse().then((auth) => {\n                        syncer.updateAuth(auth.access_token)\n                    }).catch((err) => {\n                        new FriendlyError(err, \"You're signed out and need to sign back in.\")\n                    })\n                }\n                break\n        }\n    }\n}\n","import { journal } from \"..\"\nimport { Entry, Tag } from \".\"\nimport { SearchType } from \"../types\"\nimport { IndexedEntry } from \"../classes/Entry\"\n\ninterface RefinesQuery {\n    keys: Set<string>,\n    vals: Map<string, Tag>,\n    simpleKeys: Map<string, Tag>\n}\n\nexport class Search {\n    public barQuery: Entry = new Entry(\"\")\n    public searchType: SearchType = SearchType.NONE\n    public refinesQuery: RefinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n\n    get query(): Entry {\n        return new Entry([\n            this.barQuery.raw,\n            ...Array.from(this.refinesQuery.keys.values()),\n            ...Array.from(this.refinesQuery.vals.keys()),\n            ...Array.from(this.refinesQuery.simpleKeys.keys())\n        ].join(\" \"))\n    }\n\n    public reset() {\n        this.barQuery = new Entry(\"\")\n        this.searchType = SearchType.NONE\n        this.refinesQuery = { keys: new Set(), vals: new Map(), simpleKeys: new Map() }\n    }\n\n    public entries(): IndexedEntry[] | null {\n        let entries: IndexedEntry[] | null = null\n        if (this.query.tokens.length === 0) {\n            this.searchType = SearchType.NONE\n        } else {\n            this.searchType = SearchType.AND\n            entries = this.search()\n            if (entries.length === 0) {\n                this.searchType = SearchType.OR\n                entries = this.search()\n            }\n        }\n        return entries\n    }\n\n    private search(): IndexedEntry[] {\n        let query = this.query\n        let entries: IndexedEntry[] = []\n        let sourceEntries = journal.spreadsheet!.sheet!.entries\n        for (let [idx, entry] of sourceEntries.entries()) {\n            switch (this.searchType) {\n                case SearchType.AND:\n                    if (query.tokens.every(token => this.match(token, entry))) {\n                        entries.push({ idx: idx, entry: entry })\n                    }\n                    break\n                case SearchType.OR:\n                    if (query.tokens.some(token => this.match(token, entry))) {\n                        entries.push({ idx: idx, entry: entry })\n                    }\n                    break\n            }\n        }\n        return entries\n    }\n\n    private match(token: string, entry: Entry) {\n        if (token.startsWith(\"-@\") && !token.endsWith(\":\")) {\n            return entry.tags.get(token.substring(1)) === undefined\n        } else if (token.startsWith(\"-\")) {\n            return !entry.savedClean.includes(token.substring(1))\n        } else if (token.startsWith(\"@\") && !token.endsWith(\":\")) {\n            return entry.tags.get(token) !== undefined\n        } else {\n            return entry.savedClean.includes(token)\n        }\n    }\n}\n","import m from \"mithril\"\nimport { Spreadsheet } from \".\"\nimport { search, syncer, refines } from \"..\"\nimport {\n    spreadsheetIdPattern, getStoredHideTagRefines, getStoredHideEntriesKeys,\n    setStoredSpreadsheetId, setStoredSpreadsheetSheetId, delStoredSpreadsheetSheetId,\n    getStoredSpreadsheetId, getStoredSpreadsheetSheetId\n} from \"../helpers\"\n\nexport class Journal {\n    public errors: string[] = []\n    public isSignedIn: boolean = false\n    public entryInFocus: boolean = false\n    public hideTagRefines: boolean = false\n    public hideEntriesKeys: boolean = false\n    public spreadsheet: Spreadsheet | null = null\n    public showAddSpreadsheetTextbox: boolean = false\n    public spreadsheets: Map<string, Spreadsheet> = new Map()\n\n    constructor() { }\n\n    public async load(spreadsheetUrls: string | undefined) {\n        this.hideTagRefines = getStoredHideTagRefines()\n        this.hideEntriesKeys = getStoredHideEntriesKeys()\n        let incomingSpreadsheetIds = this.getSpreadsheetIdsFromUrls(spreadsheetUrls)\n        await this.loadNewSpreadsheets(incomingSpreadsheetIds)\n        await this.removeOldSpreadsheets(incomingSpreadsheetIds)\n    }\n\n    public unload() {\n        this.removeOldSpreadsheets([])\n        this.errors = []\n        this.isSignedIn = false\n        this.entryInFocus = false\n        this.hideTagRefines = false\n        this.hideEntriesKeys = false\n        this.spreadsheet = null\n        this.showAddSpreadsheetTextbox = false\n        this.spreadsheets = new Map()\n    }\n\n    get isActive(): boolean {\n        return this.spreadsheet !== null && this.spreadsheet.sheet !== null && this.isSignedIn\n    }\n\n    public switch(spreadsheetId?: string | undefined, sheetId?: number | undefined) {\n        if (spreadsheetId !== undefined && sheetId !== undefined && this.spreadsheet?.id === spreadsheetId && this.spreadsheet?.sheet?.id === sheetId) {\n            return\n        }\n\n        if (spreadsheetId === undefined && sheetId === undefined) {\n            spreadsheetId = getStoredSpreadsheetId()\n            sheetId = getStoredSpreadsheetSheetId(spreadsheetId)\n        }\n\n        search.reset()\n\n        this.spreadsheet = (spreadsheetId !== undefined && this.spreadsheets.has(spreadsheetId))\n            ? this.spreadsheets.get(spreadsheetId)!\n            : Array.from(this.spreadsheets.values())[0] || null\n\n        if (this.spreadsheet !== null) {\n            setStoredSpreadsheetId(this.spreadsheet.id)\n            this.spreadsheet.sheet = (sheetId !== undefined && this.spreadsheet.sheets.has(sheetId))\n                ? this.spreadsheet.sheets.get(sheetId)!\n                : Array.from(this.spreadsheet.sheets.values())[0] || null\n\n            if (this.spreadsheet.sheet !== null) {\n                setStoredSpreadsheetSheetId(this.spreadsheet.id, this.spreadsheet.sheet.id)\n            }\n        }\n\n        m.redraw()\n    }\n\n    private async loadNewSpreadsheets(spreadsheetIds: string[]) {\n        for (let id of spreadsheetIds.filter(id => !this.spreadsheets.get(id)).sort(id => (id === getStoredSpreadsheetId() ? -1 : 1))) {\n            new Spreadsheet(id)\n        }\n    }\n\n    private async removeOldSpreadsheets(spreadsheetIds: string[]) {\n        for (let [spreadsheet_id] of Array.from(this.spreadsheets).filter(([spreadsheet_id]) => !spreadsheetIds.includes(spreadsheet_id))) {\n            delStoredSpreadsheetSheetId(spreadsheet_id)\n            if (this.spreadsheet === this.spreadsheets.get(spreadsheet_id)) {\n                this.spreadsheet = null\n            }\n            if (this.spreadsheets.has(spreadsheet_id)) {\n                for (let [id] of this.spreadsheets.get(spreadsheet_id)!.sheets) {\n                    this.spreadsheets.get(spreadsheet_id)!.sheets.delete(id)\n                }\n                this.spreadsheets.delete(spreadsheet_id)\n            }\n        }\n    }\n\n    private getSpreadsheetIdsFromUrls(urls: string | undefined): string[] {\n        if (!urls) { return [] }\n        let ids: string[] = []\n        let matches = urls.matchAll(spreadsheetIdPattern)\n        for (let match of matches) {\n            if (match) { ids.push(match[1]) }\n        }\n        return ids\n    }\n\n    public async deleteEntry(idx: number) {\n        syncer.deleteRow(idx, this.spreadsheet!.id, this.spreadsheet!.sheet!.id)\n        this.spreadsheet!.sheet!.entries.splice(idx, 1)[0]\n        refines.build()\n        m.redraw()\n    }\n\n    public async saveEntry(idx: number) {\n        let entry = this.spreadsheet!.sheet!.entries[idx]\n        if (entry.raw === entry.saved) { return }\n        syncer.updateRow(idx, this.spreadsheet!.id, this.spreadsheet!.sheet!.id, this.spreadsheet!.sheet!.title, entry.raw)\n        entry.saved = entry.raw\n        refines.build()\n        m.redraw()\n    }\n}\n","import { Sheet } from \".\"\nimport { journal, syncer } from \"../index\"\nimport { getStoredSpreadsheetSheetId } from \"../helpers\"\n\nexport class Spreadsheet {\n    public sheet: Sheet | null = null\n    public sheets: Map<number, Sheet> = new Map()\n\n    constructor(public id: string) {\n        journal.spreadsheets.set(id, this)\n        syncer.getSheets(id)\n    }\n\n    public async load(sheets: gapi.client.sheets.Sheet[]) {\n        for (let sheet of sheets.sort((sheet) => (sheet.properties?.sheetId === getStoredSpreadsheetSheetId(this.id)) ? -1 : 1)) {\n            if (sheet.properties !== undefined && sheet.properties.title !== undefined && sheet.properties.sheetId !== undefined) {\n                new Sheet(sheet.properties.sheetId, sheet.properties.title, this)\n            }\n        }\n    }\n}\n","import { FriendlyError } from \"../helpers\"\r\n\r\nexport class ServiceWorker {\r\n    constructor() {\r\n        if (\"serviceWorker\" in navigator) {\r\n            window.addEventListener(\"load\", async () => {\r\n                await navigator.serviceWorker.register(\"../serviceWorker.js\")\r\n            })\r\n        } else {\r\n            throw new FriendlyError(\"serviceWorker not supported\", \"Your browser is not supported.\")\r\n        }\r\n    }\r\n}\r\n","import { Caret } from \"../types\"\nimport m from \"mithril\"\nimport { Entry } from \"../classes\"\nimport { journal, search } from \"..\"\nimport { getCaretPosition, setCaretPosition } from \"../helpers\"\n\nexport function entries() {\n    var caret: Caret = { pos: null, el: null }\n\n    function view() {\n        return m(\"#entries\", [\n            m(\".tempguidancePre\", \"Entries\"),\n            entriesVnodes(),\n        ])\n    }\n\n    function entriesVnodes() {\n        let searchEntries = search.entries()\n        if (searchEntries !== null) {\n            return searchEntries.map(({idx, entry}) => entryVnode(idx, entry))\n        }\n\n        let allEntries = Array.from(journal.spreadsheet!.sheet!.entries.entries())\n        return allEntries.map(([idx, entry]) => entryVnode(idx, entry))\n    }\n\n    function entryVnode(idx: number, entry: Entry): m.Vnode {\n        return m(\".entryWrap\", { id: `entry-${idx}` }, [\n            entryContent(entry, idx),\n            deleteEntryButton(idx),\n        ])\n    }\n\n    function deleteEntryButton(idx: number) {\n        return m(\"button\", {\n            class: \"del\",\n            onclick: async () => await journal.deleteEntry(idx)\n        }, \"del\")\n    }\n\n    function entryContent(entry: Entry, idx: number) {\n        return m(\"div\", entryContentSettings(entry, idx), m.trust(\n            (!entry.hovered && !entry.focused && journal.hideEntriesKeys)\n                ? entry.readableRendered\n                : entry.rendered\n        ))\n    }\n\n    function onEntryKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function onEntryInput(event: any, entry: Entry) {\n        let pos = getCaretPosition(event.target)\n        caret = { pos: (pos) ? pos[1] : null, el: event.target }\n        entry.raw = event.target.innerText\n    }\n\n    function onEntryUpdate() {\n        setCaretPosition(caret.el, caret.pos)\n        caret = { pos: null, el: null }\n    }\n\n    function onEntryFocus(entry: Entry) {\n        entry.focused = true\n    }\n\n    async function onEntryBlur(entry: Entry, idx: number) {\n        entry.focused = false\n        await journal.saveEntry(idx)\n    }\n\n    function onEntryMouseover(entry: Entry) {\n        entry.hovered = true\n    }\n\n    function onEntryMouseout(entry: Entry) {\n        entry.hovered = false\n    }\n\n    function entryContentSettings(entry: Entry, idx: number) {\n        return {\n            id: `entry-${idx}-content`,\n            contenteditable: \"true\",\n            class: \"entry breakwrap column\",\n            onkeydown: (event: any) => onEntryKeydown(event),\n            oninput: (event: any) => onEntryInput(event, entry),\n            onupdate: () => onEntryUpdate(),\n            onblur: () => onEntryBlur(entry, idx),\n            onmouseover: () => onEntryMouseover(entry),\n            onmouseout: () => onEntryMouseout(entry),\n            onfocus: () => onEntryFocus(entry),\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { journal } from \"..\"\r\nimport {\r\n    getStoredHideEntriesKeys, setStoredHideEntriesKeys, setStoredHideTagRefines\r\n} from \"../helpers\"\r\n\r\nexport function toggles() {\r\n\r\n    function view() {\r\n        return [\r\n            m(\"#hideEntriesKeysToggle\", [\r\n                m(\"label\", { for: \"hideEntriesCheckbox\" }, \"Tag keys:\"),\r\n                m(\"input#hideEntriesCheckbox\", hideEntriesKeysSettings())\r\n            ]),\r\n            m(\"#hideTagRefinesToggle\", [\r\n                m(\"label\", { for: \"hideTagRefinesCheckbox\" }, \"Tag refines:\"),\r\n                m(\"input#hideTagRefinesCheckbox\", hideTagRefinesSettings())\r\n            ])\r\n        ]\r\n    }\r\n\r\n    function hideEntriesKeysSettings() {\r\n        return {\r\n            type: \"checkbox\",\r\n            checked: !getStoredHideEntriesKeys(),\r\n            disabled: (journal.entryInFocus),\r\n            onclick: () => {\r\n                journal.hideEntriesKeys = !journal.hideEntriesKeys\r\n                setStoredHideEntriesKeys(journal.hideEntriesKeys)\r\n            }\r\n        }\r\n    }\r\n\r\n    function hideTagRefinesSettings() {\r\n        return {\r\n            type: \"checkbox\",\r\n            checked: !journal.hideTagRefines,\r\n            onclick: () => {\r\n                journal.hideTagRefines = !journal.hideTagRefines\r\n                setStoredHideTagRefines(journal.hideTagRefines)\r\n            }\r\n        }\r\n    }\r\n\r\n    return { view: view }\r\n}\r\n","import m from \"mithril\"\nimport { search } from \"..\"\nimport { Caret } from \"../types\"\nimport { getCaretPosition, setCaretPosition, escapeHtml } from \"../helpers\"\n\nexport function searchbar() {\n    var caret: Caret = { el: null, pos: null }\n\n    function view() {\n        return m(\"#search\", [\n            m(\"#searchQuery\", searchNodeSettings(), m.trust(search.barQuery.rendered)),\n            m(\"button\", clearSearchNodeSettings(), \"x\")\n        ])\n    }\n\n    function searchNodeSettings() {\n        return {\n            placeholder: \"Search for text or tags\",\n            contenteditable: \"true\",\n            class: `entry breakwrap`,\n            oninput: (event: any) => onSearchInput(event),\n            onupdate: () => onSearchUpdate(),\n            onkeydown: (event: any) => onSearchKeydown(event)\n        }\n    }\n\n    function onSearchInput(event: any) {\n        let pos = getCaretPosition(event.target)\n        caret = (pos) ? { pos: pos[1], el: event.target } : { pos: null, el: null }\n        search.barQuery.raw = escapeHtml(event.target.innerText)\n    }\n\n    function onSearchUpdate() {\n        setCaretPosition(caret.el, caret.pos)\n        caret = { el: null, pos: null }\n    }\n\n    function onSearchKeydown(event: any) {\n        if (event.keyCode == 13 && !event.shiftKey) {\n            event.preventDefault()\n            event.target.blur()\n        }\n    }\n\n    function clearSearchNodeSettings() {\n        return {\n            id: \"clearSearch\",\n            class: \"del\",\n            onclick: () => search.barQuery.raw = \"\"\n        }\n    }\n\n    return { view: view }\n}\n","import m from \"mithril\"\r\nimport { MockGapi } from \"../mocks\"\r\nimport { TestMode } from \"../types\"\r\nimport { journal, syncer } from \"..\"\r\nimport {\r\n    getStoredSpreadsheetUrls, getStoredSpreadsheetSheetId, setStoredSpreadsheetUrls, getTestMode\r\n} from \"../helpers\"\r\n\r\nconst scope = [\"https://www.googleapis.com/auth/spreadsheets\"].join(\" \")\r\nconst clientId = \"893904323330-moo1k9s19qp40kr747pftdo29ejdef0o.apps.googleusercontent.com\"\r\n\r\nexport function googleAPI() {\r\n    var gapi_: MockGapi | typeof gapi\r\n\r\n    function gapiScriptSettings() {\r\n        return {\r\n            async: true, defer: true, src: \"https://apis.google.com/js/api.js\",\r\n            onload: () => {\r\n                gapi_ = (getTestMode() === TestMode.OFF) ? gapi : new MockGapi()\r\n                gapi_.load('auth2', initClient)\r\n            }\r\n        }\r\n    }\r\n\r\n    function initClient() {\r\n        gapi_.auth2.init({\r\n            scope: scope,\r\n            client_id: clientId\r\n        }).then(() => {\r\n            gapi_.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus)\r\n            updateSigninStatus(gapi_.auth2.getAuthInstance().isSignedIn.get())\r\n        })\r\n    }\r\n\r\n    async function updateSigninStatus(signedIn: boolean) {\r\n        journal.isSignedIn = signedIn\r\n        m.redraw()\r\n        if (journal.isSignedIn) {\r\n            let user = gapi_.auth2.getAuthInstance().currentUser.get()\r\n            syncer.user = user\r\n            let auth = user.getAuthResponse()\r\n            syncer.updateAuth(auth.access_token)\r\n            await initJournal()\r\n        } else {\r\n            journal.unload()\r\n        }\r\n    }\r\n\r\n    async function initJournal() {\r\n        let spreadsheetUrls = getStoredSpreadsheetUrls()\r\n        await journal.load(spreadsheetUrls)\r\n    }\r\n\r\n    function view() {\r\n        if (getTestMode() === TestMode.DEMO) {\r\n            journal.isSignedIn = true\r\n            journal.load(\"https://docs.google.com/spreadsheets/d/demo/edit\")\r\n            return []\r\n        } else {\r\n            return m(\"#googleApi\", [\r\n                (journal.showAddSpreadsheetTextbox) ? [spreadsheetsTextbox(), m(\"br\")] : [],\r\n                (journal.isSignedIn) ? addSpreadsheetButton() : [],\r\n                (journal.spreadsheet !== null) ? spreadsheetsSelect() : [],\r\n                (journal.isActive) ? sheetsSelect() : [],\r\n                signInOutButton(),\r\n                m(\"script\", gapiScriptSettings()),\r\n            ])\r\n        }\r\n    }\r\n\r\n    function signInOutButton() {\r\n        return (journal.isSignedIn)\r\n            ? m(\"button\", {\r\n                onclick: () => {\r\n                    if (getTestMode() === TestMode.RETURN_ROWS) { journal.unload() }\r\n                    gapi_.auth2.getAuthInstance().signOut()\r\n                }, class: \"authButton\"\r\n            }, \"Sign Out\")\r\n            : m(\"button\", { onclick: () => gapi_.auth2.getAuthInstance().signIn(), class: \"authButton\" }, \"Sign In\")\r\n    }\r\n\r\n    function addSpreadsheetButton() {\r\n        return m(\"button\", {\r\n            id: \"addSpreadsheet\",\r\n            onclick: async () => {\r\n                journal.showAddSpreadsheetTextbox = !journal.showAddSpreadsheetTextbox\r\n                if (!journal.showAddSpreadsheetTextbox) {\r\n                    let spreadsheetUrls = getStoredSpreadsheetUrls()\r\n                    await journal.load(spreadsheetUrls)\r\n                }\r\n            },\r\n        }, (journal.showAddSpreadsheetTextbox) ? \" ✓ \" : \"+/-\")\r\n    }\r\n\r\n    function spreadsheetsTextbox() {\r\n        return m(\"textarea\", {\r\n            id: \"spreadsheetURLs\",\r\n            placeholder: \"Enter list of Google Sheets Spreadsheet URLs here\",\r\n            value: getStoredSpreadsheetUrls(),\r\n            oninput: (event: any) => setStoredSpreadsheetUrls(event.target.value),\r\n        })\r\n    }\r\n\r\n    function spreadsheetsSelect() {\r\n        return m(\"select\", {\r\n            onchange: (event: any) => {\r\n                let id = event.target.value\r\n                journal.switch(id, getStoredSpreadsheetSheetId(id))\r\n            },\r\n            id: \"spreadsheetSelect\",\r\n        }, [\r\n            Array.from(journal.spreadsheets).map(([id]) => [\r\n                m(\"option\", {\r\n                    value: id,\r\n                    selected: journal.spreadsheet!.id === id\r\n                }, id.substr(id.length - 6))\r\n            ])\r\n        ])\r\n    }\r\n\r\n    function sheetsSelect() {\r\n        return m(\"select\", {\r\n            onchange: (event: any) => {\r\n                journal.switch(journal.spreadsheet!.id, parseInt(event.target.value))\r\n                m.redraw()\r\n            },\r\n            id: \"sheetSelect\",\r\n        }, [\r\n            Array.from(journal.spreadsheet!.sheets).map(([id, sheet]) => [\r\n                m(\"option\", {\r\n                    value: id,\r\n                    selected: journal.isActive && journal.spreadsheet!.sheet!.id === id\r\n                }, sheet.title)\r\n            ])\r\n        ])\r\n    }\r\n\r\n    return { view: view }\r\n}\r\n","import { Tag } from \"../classes\"\nimport m from \"mithril\"\nimport { journal, search, refines } from \"..\"\n\nexport function refinesPane() {\n    const simpleTagsHeader = \"Simple Tags\"\n    const expanded: Set<string> = new Set()\n\n    function view() {\n        if (journal.hideTagRefines) { return [] }\n        return m(\"#tagsWrap\", m(\"#tags\", [\n            m(\".tempguidancePre\", \"Tags\"),\n            simpleRefinesVnodes(),\n            complexRefinesVnodes(),\n        ]))\n    }\n\n    function simpleRefinesVnodes(): m.Vnode {\n        return m(\".tagRefineWrap\", (refines.simple.size === 0)? [] : [\n            refineKeyVnode(simpleTagsHeader, refines.simple.size),\n            Array.from(refines.simple, ([key, tag]) => [\n                refineValVnode(key, tag)\n            ])\n        ])\n    }\n\n    function complexRefinesVnodes(): m.Vnode[] {\n        return Array.from(refines.complex, ([key, tags]) => m(\".tagRefineWrap\", [\n            refineKeyVnode(key, tags.length),\n            tags.map(tag => [refineValVnode(key, tag)])\n        ]))\n    }\n\n    function refineKeyVnode(key: string, count: number) {\n        return m(\"span\", tagRefineKeySettings(key), [\n            (key === simpleTagsHeader)\n                ? []\n                : m(\"input\", { type: \"checkbox\", checked: search.refinesQuery.keys.has(key) }),\n            (expanded.has(key)) ? m(\"span\", \"▾ \") : m(\"span\", \"▿ \"),\n            m(\"span\", key),\n            m(\"span\", ` (${count})`),\n        ])\n    }\n\n    function refineValVnode(key: string, tag: Tag) {\n        return m(\"div\", { class: `tagRefineValWrap` }, [\n            m(\"span\", tagRefineValSettings(key, tag), [\n                m(\"input\", { type: \"checkbox\", checked: (tag.val === null)\n                    ? search.refinesQuery.simpleKeys.has(tag.clean)\n                    : search.refinesQuery.vals.has(tag.clean) }),\n                (tag.val !== null)\n                    ? m(\"span\", `${tag.cleanVal}`)\n                    : m(\"span\", `${tag.flag}${tag.cleanKey}`),\n                m(\"span\", ` (${tag.frq})`),\n            ]),\n        ])\n    }\n\n    function tagRefineKeySettings(key: string) {\n        return {\n            class: \"roundTagKey\",\n            onclick: (event: any) => refineTagKeyOnClick(event, key),\n        }\n    }\n\n    function tagRefineValSettings(key: string, tag: Tag) {\n        let tagClass = (tag.val === null) ? \"simpleTag\" : \"roundTagVal\"\n        let hideClass = \"hide\"\n        if (\n            (tag.val === null && expanded.has(simpleTagsHeader)) ||\n            expanded.has(key) ||\n            search.refinesQuery.vals.has(tag.clean)\n        ) {\n            hideClass = \"\"\n        }\n        return {\n            class: `${tagClass} ${hideClass}`,\n            onclick: () => refineTagValOnClick(tag),\n        }\n    }\n\n    function refineTagKeyOnClick(event: any, key: string) {\n        if (!event.metaKey && !event.ctrlKey) {\n            expanded.has(key) ? expanded.delete(key) : expanded.add(key)\n        } else {\n            if (key === simpleTagsHeader) { return }\n            search.refinesQuery.keys.has(key)\n                ? search.refinesQuery.keys.delete(key)\n                : search.refinesQuery.keys.add(key)\n        }\n    }\n\n    function refineTagValOnClick(tag: Tag) {\n        if (tag.val === null) {\n            search.refinesQuery.simpleKeys.has(tag.clean)\n                ? search.refinesQuery.simpleKeys.delete(tag.clean)\n                : search.refinesQuery.simpleKeys.set(tag.clean, tag)\n        } else {\n            search.refinesQuery.vals.has(tag.clean)\n                ? search.refinesQuery.vals.delete(tag.clean)\n                : search.refinesQuery.vals.set(tag.clean, tag)\n        }\n    }\n\n    return { view: view }\n}\n","import { Tag } from \".\"\nimport { journal, search } from \"..\"\n\nexport class Refines {\n    public simple: Map<string, Tag> = new Map()\n    public complex: Map<string, Tag[]> = new Map()\n\n    constructor() { }\n\n    public build() {\n        let simpleRefines: Map<string, Tag> = new Map()\n        let complexRefines: Map<string, Tag[]> = new Map()\n\n        for (let tag of journal.spreadsheet!.sheet!.tags.values()) {\n            if (tag.val === null) {\n                let key = `${tag.flag}${tag.cleanKey}`\n                if (!simpleRefines.has(key)) {\n                    simpleRefines.set(key, tag)\n                }\n            } else {\n                let key = `${tag.flag}${tag.cleanKey}${tag.separator}`\n                if (!complexRefines.has(key)) { complexRefines.set(key, []) }\n                complexRefines.get(key)!.push(tag)\n            }\n        }\n\n        this.simple = new Map([...simpleRefines.entries()])\n        this.complex = new Map([...complexRefines.entries()].sort())\n\n        this.cleanRefines()\n    }\n\n    private cleanRefines() {\n        // Clean stale simple tag key (refine val) selections\n        for (let [key,] of search.refinesQuery.simpleKeys) {\n            if (!this.simple.has(key)) {\n                search.refinesQuery.simpleKeys.delete(key)\n            }\n        }\n\n        // Clean stale complex tag key selections\n        for (let key of search.refinesQuery.keys) {\n            if (!this.complex.has(key)) {\n                search.refinesQuery.keys.delete(key)\n            }\n        }\n\n        // Clean stale complex tag val\n        for (let [key,] of search.refinesQuery.vals) {\n            if (!Array.from(this.complex.values()).some(tags => tags.some(tag => tag.clean === key))) {\n                search.refinesQuery.vals.delete(key)\n            }\n        }\n    }\n\n}"],"sourceRoot":""}