{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/types/index.ts","webpack:///./src/workers/sync/tasks/BaseTask.ts","webpack:///./src/workers/sync/index.ts","webpack:///./src/types/errors.ts","webpack:///./src/types/search.ts","webpack:///./src/types/testing.ts","webpack:///./src/types/syncer.ts","webpack:///./src/workers/sync/tasks/index.ts","webpack:///./src/workers/sync/tasks/ExtendSheetTask.ts","webpack:///./src/workers/sync/syncWebWorker.ts","webpack:///./src/workers/sync/typeGuards.ts","webpack:///./src/workers/sync/tasks/GetRowsTask.ts","webpack:///./src/workers/sync/tasks/GetSheetsTask.ts","webpack:///./src/workers/sync/tasks/UpdateRowTask.ts","webpack:///./src/workers/sync/tasks/DeleteRowTask.ts","webpack:///./src/workers/sync/tasks/GetSpreadsheetTask.ts","webpack:///./src/workers/sync/messages.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__export","require","payload","testMode","type","SyncerPayloadType","GET_ROWS","createGetRowsTask","GET_SPREADSHEET","createGetSpreadsheetTask","GET_SHEETS","createGetSheetsTask","DELETE_ROW","createDeleteRowTask","UPDATE_ROW","createUpdateRowTask","TestMode","OFF","this","undefined","SyncerError","Error","errorMsg","friendlyMsg","needsReAuth","super","_1","constructor","pause","error","ERROR","SearchType","SyncerResponseType","SyncerState","ExtendSheetTask","BaseTask","token","url","URL","spreadsheetId","opts","method","cache","headers","Authorization","body","JSON","stringify","requests","appendDimension","sheetId","dimension","length","response","fetch","toString","ok","json","status","pendingDownloads","taskFactory","TaskFactory","state","SYNCED","downloadQueue","Map","uploadQueue","isSynced","PAUSED","size","updateSyncState","newState","postSyncStateMessage","handleSyncError","id","instanceOfSyncerError","postTokenRequestMessage","syncerError","message","postMessage","workUploadQueueTasks","UPLOADING","task","work","shift","workDownloadQueueTasks","DOWNLOADING","entries","delete","then","catch","finally","sleep","ms","Promise","resolve","setTimeout","sync","onmessage","msg","data","TEST_MODE_UPDATE","AUTH_UPDATE","UNPAUSE","createTask","async","set","push","prequeue","GetRowsTask","MockGetRowsTask","range","sheetTitle","rows","values","map","row","_token","FAIL_GET_RANGE","RETURN_ROWS","GetSheetsTask","sheets","UpdateRowTask","idx","params","valueInputOption","keys","forEach","searchParams","append","majorDimension","content","includes","extendSheetTask","EXTEND_SHEET","DeleteRowTask","startRowIndex","endRowIndex","startColumnIndex","deleteRange","shiftDimension","GetSpreadsheetTask","spreadsheet","SYNC_STATE","TOKEN_REQUEST"],"mappings":"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","file":"syncWebWorker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 56);\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./errors\"));\n__export(require(\"./search\"));\n__export(require(\"./testing\"));\n__export(require(\"./syncer\"));\n","import { SyncerPayload, TestMode, SyncerPayloadType } from \"../../../types\"\nimport {\n    createGetRowsTask, createGetSpreadsheetTask, createGetSheetsTask,\n    createDeleteRowTask, createUpdateRowTask\n} from \".\"\n\nexport class TaskFactory {\n    public createTask(payload: SyncerPayload, testMode: TestMode): BaseTask<SyncerPayload> | undefined {\n        switch(payload.type) {\n            case SyncerPayloadType.GET_ROWS:\n                return createGetRowsTask(payload, testMode)\n            case SyncerPayloadType.GET_SPREADSHEET:\n                return createGetSpreadsheetTask(payload, testMode)\n            case SyncerPayloadType.GET_SHEETS:\n                return createGetSheetsTask(payload, testMode)\n            case SyncerPayloadType.DELETE_ROW:\n                return createDeleteRowTask(payload, testMode)\n            case SyncerPayloadType.UPDATE_ROW:\n                return createUpdateRowTask(payload, testMode)\n            // case SyncerPayloadType.CREATE_ROW:\n            //     return undefined // TODO\n            // case SyncerPayloadType.MOVE_ROW:\n            //     return undefined // TODO\n            default:\n                return undefined\n        }\n        return\n    }\n\n}\n\nexport abstract class BaseTask<P extends SyncerPayload> {\n    public payload: P\n    public async: boolean | undefined\n    public testMode: TestMode = TestMode.OFF\n\n    constructor(payload: P, testMode?: TestMode) {\n        this.payload = payload\n        this.testMode = (testMode !== undefined) ? testMode : this.testMode\n    }\n\n    public abstract work(token: string): Promise<P>\n}\n","export * from \"./typeGuards\"\nexport * from \"./syncWebWorker\"\n\n// TODO: REMOVE AND SWITCH ALL PLACES THIS IS USED TO USE src/types/errors/SyncerError\n// SyncerError type is fragmented into two.\n// Syncer likely only needs to throw regular errors now as they should be handled on\n// the main thread side based on the payload type\n// ... errors also need to be overhauled in src/errors\nexport class SyncerError extends Error {\n    constructor(errorMsg: string, public friendlyMsg: string, public needsReAuth: boolean) {\n        super(errorMsg)\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _1 = require(\".\");\nclass SyncerError extends Error {\n    constructor(errorMsg, friendlyMsg, needsReAuth, pause) {\n        super(errorMsg);\n        this.friendlyMsg = friendlyMsg;\n        this.needsReAuth = needsReAuth;\n        this.payload = {\n            pause: (pause !== undefined) ? pause : true,\n            error: this,\n            friendlyMsg: this.friendlyMsg,\n            type: _1.SyncerPayloadType.ERROR,\n        };\n    }\n}\nexports.SyncerError = SyncerError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SearchType;\n(function (SearchType) {\n    SearchType[SearchType[\"NONE\"] = 0] = \"NONE\";\n    SearchType[SearchType[\"AND\"] = 1] = \"AND\";\n    SearchType[SearchType[\"OR\"] = 2] = \"OR\";\n})(SearchType = exports.SearchType || (exports.SearchType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TestMode;\n(function (TestMode) {\n    TestMode[\"OFF\"] = \"0\";\n    TestMode[\"WORKING\"] = \"1\";\n    TestMode[\"FAIL_GET_SPREADSHEET_SHEETS\"] = \"2\";\n    TestMode[\"FAIL_GET_RANGE\"] = \"3\";\n    TestMode[\"FAIL_UPDATE_RANGE\"] = \"4\";\n    TestMode[\"FAIL_DELETE_ROW\"] = \"5\";\n    TestMode[\"RETURN_ROWS\"] = \"6\";\n    TestMode[\"DEMO\"] = \"7\";\n})(TestMode = exports.TestMode || (exports.TestMode = {}));\n","import { TestMode } from \"./testing\"\n\nexport type SyncerPayload = (\n    GetRowsPayload | GetSheetsPayload | GetSpreadsheetPayload | UpdateRowPayload |\n    ExtendSheetPayload | DeleteRowPayload | TestModeUpdatePayload | AuthUpdatePayload |\n    UnpausePayload | SyncStatePayload | ErrorPayload | TokenRequestPayload\n)\n\nexport enum SyncerPayloadType {\n    AUTH_UPDATE,\n    DELETE_ROW,\n    UPDATE_ROW,\n    GET_ROWS,\n    GET_SHEETS,\n    TEST_MODE_UPDATE,\n    UNPAUSE,\n    GET_SPREADSHEET,\n    EXTEND_SHEET,\n    CREATE_ROW,\n    MOVE_ROW,\n    ERROR,\n    TOKEN_REQUEST,\n    SYNC_STATE,\n}\n\nexport enum SyncerResponseType {\n    SYNCER_STATE,\n    ERROR,\n    REAUTH,\n}\n\nexport enum SyncerState {\n    PAUSED = \"cloud_off\",\n    UPLOADING = \"cloud_upload\",\n    DOWNLOADING = \"cloud_download\",\n    SYNCED = \"cloud_done\",\n    INITIALIZING = \"cloud_queue\",\n}\n\nexport interface TestModeUpdatePayload {\n    type: SyncerPayloadType.TEST_MODE_UPDATE\n    testMode: TestMode\n}\n\nexport interface AuthUpdatePayload {\n    type: SyncerPayloadType.AUTH_UPDATE\n    token: string\n}\n\nexport interface UnpausePayload {\n    type: SyncerPayloadType.UNPAUSE\n}\n\nexport interface DeleteRowPayload {\n    type: SyncerPayloadType.DELETE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface ExtendSheetPayload {\n    type: SyncerPayloadType.EXTEND_SHEET\n    spreadsheetId: string\n    sheetId: number\n}\n\nexport interface UpdateRowPayload {\n    type: SyncerPayloadType.UPDATE_ROW\n    idx: number\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    content: string\n}\n\nexport interface GetSpreadsheetPayload {\n    type: SyncerPayloadType.GET_SPREADSHEET\n    spreadsheetId: string\n    spreadsheet?: gapi.client.sheets.Spreadsheet\n}\n\nexport interface GetRowsPayload {\n    type: SyncerPayloadType.GET_ROWS\n    spreadsheetId: string\n    sheetId: number\n    sheetTitle: string\n    rows: string[]\n}\n\nexport interface GetSheetsPayload {\n    type: SyncerPayloadType.GET_SHEETS\n    spreadsheetId: string\n    sheets: gapi.client.sheets.Sheet[]\n}\n\nexport interface SyncStatePayload {\n    type: SyncerPayloadType.SYNC_STATE\n    length: number\n    state: SyncerState\n}\n\nexport interface ErrorPayload {\n    type: SyncerPayloadType.ERROR\n    error: Error\n    pause: boolean\n    friendlyMsg: string\n}\n\nexport interface TokenRequestPayload {\n    type: SyncerPayloadType.TOKEN_REQUEST\n}\n","export * from \"./BaseTask\"\nexport * from \"./GetRowsTask\"\nexport * from \"./GetSheetsTask\"\nexport * from \"./UpdateRowTask\"\nexport * from \"./DeleteRowTask\"\n// export * from \"./MoveRowTask\"\nexport * from \"./ExtendSheetTask\"\nexport * from \"./GetSpreadsheetTask\"\n","import { SyncerError } from \"..\"\nimport { BaseTask } from \"./BaseTask\"\nimport { GapiErrorResponse, ExtendSheetPayload } from \"../../../types\"\n\nexport class ExtendSheetTask<P extends ExtendSheetPayload> extends BaseTask<P> {\n    constructor(payload: P) { super(payload) }\n\n    public async work(token: string): Promise<P> {\n        let extendSheetLength = 100\n        let url = new URL(`https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}:batchUpdate`)\n        let headers = { Authorization: `Bearer ${token}` }\n        let body = JSON.stringify({ requests: [{ appendDimension: { sheetId: this.payload.sheetId, dimension: \"ROWS\", length: extendSheetLength } }] })\n        let opts: RequestInit = { method: \"POST\", mode: \"cors\", cache: \"no-cache\", headers: headers, body: body }\n        let response = await fetch(url.toString(), opts)\n        if (!response.ok) {\n            let error: GapiErrorResponse = await response.json()\n            throw new SyncerError(JSON.stringify(error), \"Failed to extend sheet\", response.status === 401)\n        }\n        return this.payload\n    }\n}\n","import { instanceOfSyncerError } from \".\"\nimport { SyncerError } from \"../../types\"\nimport { TaskFactory, BaseTask } from \"./tasks\"\nimport { postTokenRequestMessage, postSyncStateMessage } from \"./messages\"\nimport { SyncerState, SyncerPayload, TestMode, SyncerPayloadType } from \"../../types\"\n\nlet pendingDownloads = 0\nconst syncRate = 250 // ms\nlet testMode: TestMode = TestMode.OFF\nconst taskFactory = new TaskFactory()\nlet token: string | undefined = undefined\nlet state: SyncerState = SyncerState.SYNCED\nconst downloadQueue: Map<string, BaseTask<SyncerPayload>> = new Map()\nconst uploadQueue: { id: string, task: BaseTask<SyncerPayload> }[] = []\n\nsync()\nonmessage = (msg) => prequeue(msg)\n\nfunction prequeue(msg: MessageEvent) {\n    const { id, payload }: { id: string, payload: SyncerPayload } = msg.data\n\n    switch (payload.type) {\n        case SyncerPayloadType.TEST_MODE_UPDATE:\n            testMode = payload.testMode\n            if (testMode !== TestMode.OFF) token = \"mock\"\n            return\n        case SyncerPayloadType.AUTH_UPDATE:\n            token = payload.token\n            return\n        case SyncerPayloadType.UNPAUSE:\n            updateSyncState(SyncerState.PAUSED)\n            return\n    }\n\n    let task = taskFactory.createTask(payload, testMode)\n    if (task === undefined) return\n\n    if (task.async) {\n        downloadQueue.set(id, task)\n    } else {\n        uploadQueue.push({ id, task })\n    }\n}\n\nasync function sync() {\n    while (true) {\n        await sleep(syncRate)\n        if (isSynced()) updateSyncState(SyncerState.SYNCED)\n        try {\n            workDownloadQueueTasks()\n            await workUploadQueueTasks()\n        } catch (error) {\n            handleSyncError(error)\n        }\n    }\n}\n\nfunction isSynced() {\n    if (\n        state !== SyncerState.PAUSED &&\n        state !== SyncerState.SYNCED &&\n        uploadQueue.length + downloadQueue.size + pendingDownloads === 0\n    ) {\n        return true\n    }\n    return false\n}\n\nfunction updateSyncState(newState?: SyncerState) {\n    if (newState !== undefined && state !== newState) {\n        state = newState\n        postSyncStateMessage(uploadQueue.length, state)\n    }\n}\n\nfunction handleSyncError(error: Error | SyncerError, id?: string) {\n    if (instanceOfSyncerError(error) && error.needsReAuth) {\n        postTokenRequestMessage()\n        token = undefined\n        return\n    } else {\n        let syncerError: SyncerError = (instanceOfSyncerError(error)\n        ? error\n        : new SyncerError(error.message, \"Unknown Error\", false))\n        if (syncerError.payload.pause) updateSyncState(SyncerState.PAUSED)\n        postMessage({ id, error: syncerError.payload })\n    }\n}\n\nasync function workUploadQueueTasks() {\n    while (uploadQueue.length !== 0 && token && state !== SyncerState.PAUSED) {\n        updateSyncState(SyncerState.UPLOADING)\n        let { id, task } = uploadQueue[0]\n        let payload = await task.work(token)\n        postMessage({ id, payload })\n        uploadQueue.shift()\n    }\n}\n\nfunction workDownloadQueueTasks() {\n    if (downloadQueue.size === 0 || !token || state === SyncerState.PAUSED) return\n    updateSyncState(SyncerState.DOWNLOADING)\n    for (let [id, task] of downloadQueue.entries()) {\n        pendingDownloads += 1\n        downloadQueue.delete(id)\n        task.work(token)\n            .then((payload: SyncerPayload) => postMessage({ id, payload }))\n            .catch((error: SyncerError) => handleSyncError(error, id))\n            .finally(() => pendingDownloads -= 1)\n    }\n}\n\nfunction sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n","import { SyncerError } from \".\"\n\nexport function instanceOfSyncerError(error: Error | SyncerError): error is SyncerError {\n    return \"needsReAuth\" in error\n}\n","import { SyncerError } from \"..\"\nimport { BaseTask } from \"./BaseTask\"\nimport { GapiErrorResponse, GetRowsPayload, TestMode } from \"../../../types\"\n\nexport function createGetRowsTask<P extends GetRowsPayload>(payload: P, testMode: TestMode): BaseTask<P> {\n    return (testMode === TestMode.OFF)\n        ? new GetRowsTask(payload)\n        : new MockGetRowsTask(payload, testMode)\n}\n\nexport class GetRowsTask<P extends GetRowsPayload> extends BaseTask<P> {\n    constructor(payload: P) {\n        super(payload)\n        this.async = true\n    }\n\n    public async work(token: string): Promise<P> {\n        let range = `${this.payload.sheetTitle}!A:A`\n        let url = `https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}/values/${range}`\n        let headers = { Authorization: `Bearer ${token}` }\n        let opts: RequestInit = { method: \"GET\", cache: \"no-cache\", headers: headers }\n        let response = await fetch(url, opts)\n        if (!response.ok) {\n            let error: GapiErrorResponse = await response.json()\n            throw new SyncerError(\n                JSON.stringify(error),\n                `Failed to get sheet rows: ${range}`,\n                response.status === 401)\n        } else {\n            let data: gapi.client.sheets.ValueRange = await response.json()\n            this.payload.rows = (data.values) ? data.values.map(row => row[0]) : []\n        }\n        return this.payload\n    }\n}\n\nexport class MockGetRowsTask<P extends GetRowsPayload> extends BaseTask<P> {\n    constructor(payload: P, testMode: TestMode) {\n        super(payload, testMode)\n        this.async = true\n    }\n\n    public async work(_token: string): Promise<P> {\n        if (this.testMode === TestMode.FAIL_GET_RANGE) {\n            throw new Error(\"mock fail\")\n        } else if (this.testMode === TestMode.RETURN_ROWS) {\n            this.payload.rows = [\"aaa\", \"bbb\", \"ccc\", \"@tag\", \"@key:value\"]\n        }\n        return this.payload\n    }\n}\n","import { SyncerError } from \"..\"\nimport { BaseTask } from \"./BaseTask\"\nimport { GapiErrorResponse, GetSheetsPayload, TestMode } from \"../../../types\"\n\nexport function createGetSheetsTask<P extends GetSheetsPayload>(payload: P, testMode: TestMode): BaseTask<P> | undefined {\n    return (testMode === TestMode.OFF)\n        ? new GetSheetsTask(payload)\n        : undefined // new MockGetSheetsTask(payload, testMode)\n}\n\nexport class GetSheetsTask<P extends GetSheetsPayload> extends BaseTask<P> {\n    constructor(payload: P) {\n        super(payload)\n        this.async = true\n    }\n\n    public async work(token: string): Promise<P> {\n        let url = `https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}`\n        let headers = { Authorization: `Bearer ${token}` }\n        let opts: RequestInit = { method: \"GET\", cache: \"no-cache\", headers: headers }\n        let response = await fetch(url, opts)\n        if (!response.ok) {\n            let error: GapiErrorResponse = await response.json()\n            throw new SyncerError(\n                JSON.stringify(error),\n                `Failed to get spreadsheet details for spreadsheet: ${this.payload.spreadsheetId}`,\n                response.status === 401\n            )\n        } else {\n            let data: gapi.client.sheets.Spreadsheet = await response.json()\n            this.payload.sheets = (data.sheets) ? data.sheets : []\n        }\n        return this.payload\n    }\n}\n","import { SyncerError } from \"..\"\nimport { BaseTask } from \"./BaseTask\"\nimport { GapiErrorResponse, UpdateRowPayload, SyncerPayload, TestMode, SyncerPayloadType } from \"../../../types\"\nimport { ExtendSheetTask } from \"./ExtendSheetTask\"\n\nexport function createUpdateRowTask<P extends UpdateRowPayload>(payload: P, testMode: TestMode): BaseTask<P> | undefined {\n    return (testMode === TestMode.OFF)\n        ? new UpdateRowTask(payload)\n        : undefined // new MockUpdateRowTask(payload, testMode) // TODO\n}\n\nexport class UpdateRowTask<P extends UpdateRowPayload> extends BaseTask<P> {\n    constructor(payload: P) { super(payload) }\n\n    public async work(token: string): Promise<P> {\n        let range = `${this.payload.sheetTitle}!A${this.payload.idx + 1}:A${this.payload.idx + 1}`\n        let url = new URL(`https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}/values/${range}`)\n        let headers = { Authorization: `Bearer ${token}` }\n        let params: Record<string, string> = { valueInputOption: \"RAW\" }\n        Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n        let body = JSON.stringify({ range: range, majorDimension: \"ROWS\", values: [[this.payload.content]] })\n        let opts: RequestInit = { method: \"PUT\", cache: \"no-cache\", headers: headers, body: body }\n        let response = await fetch(url.toString(), opts)\n        let data = await response.json()\n        if (!response.ok) {\n            if (data.error.message.includes(\"exceeds grid limits\")) {\n                let extendSheetTask: SyncerPayload = {\n                    type: SyncerPayloadType.EXTEND_SHEET,\n                    spreadsheetId: this.payload.spreadsheetId,\n                    sheetId: this.payload.sheetId\n                }\n                await new ExtendSheetTask(extendSheetTask).work(token)\n                let secondResponse = await fetch(url.toString(), opts)\n                if (!secondResponse.ok) {\n                    let error: GapiErrorResponse = await response.json()\n                    throw new SyncerError(JSON.stringify(error), `Failed to update row: ${range}`, response.status === 401)\n                } else {\n                    return this.payload\n                }\n            }\n            throw new SyncerError(JSON.stringify(data), `Failed to update row: ${range}`, response.status === 401)\n        }\n        return this.payload\n    }\n}\n","import { SyncerError } from \"..\"\nimport { BaseTask } from \"./BaseTask\"\nimport { GapiErrorResponse, DeleteRowPayload, TestMode } from \"../../../types\"\n\nexport function createDeleteRowTask<P extends DeleteRowPayload>(payload: P, testMode: TestMode): BaseTask<P> | undefined {\n    return (testMode === TestMode.OFF)\n        ? new DeleteRowTask(payload)\n        : undefined // new MockDeleteRowTask(payload, testMode) // TODO\n}\n\nexport class DeleteRowTask<P extends DeleteRowPayload> extends BaseTask<P> {\n    constructor(payload: P) { super(payload) }\n\n    public async work(token: string): Promise<P> {\n        let range = { sheetId: this.payload.sheetId, startRowIndex: this.payload.idx, endRowIndex: this.payload.idx + 1, startColumnIndex: 0 }\n        let url = new URL(`https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}:batchUpdate`)\n        let headers = { Authorization: `Bearer ${token}` }\n        let body = JSON.stringify({ requests: [{ deleteRange: { range: range, shiftDimension: \"ROWS\" } }] })\n        let opts: RequestInit = { method: \"POST\", cache: \"no-cache\", headers: headers, body: body }\n        let response = await fetch(url.toString(), opts)\n        if (!response.ok) {\n            let error: GapiErrorResponse = await response.json()\n            throw new SyncerError(JSON.stringify(error), `Failed to delete row: ${this.payload.idx}`, response.status === 401)\n        }\n        return this.payload\n    }\n}","import { BaseTask } from \"./BaseTask\"\nimport { SyncerError, GapiErrorResponse, GetSpreadsheetPayload, TestMode } from \"../../../types\"\n\nexport function createGetSpreadsheetTask<P extends GetSpreadsheetPayload>(payload: P, testMode: TestMode): BaseTask<P> | undefined {\n    return (testMode === TestMode.OFF)\n        ? new GetSpreadsheetTask(payload)\n        : undefined // new MockGetSpreadsheetTask(payload, testMode)\n}\n\nexport class GetSpreadsheetTask<P extends GetSpreadsheetPayload> extends BaseTask<P> {\n    constructor(payload: P) {\n        super(payload)\n        this.async = true\n    }\n\n    public async work(token: string): Promise<P> {\n        let url = `https://sheets.googleapis.com/v4/spreadsheets/${this.payload.spreadsheetId}`\n        let headers = { Authorization: `Bearer ${token}` }\n        let opts: RequestInit = { method: \"GET\", cache: \"no-cache\", headers: headers }\n        let response = await fetch(url, opts)\n        if (!response.ok) {\n            let error: GapiErrorResponse = await response.json()\n            throw new SyncerError(\n                JSON.stringify(error),\n                `Error: Could not download spreadsheet.`,\n                response.status === 401,\n                false\n            )\n        } else {\n            this.payload.spreadsheet = await response.json()\n        }\n        return this.payload\n    }\n}\n","import { SyncerPayload, SyncerPayloadType, SyncerState } from \"../../types\"\n\nexport function postSyncStateMessage(length: number, state: SyncerState) {\n    postResponse({\n        length: length,\n        state: state,\n        type: SyncerPayloadType.SYNC_STATE\n    })\n}\n\nexport function postTokenRequestMessage() {\n    postMessage({ type: SyncerPayloadType.TOKEN_REQUEST })\n}\n\nfunction postResponse(payload: SyncerPayload) {\n    postMessage({payload})\n}\n"],"sourceRoot":""}